{"version":3,"file":"callback.component.js","sourceRoot":"","sources":["../../../../src/okta/components/callback.component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;GAUG;;AAEH,OAAO,EAAE,SAAS,EAAU,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAC9E,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAC9C,OAAO,EAAE,WAAW,EAAc,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAK3E;IAGE,+BAC+B,MAAkB,EACpB,QAAkB,EACzB,QAAmB;QAFV,WAAM,GAAN,MAAM,CAAY;QACpB,aAAQ,GAAR,QAAQ,CAAU;QACzB,aAAQ,GAAR,QAAQ,CAAW;IACtC,CAAC;IAEE,wCAAQ,GAAd;;;;;;;wBAEI,4GAA4G;wBAC5G,qBAAM,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,EAAA;;wBADzC,4GAA4G;wBAC5G,SAAyC,CAAC;;;;wBAKpC,0BAA0B,GAAG,IAAI,CAAC,QAAQ,CAAC,0BAA0B,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC;wBAC5H,IAAI,0BAA0B,CAAC,GAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;4BAC5C,KAAmC,IAAI,CAAC,MAAM,EAA5C,YAAY,kBAAA,EAAE,cAAc,oBAAA,CAAiB;4BAC/C,UAAU,GAAG,YAAY,IAAI,cAAc,CAAC;4BAClD,IAAI,UAAU,EAAE;gCACd,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gCACzC,sBAAO;6BACR;yBACF;wBACD,IAAI,CAAC,KAAK,GAAG,GAAC,CAAC,QAAQ,EAAE,CAAC;;;;;;KAE7B;IA5BU,qBAAqB;QAHjC,SAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;SACjC,CAAC;QAKG,mBAAA,MAAM,CAAC,WAAW,CAAC,CAAA;QACnB,mBAAA,MAAM,CAAC,SAAS,CAAC,CAAA;QACjB,mBAAA,QAAQ,EAAE,CAAA;yDAD0B,QAAQ;YACd,QAAQ;OAN9B,qBAAqB,CA6BjC;IAAD,4BAAC;CAAA,AA7BD,IA6BC;SA7BY,qBAAqB","sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit, Optional, Injector, Inject } from '@angular/core';\nimport { OktaAuth } from '@okta/okta-auth-js';\nimport { OKTA_CONFIG, OktaConfig, OKTA_AUTH } from '../models/okta.config';\n\n@Component({\n  template: `<div>{{error}}</div>`\n})\nexport class OktaCallbackComponent implements OnInit {\n  error: string;\n\n  constructor(\n    @Inject(OKTA_CONFIG) private config: OktaConfig,\n    @Inject(OKTA_AUTH) private oktaAuth: OktaAuth,\n    @Optional() private injector?: Injector\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n      await this.oktaAuth.handleLoginRedirect();\n    } catch (e) {\n      // Callback from social IDP. Show custom login page to continue.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore Supports auth-js v5 & v6\n      const isInteractionRequiredError = this.oktaAuth.isInteractionRequiredError || this.oktaAuth.idx.isInteractionRequiredError;\n      if (isInteractionRequiredError(e) && this.injector) {\n        const { onAuthResume, onAuthRequired } = this.config;\n        const callbackFn = onAuthResume || onAuthRequired;\n        if (callbackFn) {\n          callbackFn(this.oktaAuth, this.injector);\n          return;\n        }\n      }\n      this.error = e.toString();\n    }\n  }\n}\n"]}