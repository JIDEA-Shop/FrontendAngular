{"version":3,"file":"has-any-group.directive.js","sourceRoot":"","sources":["../../package/src/okta/has-any-group.directive.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AAChF,OAAO,EAAE,oBAAoB,EAAU,MAAM,+BAA+B,CAAC;AAG7E,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAGnC;IACE,8DAA8D;IACtD,WAA6B,EAC7B,aAA+B,EAC/B,gBAAsC;QAFtC,gBAAW,GAAX,WAAW,CAAkB;QAC7B,kBAAa,GAAb,aAAa,CAAkB;QAC/B,qBAAgB,GAAhB,gBAAgB,CAAsB;IAC5C,CAAC;IAEI,IAAI,eAAe,CAAC,MAAc;QACzC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,CAAC;aACvC,SAAS,CAAC,YAAY,CAAC,EAAE;YACxB,qCAAqC;YACrC,IAAI,YAAY,KAAK,IAAI,CAAC,oBAAoB,EAAE;gBAC9C,OAAO;aACR;YACD,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;YACzC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAC3B,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACzD;QACH,CAAC,CAAC,CAAC;IACP,CAAC;CACF,CAAA;AAdU;IAAR,KAAK,EAAE;;;+DAaP;AAvBU,wBAAwB;IADpC,SAAS,CAAC,EAAE,QAAQ,EAAE,mBAAmB,EAAC,CAAC;6CAMnB,WAAW;QACT,gBAAgB;QACb,oBAAoB;GAPrC,wBAAwB,CAwBpC;SAxBY,wBAAwB","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { OktaAuthStateService, Groups } from './services/auth-state.service';\n\n@Directive({ selector: '[oktaHasAnyGroup]'})\nexport class OktaHasAnyGroupDirective {\n  private previousIsAuthorized: boolean;\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private authStateService: OktaAuthStateService\n  ) { }\n\n  @Input() set oktaHasAnyGroup(groups: Groups) {\n    this.authStateService.hasAnyGroups(groups)\n      .subscribe(isAuthorized => {\n        // don't update UI if no state change\n        if (isAuthorized === this.previousIsAuthorized) {\n          return;\n        }\n        this.previousIsAuthorized = isAuthorized;\n        this.viewContainer.clear();\n        if (isAuthorized) {\n          this.viewContainer.createEmbeddedView(this.templateRef);\n        }\n      });\n  }\n}\n"]}