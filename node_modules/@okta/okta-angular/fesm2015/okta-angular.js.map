{"version":3,"file":"okta-angular.js","sources":["../package/src/okta/models/okta.config.ts","../package/src/okta/components/callback.component.ts","../package/src/okta/okta.guard.ts","../package/src/okta/services/auth-state.service.ts","../package/src/okta/has-any-group.directive.ts","../package/src/okta/packageInfo.ts","../package/src/okta/okta.module.ts"],"sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { InjectionToken, Injector } from '@angular/core';\nimport { OktaAuth } from '@okta/okta-auth-js';\n\nexport type AuthRequiredFunction = (oktaAuth: OktaAuth, injector: Injector) => void;\n\nexport interface TestingObject {\n  disableHttpsCheck: boolean;\n}\n\nexport interface OktaConfig {\n  oktaAuth: OktaAuth;\n  onAuthRequired?: AuthRequiredFunction;\n  onAuthResume?: AuthRequiredFunction;\n  testing?: TestingObject;\n}\n\nexport const OKTA_CONFIG = new InjectionToken<OktaConfig>('okta.config.angular');\nexport const OKTA_AUTH = new InjectionToken<OktaAuth>('okta.auth');\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit, Optional, Injector, Inject } from '@angular/core';\nimport { OktaAuth } from '@okta/okta-auth-js';\nimport { OKTA_CONFIG, OktaConfig, OKTA_AUTH } from '../models/okta.config';\n\n@Component({\n  template: `<div>{{error}}</div>`\n})\nexport class OktaCallbackComponent implements OnInit {\n  error: string;\n\n  constructor(\n    @Inject(OKTA_CONFIG) private config: OktaConfig,\n    @Inject(OKTA_AUTH) private oktaAuth: OktaAuth,\n    @Optional() private injector?: Injector\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n      await this.oktaAuth.handleLoginRedirect();\n    } catch (e) {\n      // Callback from social IDP. Show custom login page to continue.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore Supports auth-js v5 & v6\n      const isInteractionRequiredError = this.oktaAuth.isInteractionRequiredError || this.oktaAuth.idx.isInteractionRequiredError;\n      if (isInteractionRequiredError(e) && this.injector) {\n        const { onAuthResume, onAuthRequired } = this.config;\n        const callbackFn = onAuthResume || onAuthRequired;\n        if (callbackFn) {\n          callbackFn(this.oktaAuth, this.injector);\n          return;\n        }\n      }\n      this.error = e.toString();\n    }\n  }\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Injectable, Injector, Inject } from '@angular/core';\nimport {\n  CanActivate,\n  CanActivateChild,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n  NavigationStart, \n  Event,\n  CanLoad,\n  Route,\n  UrlSegment\n} from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { OktaAuth, AuthState } from '@okta/okta-auth-js';\n\nimport { AuthRequiredFunction, OktaConfig, OKTA_CONFIG, OKTA_AUTH } from './models/okta.config';\n\n@Injectable()\nexport class OktaAuthGuard implements CanActivate, CanActivateChild, CanLoad {\n  private state: RouterStateSnapshot;\n  private onAuthRequired?: AuthRequiredFunction;\n\n\n  constructor(\n    @Inject(OKTA_CONFIG) private config: OktaConfig, \n    @Inject(OKTA_AUTH) private oktaAuth: OktaAuth, \n    private injector: Injector\n  ) { \n    this.onAuthRequired = this.config.onAuthRequired;\n\n    // Unsubscribe updateAuthStateListener when route change\n    const router = injector.get(Router);\n    router.events.pipe(\n      filter((e: Event) => e instanceof NavigationStart && this.state && this.state.url !== e.url)\n    ).subscribe(() => {\n      this.oktaAuth.authStateManager.unsubscribe(this.updateAuthStateListener);\n    });\n  }\n\n  async canLoad(route: Route, segments: UrlSegment[]): Promise<boolean> {\n    this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n\n    const isAuthenticated = await this.oktaAuth.isAuthenticated();\n    if (isAuthenticated) {\n      return true;\n    }\n\n    const originalUri = segments[0].path;\n    await this.handleLogin(originalUri);\n\n    return false;\n  }\n\n  /**\n   * Gateway for protected route. Returns true if there is a valid accessToken,\n   * otherwise it will cache the route and start the login flow.\n   * @param route\n   * @param state\n   */\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    // Track states for current route\n    this.state = state;\n    this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n\n    // Protect the route after accessing\n    this.oktaAuth.authStateManager.subscribe(this.updateAuthStateListener);\n    const isAuthenticated = await this.oktaAuth.isAuthenticated();\n    if (isAuthenticated) {\n      return true;\n    }\n\n    await this.handleLogin(state.url);\n\n    return false;\n  }\n\n  async canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean> {\n    return this.canActivate(route, state);\n  }\n\n  private async handleLogin(originalUri: string): Promise<void> {\n    // Store the current path\n    this.oktaAuth.setOriginalUri(originalUri);\n\n    if (this.onAuthRequired) {\n      this.onAuthRequired(this.oktaAuth, this.injector);\n    } else {\n      this.oktaAuth.signInWithRedirect();\n    }\n  }\n\n  private updateAuthStateListener = (authState: AuthState) => {\n    if (!authState.isAuthenticated) {\n      this.handleLogin(this.state.url);\n    }\n  };\n\n}\n","import { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { AuthState, OktaAuth, UserClaims } from '@okta/okta-auth-js';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { OKTA_AUTH } from '../models/okta.config';\n\nconst defaultAuthState = {\n  isAuthenticated: false\n};\n\nexport type Groups = string | string[] | { [key: string]: string[] };\n\n@Injectable()\nexport class OktaAuthStateService implements OnDestroy {\n  private _authState: BehaviorSubject<AuthState> = new BehaviorSubject<AuthState>(defaultAuthState);\n  \n  // only expose readonly property\n  public readonly authState$: Observable<AuthState> = this._authState.asObservable();\n\n  constructor(@Inject(OKTA_AUTH) private oktaAuth: OktaAuth) {\n    this.updateAuthState = this.updateAuthState.bind(this);\n\n    // set initial authState\n    const initialAuthState = this.oktaAuth.authStateManager.getAuthState() || defaultAuthState;\n    this._authState.next(initialAuthState);\n\n    // subscribe to future changes\n    this.oktaAuth.authStateManager.subscribe(this.updateAuthState);\n  }\n\n  ngOnDestroy(): void {\n    this.oktaAuth.authStateManager.unsubscribe(this.updateAuthState);\n  }\n\n  // Observes as true when any group input can match groups from user claims \n  hasAnyGroups(groups: Groups): Observable<boolean> {\n    return this.authState$.pipe(\n      mergeMap(async ({ isAuthenticated, idToken }) => {\n        // return false when not authenticated or openid is not in scopes\n        if (!isAuthenticated || !idToken) {\n          return false;\n        }\n\n        // transform inputs to consistent object format\n        if (typeof groups === 'string') {\n          groups = { groups: [groups] };\n        }\n        if (Array.isArray(groups)) {\n          groups = { groups };\n        }\n\n        const key = Object.keys(groups)[0] as keyof UserClaims;\n        const value = groups[key];\n\n        // groups or custom claims is available in idToken\n        if (idToken.claims[key]) {\n          return value.some((authority: string) => (idToken.claims[key] as unknown as string[]).includes(authority));\n        }\n\n        // try /userinfo endpoint when thin idToken (no groups claim) is returned\n        // https://developer.okta.com/docs/concepts/api-access-management/#tokens-and-scopes\n        const userInfo = await this.oktaAuth.getUser();\n        if (!userInfo[key]) {\n          return false;\n        }\n        return value.some((authority: string) => (userInfo[key] as unknown as string[]).includes(authority));\n      })\n    );\n  }\n\n  private updateAuthState(authState: AuthState): void {\n    this._authState.next(authState);\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { OktaAuthStateService, Groups } from './services/auth-state.service';\n\n@Directive({ selector: '[oktaHasAnyGroup]'})\nexport class OktaHasAnyGroupDirective {\n  private previousIsAuthorized: boolean;\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private authStateService: OktaAuthStateService\n  ) { }\n\n  @Input() set oktaHasAnyGroup(groups: Groups) {\n    this.authStateService.hasAnyGroups(groups)\n      .subscribe(isAuthorized => {\n        // don't update UI if no state change\n        if (isAuthorized === this.previousIsAuthorized) {\n          return;\n        }\n        this.previousIsAuthorized = isAuthorized;\n        this.viewContainer.clear();\n        if (isAuthorized) {\n          this.viewContainer.createEmbeddedView(this.templateRef);\n        }\n      });\n  }\n}\n","export default {\n  'name': '@okta/okta-angular',\n  'version': '5.2.0',\n  'authJSMinSupportedVersion': '5.3.1'\n};\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { NgModule, Inject, Optional, VERSION } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaCallbackComponent } from './components/callback.component';\nimport { OktaAuthGuard } from './okta.guard';\nimport { OktaAuthStateService } from './services/auth-state.service';\nimport { OktaHasAnyGroupDirective } from './has-any-group.directive';\nimport { OktaConfig, OKTA_CONFIG, OKTA_AUTH } from './models/okta.config';\nimport { AuthSdkError, OktaAuth, toRelativeUrl } from '@okta/okta-auth-js';\nimport { compare } from 'compare-versions';\nimport packageInfo from './packageInfo';\n\nexport function oktaAuthFactory(config: OktaConfig): OktaAuth {\n  return config.oktaAuth;\n}\n\n@NgModule({\n  declarations: [\n    OktaCallbackComponent,\n    OktaHasAnyGroupDirective,\n  ],\n  exports: [\n    OktaCallbackComponent,\n    OktaHasAnyGroupDirective,\n  ],\n  providers: [\n    OktaAuthGuard,\n    OktaAuthStateService,\n    {\n      provide: OKTA_AUTH,\n      useFactory: oktaAuthFactory,\n      deps: [ OKTA_CONFIG ]\n    },\n  ]\n})\nexport class OktaAuthModule {\n  constructor(\n    @Inject(OKTA_CONFIG) config: OktaConfig, \n    @Optional() location?: Location, \n    @Optional() router?: Router\n  ) {\n    const { oktaAuth } = config;\n\n    const isAuthJsSupported = oktaAuth._oktaUserAgent && compare(oktaAuth._oktaUserAgent.getVersion(), packageInfo.authJSMinSupportedVersion, '>=');\n    if (!isAuthJsSupported) {\n      throw new AuthSdkError(`Passed in oktaAuth is not compatible with the SDK, minimum supported okta-auth-js version is ${packageInfo.authJSMinSupportedVersion}.`);\n    }\n\n    // Add Okta UA\n    oktaAuth._oktaUserAgent.addEnvironment(`${packageInfo.name}/${packageInfo.version}`);\n    oktaAuth._oktaUserAgent.addEnvironment(`Angular/${VERSION.full}`);\n\n    // Provide a default implementation of `restoreOriginalUri`\n    if (!oktaAuth.options.restoreOriginalUri && router && location) {\n      oktaAuth.options.restoreOriginalUri = async (_, originalUri: string | undefined) => {\n        const baseUrl = window.location.origin + location.prepareExternalUrl('');\n        const routePath = toRelativeUrl(originalUri || '/', baseUrl);\n        router.navigateByUrl(routePath);\n      };\n    }\n\n    // Start services\n    oktaAuth.start();\n  }\n\n}\n"],"names":["tslib_1.__param","tslib_1.__decorate"],"mappings":"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"}