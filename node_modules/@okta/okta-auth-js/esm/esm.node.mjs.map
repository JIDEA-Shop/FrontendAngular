{"version":3,"file":"esm.node.mjs","sources":["../../lib/errors/CustomError.ts","../../lib/errors/AuthApiError.ts","../../lib/errors/AuthPollStopError.ts","../../lib/errors/AuthSdkError.ts","../../lib/errors/OAuthError.ts","../../lib/errors/index.ts","../../lib/crypto/node.ts","../../lib/crypto/base64.ts","../../lib/crypto/oidcHash.ts","../../lib/util/console.ts","../../lib/util/misc.ts","../../lib/util/object.ts","../../lib/util/types.ts","../../lib/util/url.ts","../../lib/crypto/verifyToken.ts","../../lib/constants.ts","../../lib/http/headers.ts","../../lib/http/request.ts","../../lib/tx/util.ts","../../lib/tx/poll.ts","../../lib/tx/AuthTransaction.ts","../../lib/tx/api.ts","../../lib/oidc/util/pkce.ts","../../lib/session.ts","../../lib/oidc/endpoints/authorize.ts","../../lib/oidc/endpoints/token.ts","../../lib/oidc/endpoints/well-known.ts","../../lib/oidc/util/browser.ts","../../lib/oidc/util/oauth.ts","../../lib/features.ts","../../lib/oidc/util/defaultTokenParams.ts","../../lib/oidc/util/errors.ts","../../lib/oidc/util/loginRedirect.ts","../../lib/oidc/util/oauthMeta.ts","../../lib/oidc/util/prepareTokenParams.ts","../../lib/oidc/util/refreshToken.ts","../../lib/oidc/util/urlParams.ts","../../lib/oidc/util/validateClaims.ts","../../lib/types/Transaction.ts","../../lib/idx/types/index.ts","../../lib/types/Token.ts","../../lib/oidc/util/validateToken.ts","../../lib/oidc/decodeToken.ts","../../lib/oidc/revokeToken.ts","../../lib/oidc/exchangeCodeForTokens.ts","../../lib/oidc/verifyToken.ts","../../lib/oidc/handleOAuthResponse.ts","../../lib/oidc/getToken.ts","../../lib/oidc/getWithoutPrompt.ts","../../lib/oidc/renewTokensWithRefresh.ts","../../lib/oidc/renewToken.ts","../../lib/oidc/renewTokens.ts","../../lib/oidc/getUserInfo.ts","../../lib/oidc/getWithPopup.ts","../../lib/oidc/getWithRedirect.ts","../../lib/oidc/parseFromUrl.ts","../../lib/crypto/webauthn.ts","../../lib/browser/browserStorage.ts","../../lib/clock.ts","../../lib/TokenManager.ts","../../lib/services/AutoRenewService.ts","../../lib/services/SyncStorageService.ts","../../lib/ServiceManager.ts","../../lib/PromiseQueue.ts","../../lib/browser/fingerprint.ts","../../lib/AuthStateManager.ts","../../lib/SavedObject.ts","../../lib/StorageManager.ts","../../lib/idx/types/idx-js.ts","../../lib/util/sharedStorage.ts","../../lib/TransactionManager.ts","../../lib/builderUtil.ts","../../lib/fetch/fetchRequest.ts","../../lib/server/serverStorage.ts","../../lib/options/node.ts","../../lib/options/index.ts","../../lib/idx/transactionMeta.ts","../../lib/idx/interact.ts","../../lib/idx/idxState/v1/actionParser.ts","../../lib/idx/idxState/v1/generateIdxAction.ts","../../lib/idx/idxState/v1/remediationParser.ts","../../lib/idx/idxState/v1/idxResponseParser.ts","../../lib/idx/idxState/v1/makeIdxState.ts","../../lib/idx/idxState/v1/parsers.ts","../../lib/idx/idxState/index.ts","../../lib/idx/introspect.ts","../../lib/idx/remediators/util.ts","../../lib/idx/authenticator/util.ts","../../lib/idx/remediators/Base/Remediator.ts","../../lib/idx/authenticator/Authenticator.ts","../../lib/idx/authenticator/VerificationCodeAuthenticator.ts","../../lib/idx/authenticator/OktaVerifyTotp.ts","../../lib/idx/authenticator/OktaPassword.ts","../../lib/idx/authenticator/SecurityQuestionEnrollment.ts","../../lib/idx/authenticator/SecurityQuestionVerification.ts","../../lib/idx/authenticator/WebauthnEnrollment.ts","../../lib/idx/authenticator/WebauthnVerification.ts","../../lib/idx/authenticator/getAuthenticator.ts","../../lib/idx/remediators/Base/VerifyAuthenticator.ts","../../lib/idx/remediators/EnrollAuthenticator.ts","../../lib/idx/remediators/EnrollPoll.ts","../../lib/idx/remediators/SelectEnrollmentChannel.ts","../../lib/idx/remediators/EnrollmentChannelData.ts","../../lib/idx/remediators/ChallengeAuthenticator.ts","../../lib/idx/remediators/ChallengePoll.ts","../../lib/idx/remediators/ResetAuthenticator.ts","../../lib/idx/remediators/EnrollProfile.ts","../../lib/idx/remediators/Identify.ts","../../lib/idx/remediators/ReEnrollAuthenticator.ts","../../lib/idx/remediators/RedirectIdp.ts","../../lib/idx/remediators/Base/SelectAuthenticator.ts","../../lib/idx/remediators/SelectAuthenticatorAuthenticate.ts","../../lib/idx/remediators/SelectAuthenticatorEnroll.ts","../../lib/idx/remediators/SelectAuthenticatorUnlockAccount.ts","../../lib/idx/remediators/SelectEnrollProfile.ts","../../lib/idx/remediators/Base/AuthenticatorData.ts","../../lib/idx/remediators/AuthenticatorVerificationData.ts","../../lib/idx/remediators/AuthenticatorEnrollmentData.ts","../../lib/idx/remediators/Skip.ts","../../lib/idx/util.ts","../../lib/idx/remediate.ts","../../lib/idx/flow/AuthenticationFlow.ts","../../lib/idx/flow/PasswordRecoveryFlow.ts","../../lib/idx/flow/RegistrationFlow.ts","../../lib/idx/flow/AccountUnlockFlow.ts","../../lib/idx/flow/FlowSpecification.ts","../../lib/idx/run.ts","../../lib/idx/authenticate.ts","../../lib/idx/cancel.ts","../../lib/idx/emailVerify.ts","../../lib/idx/proceed.ts","../../lib/idx/poll.ts","../../lib/idx/startTransaction.ts","../../lib/idx/register.ts","../../lib/idx/recoverPassword.ts","../../lib/idx/handleInteractionCodeRedirect.ts","../../lib/idx/unlockAccount.ts","../../lib/OktaUserAgent.ts","../../lib/OktaAuth.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class CustomError extends Error {\n  constructor(message: string) {\n    // https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, HttpResponse } from '../types';\n\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: string[];\n  xhr?: HttpResponse;\n\n  constructor(err: APIError, xhr?: HttpResponse) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class AuthPollStopError extends CustomError {\n  constructor() {\n    const message = 'The poll was stopped by the sdk';\n    super(message);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError } from '../types';\n\nexport default class AuthSdkError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode: string;\n  errorLink: string;\n  errorId: string;\n  errorCauses: string[];\n  xhr?: XMLHttpRequest;\n\n  constructor(msg: string, xhr?: XMLHttpRequest) {\n    super(msg);\n    this.name = 'AuthSdkError';\n    this.errorCode = 'INTERNAL';\n    this.errorSummary = msg;\n    this.errorLink = 'INTERNAL';\n    this.errorId = 'INTERNAL';\n    this.errorCauses = [];\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/* eslint-disable camelcase */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class OAuthError extends CustomError {\n  errorCode: string;\n  errorSummary: string;\n\n  // for widget / idx-js backward compatibility\n  error: string;\n  error_description: string;\n\n  constructor(errorCode: string, summary: string) {\n    super(summary);\n\n    this.name = 'OAuthError';\n    this.errorCode = errorCode;\n    this.errorSummary = summary;\n\n    // for widget / idx-js backward compatibility\n    this.error = errorCode;\n    this.error_description = summary;\n  }\n}\n\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from './AuthApiError';\nimport AuthPollStopError from './AuthPollStopError';\nimport AuthSdkError from './AuthSdkError';\nimport OAuthError from './OAuthError';\n\nfunction isAuthApiError(obj: any): obj is AuthApiError {\n  return (obj instanceof AuthApiError);\n}\n\nexport {\n  isAuthApiError,\n  AuthApiError,\n  AuthPollStopError,\n  AuthSdkError,\n  OAuthError\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global atob, btoa */\n\n// Ponyfill for NodeJS\n// Webpack config excludes this file\n\nimport atobModule from 'atob';\nimport btoaModule from 'btoa';\nimport { Crypto } from '@peculiar/webcrypto';\n\nlet a;\nif (typeof atob !== 'undefined') {\n  a = atob;\n} else {\n  a = atobModule;\n}\nexport { a as atob };\n\n\nlet b;\nif (typeof btoa !== 'undefined') {\n  b = btoa;\n} else {\n  b = btoaModule;\n}\nexport { b as btoa };\n\nconst crypto = (async () => {\n  try {\n    return await import('crypto');\n  } catch (err) {\n    // this environment has no crypto module!\n    return undefined;\n  }\n})();\n\nlet webcrypto;\nif (typeof crypto !== 'undefined' && crypto['webcrypto']) {\n  webcrypto = crypto['webcrypto'];\n} else {\n  webcrypto = new Crypto();\n}\n\nexport { webcrypto };\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthSdkError } from '../errors';\nimport { atob, btoa } from './webcrypto';\n\n// converts a string to base64 (url/filename safe variant)\nexport function stringToBase64Url(str) {\n  var b64 = btoa(str);\n  return base64ToBase64Url(b64);\n}\n\n// converts a standard base64-encoded string to a \"url/filename safe\" variant\nexport function base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n// converts a \"url/filename safe\" base64 string to a \"standard\" base64 string\nexport function base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nexport function base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n  switch (b64.length % 4) {\n    case 0:\n      break;\n    case 2:\n      b64 += '==';\n      break;\n    case 3:\n      b64 += '=';\n      break;\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n  var utf8 = atob(b64);\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\n\nexport function stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function base64UrlDecode(str) {\n  return atob(base64UrlToBase64(str));\n}\n\n// Converts base64 string to binary data view\nexport function base64UrlToBuffer(b64u) {\n  return Uint8Array.from(base64UrlDecode(b64u), (c: string) => c.charCodeAt(0));\n}\n\n// Converts an ArrayBuffer object that contains binary data to base64 encoded string\nexport function bufferToBase64Url(bin) {\n  return btoa(new Uint8Array(bin).reduce((s, byte) => s + String.fromCharCode(byte), ''));\n}\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global TextEncoder */\nimport { stringToBase64Url } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function getOidcHash(str) {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = intBuffer.slice(0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nexport function getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\n\nexport function getConsole() {\n  var nativeConsole = getNativeConsole();\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n  return {\n    log: function() {},\n    warn: function() {},\n    group: function() {},\n    groupEnd: function() {}\n  };\n}\n\nexport function warn(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecate(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecateWrap(text, fn) {\n  return function() {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n      isoDate = new Date(isoTime);\n\n  return isoDate.toUTCString();\n}\n\nexport function genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n  return random;\n}\n\nexport function delay(ms) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function bind(fn, ctx) {\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    args = additionalArgs.concat(args);\n    return fn.apply(ctx, args);\n  };\n}\n\n// TODO: replace all references with `Object.assign` then remove this function\nexport function extend() {\n  // First object will be modified!\n  var obj1 = arguments[0];\n  // Properties from other objects will be copied over\n  var objArray = [].slice.call(arguments, 1);\n  objArray.forEach(function(obj) {\n    for (var prop in obj) {\n      // copy over all properties with defined values\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1; // return the modified object\n}\n\nexport function removeNils(obj) {\n  var cleaned = {};\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n  return cleaned;\n}\n\nexport function clone(obj) {\n  if (obj) {\n    var str = JSON.stringify(obj);\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n  return obj;\n}\n\n// Analogous to _.omit\nexport function omit(obj, ...props: any[]) {\n  // var props = Array.prototype.slice.call(arguments, 1);\n  var newobj = {};\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && props.indexOf(p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n  return clone(newobj);\n}\n\nexport function find(collection, searchParams) {\n  var c = collection.length;\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) {\n      return item;\n    }\n  }\n}\n\nexport function getLink(obj, linkName, altName?) {\n  if (!obj || !obj._links) {\n    return;\n  }\n\n  var link = clone(obj._links[linkName]);\n\n  // If a link has a name and we have an altName, return if they match\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isString(obj: any): obj is string {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nexport function isObject(obj: any): obj is object {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isNumber(obj: any): obj is number {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\n\nexport function isFunction(fn: any): fn is (...any: any[]) => any {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\n\nexport function isPromise(obj) {\n  return obj && obj.finally && (typeof obj.finally === 'function');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^(?:[a-z]+:)?\\/\\//i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]) as never);\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util';\nimport { stringToBuffer, base64UrlDecode } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function verifyToken(idToken, key) {\n  key = clone(key);\n\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: 'SHA-256' }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n\n  // https://connect.microsoft.com/IE/feedback/details/2242108/webcryptoapi-importing-jwk-with-use-field-fails\n  // This is a metadata tag that specifies the intent of how the key should be used.\n  // It's not necessary to properly verify the jwt's signature.\n  delete key.use;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return webcrypto.subtle.importKey(\n    format,\n    key,\n    algo,\n    extractable,\n    usages\n  )\n  .then(function(cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n\n    return webcrypto.subtle.verify(\n      algo,\n      cryptoKey,\n      signature,\n      payload\n    );\n  });\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport const STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nexport const DEFAULT_POLLING_DELAY = 500;\nexport const DEFAULT_MAX_CLOCK_SKEW = 300;\nexport const DEFAULT_CACHE_DURATION = 86400;\nexport const REDIRECT_OAUTH_PARAMS_NAME = 'okta-oauth-redirect-params';\nexport const REDIRECT_STATE_COOKIE_NAME = 'okta-oauth-state';\nexport const REDIRECT_NONCE_COOKIE_NAME = 'okta-oauth-nonce';\nexport const TOKEN_STORAGE_NAME = 'okta-token-storage';\nexport const CACHE_STORAGE_NAME = 'okta-cache-storage';\nexport const PKCE_STORAGE_NAME = 'okta-pkce-storage';\nexport const TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nexport const SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nexport const ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nexport const IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nexport const ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nexport const ID_TOKEN_STORAGE_KEY =  'idToken';\nexport const REFRESH_TOKEN_STORAGE_KEY =  'refreshToken';\nexport const REFERRER_PATH_STORAGE_KEY = 'referrerPath';\n\n// Code verifier: Random URL-safe string with a minimum length of 43 characters.\n// Code challenge: Base64 URL-encoded SHA-256 hash of the code verifier.\nexport const MIN_VERIFIER_LENGTH = 43;\nexport const MAX_VERIFIER_LENGTH = 128;\nexport const DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\n\nexport const IDX_API_VERSION = '1.0.0';","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthInterface } from '../types';\n\nexport function setRequestHeader(authClient: OktaAuthInterface, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity */\nimport { isString, clone, isAbsoluteUrl, removeNils } from '../util';\nimport { STATE_TOKEN_KEY_NAME, DEFAULT_CACHE_DURATION } from '../constants';\nimport { OktaAuthInterface, RequestOptions, FetchOptions, RequestData } from '../types';\nimport { AuthApiError, OAuthError } from '../errors';\n\nexport function httpRequest(sdk: OktaAuthInterface, options: RequestOptions): Promise<any> {\n  options = options || {};\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true, // default value is false\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil!.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url as string];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers: HeadersInit = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    ...oktaUserAgentHeader\n  };\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers) as HeadersInit;\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions: FetchOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n\n  var err, res;\n  return sdk.options.httpRequestClient!(method!, url!, ajaxOptions)\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && isString(res)) {\n        res = JSON.parse(res);\n        if (res && typeof res === 'object' && !res.headers) {\n          res.headers = resp.headers;\n        }\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          storage.delete(STATE_TOKEN_KEY_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies!);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url!, {\n          expiresAt: Math.floor(Date.now()/1000) + DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n\n      return res;\n    })\n    .catch(function(resp) {\n      var serverErr = resp.responseText || {};\n      if (isString(serverErr)) {\n        try {\n          serverErr = JSON.parse(serverErr);\n        } catch (e) {\n          serverErr = {\n            errorSummary: 'Unknown error'\n          };\n        }\n      }\n\n      if (resp.status >= 500) {\n        serverErr.errorSummary = 'Unknown error';\n      }\n\n      if (sdk.options.transformErrorXHR) {\n        resp = sdk.options.transformErrorXHR(clone(resp));\n      }\n\n      if (serverErr.error && serverErr.error_description) {\n        err = new OAuthError(serverErr.error, serverErr.error_description);\n      } else {\n        err = new AuthApiError(serverErr, resp);\n      }\n\n      if (err.errorCode === 'E0000011') {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n\n      throw err;\n    });\n}\n\nexport function get(sdk: OktaAuthInterface, url: string, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nexport function post(sdk: OktaAuthInterface, url: string, args?: RequestData, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n\nimport { TransactionState } from './TransactionState';\n\nexport function addStateToken(res, options?) {\n  var builtArgs = {} as TransactionState;\n  Object.assign(builtArgs, options);\n\n  // Add the stateToken if one isn't passed and we have one\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n\n  return builtArgs;\n}\n\nexport function getStateToken(res) {\n  return addStateToken(res);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { post } from '../http';\nimport { isNumber, isObject, getLink, toQueryString, delay as delayFn } from '../util';\nimport { DEFAULT_POLLING_DELAY } from '../constants';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport AuthPollStopError from '../errors/AuthPollStopError';\nimport { TransactionState } from './TransactionState';\nimport { AuthTransaction } from './AuthTransaction';\nimport { getStateToken } from './util';\n\nexport interface PollOptions {\n  delay?: number;\n  rememberDevice?: boolean;\n  autoPush?: boolean;\n  transactionCallBack?: (TransactionState) => void;\n}\n\nexport function getPollFn(sdk, res: TransactionState, ref) {\n  return function (options: PollOptions | number) {\n    var delay;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay = options;\n    } else if (isObject(options)) {\n      options = options as PollOptions;\n      delay = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay && delay !== 0) {\n      delay = DEFAULT_POLLING_DELAY;\n    }\n\n    // Get the poll function\n    var pollLink = getLink(res, 'next', 'poll');\n    // eslint-disable-next-line complexity\n    function pollFn() {\n      var opts = {} as PollOptions;\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      }\n      else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      }\n      else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true\n      });\n    }\n\n    ref.isPolling = true;\n\n    var retryCount = 0;\n    var recursivePoll = function () {\n      // If the poll was manually stopped during the delay\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n      return pollFn()\n        .then(function (pollRes) {\n          // Reset our retry counter on success\n          retryCount = 0;\n\n          // If we're still waiting\n          if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n\n            // If the poll was manually stopped while the pollFn was called\n            if (!ref.isPolling) {\n              throw new AuthPollStopError();\n            }\n\n            if (typeof transactionCallBack === 'function') {\n              transactionCallBack(pollRes);\n            }\n\n            // Continue poll\n            return delayFn(delay).then(recursivePoll);\n\n          } else {\n            // Any non-waiting result, even if polling was stopped\n            // during a request, will return\n            ref.isPolling = false;\n            return new AuthTransaction(sdk, pollRes);\n          }\n        })\n        .catch(function(err) {\n          // Exponential backoff, up to 16 seconds\n          if (err.xhr &&\n              (err.xhr.status === 0 || err.xhr.status === 429) &&\n              retryCount <= 4) {\n            var delayLength = Math.pow(2, retryCount) * 1000;\n            retryCount++;\n            return delayFn(delayLength)\n              .then(recursivePoll);\n          }\n          throw err;\n        });\n    };\n    return recursivePoll()\n      .catch(function(err) {\n        ref.isPolling = false;\n        throw err;\n      });\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { get } from '../http';\nimport { find, omit, toQueryString, clone, isObject } from '../util';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { TransactionState } from './TransactionState';\nimport { addStateToken } from './util';\nimport { getPollFn } from './poll';\nimport { postToTransaction } from './api';\nimport { IdxStatus } from '../idx/types';\n\ninterface PostToTransactionParams {\n  autoPush?: boolean;\n  rememberDevice?: boolean;\n  updatePhone?: boolean;\n}\n\n// eslint-disable-next-line no-use-before-define\ntype AuthTransactionFunction = (obj?: any) => Promise<AuthTransaction>;\n\ninterface AuthTransactionFunctions {\n  // common\n  next?: AuthTransactionFunction;\n  cancel?: AuthTransactionFunction;\n  skip?: AuthTransactionFunction;\n  // locked_out\n  unlock?: AuthTransactionFunction;\n  // password\n  changePassword?: AuthTransactionFunction;\n  resetPassword?: AuthTransactionFunction;\n  // recovery\n  answer?: AuthTransactionFunction;\n  recovery?: AuthTransactionFunction;\n  // recovery_challenge\n  verify?: AuthTransactionFunction;\n  resend?: AuthTransactionFunction;\n  // mfa_enroll_activate\n  activate?: AuthTransactionFunction;\n  poll?: AuthTransactionFunction;\n  prev?: AuthTransactionFunction;\n}\n\nexport class AuthTransaction implements TransactionState, AuthTransactionFunctions {\n  next?: AuthTransactionFunction;\n  cancel?: AuthTransactionFunction;\n  skip?: AuthTransactionFunction;\n  unlock?: AuthTransactionFunction;\n  changePassword?: AuthTransactionFunction;\n  resetPassword?: AuthTransactionFunction;\n  answer?: AuthTransactionFunction;\n  recovery?: AuthTransactionFunction;\n  verify?: AuthTransactionFunction;\n  resend?: AuthTransactionFunction;\n  activate?: AuthTransactionFunction;\n  poll?: AuthTransactionFunction;\n  prev?: AuthTransactionFunction;\n\n  data?: TransactionState;\n  stateToken?: string;\n  sessionToken?: string;\n  status: string | IdxStatus;\n  user?: Record<string, any>;\n  factor?: Record<string, any>;\n  factors?: Array<Record<string, any> >;\n  policy?: Record<string, any>;\n  scopes?: Array<Record<string, any> >;\n  target?: Record<string, any>;\n  authentication?: Record<string, any>;\n  constructor(sdk, res: TransactionState | null = null) {\n    this.data = undefined;\n    this.status = undefined as unknown as string;\n    if (res) {\n      this.data = res;\n\n      if (this.data.interactionHandle) {\n        this.status = res.status;\n        return;\n      }\n\n      // Parse response from Authn V1\n      Object.assign(this, flattenEmbedded(sdk, res, res, {}));\n      delete this.stateToken;\n\n      // RECOVERY_CHALLENGE has some responses without _links.\n      // Without _links, we emulate cancel to make it intuitive\n      // to return to the starting state. We may remove this\n      // when OKTA-75434 is resolved\n      if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n        this.cancel = function() {\n          return Promise.resolve(new AuthTransaction(sdk));\n        };\n      }\n    }\n  }\n}\n\nfunction link2fn(sdk, res, obj, link, ref) {\n  if (Array.isArray(link)) {\n    return function(name, opts?) {\n      if (!name) {\n        throw new AuthSdkError('Must provide a link name');\n      }\n\n      var lk = find(link, {name: name});\n      if (!lk) {\n        throw new AuthSdkError('No link found for that name');\n      }\n\n      return link2fn(sdk, res, obj, lk, ref)(opts);\n    };\n\n  } else if (link.hints &&\n      link.hints.allow &&\n      link.hints.allow.length === 1) {\n    var method = link.hints.allow[0];\n    switch (method) {\n\n      case 'GET':\n        return function() {\n          return get(sdk, link.href, { withCredentials: true });\n        };\n\n      case 'POST':\n        // eslint-disable-next-line max-statements,complexity\n        return function(opts: TransactionState) {\n          if (ref && ref.isPolling) {\n            ref.isPolling = false;\n          }\n\n          var data = addStateToken(res, opts);\n\n          if (res.status === 'MFA_ENROLL' || res.status === 'FACTOR_ENROLL') {\n            // Add factorType and provider\n            Object.assign(data, {\n              factorType: obj.factorType,\n              provider: obj.provider\n            });\n          }\n\n          var params = {} as PostToTransactionParams;\n          var autoPush = data.autoPush;\n          if (autoPush !== undefined) {\n            if (typeof autoPush === 'function') {\n              try {\n                params.autoPush = !!autoPush();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n              }\n            }\n            else if (autoPush !== null) {\n              params.autoPush = !!autoPush;\n            }\n            data = omit(data, 'autoPush');\n          }\n\n          var rememberDevice = data.rememberDevice;\n          if (rememberDevice !== undefined) {\n            if (typeof rememberDevice === 'function') {\n              try {\n                params.rememberDevice = !!rememberDevice();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n              }\n            }\n            else if (rememberDevice !== null) {\n              params.rememberDevice = !!rememberDevice;\n            }\n            data = omit(data, 'rememberDevice');\n\n          } else if (data.profile &&\n                    data.profile.updatePhone !== undefined) {\n            if (data.profile.updatePhone) {\n              params.updatePhone = true;\n            }\n            data.profile = omit(data.profile, 'updatePhone');\n          }\n          var href = link.href + toQueryString(params);\n          return postToTransaction(sdk, href, data);\n        };\n    }\n  }\n}\n\nfunction links2fns(sdk, res, obj, ref) {\n  var fns = {} as AuthTransactionFunctions;\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n\n    var link = obj._links[linkName];\n    \n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n\n    switch (linkName) {\n      // poll is only found at the transaction\n      // level, so we don't need to pass the link\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n\n      default:\n        var fn = link2fn(sdk, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\n\n// eslint-disable-next-line complexity\nfunction flattenEmbedded(sdk, res, obj, ref) {\n  obj = obj || res;\n  obj = clone(obj);\n\n  if (Array.isArray(obj)) {\n    var objArr = [];\n    for (var o = 0, ol = obj.length; o < ol; o++) {\n      objArr.push(flattenEmbedded(sdk, res, obj[o], ref) as never);\n    }\n    return objArr;\n  }\n\n  var embedded = obj._embedded || {};\n\n  for (var key in embedded) {\n    if (!Object.prototype.hasOwnProperty.call(embedded, key)) {\n      continue;\n    }\n\n    // Flatten any nested _embedded objects\n    if (isObject(embedded[key]) || Array.isArray(embedded[key])) {\n      embedded[key] = flattenEmbedded(sdk, res, embedded[key], ref);\n    }\n  }\n\n  // Convert any links on the embedded object\n  var fns = links2fns(sdk, res, obj, ref);\n  Object.assign(embedded, fns);\n\n  obj = omit(obj, '_embedded', '_links');\n  Object.assign(obj, embedded);\n  return obj;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity, max-statements */\nimport { post } from '../http';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { STATE_TOKEN_KEY_NAME } from '../constants';\nimport { addStateToken } from './util';\nimport { AuthTransaction } from './AuthTransaction';\n\nexport function transactionStatus(sdk, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn', args, { withCredentials: true });\n}\n\nexport function resumeTransaction(sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to resume'));\n    }\n  }\n  return sdk.tx.status(args)\n    .then(function(res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n\nexport function introspectAuthn (sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to evaluate'));\n    }\n  }\n  return transactionStep(sdk, args)\n    .then(function (res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n\nexport function transactionStep(sdk, args) {\n  args = addStateToken(sdk, args);\n  // v1 pipeline introspect API\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn/introspect', args, { withCredentials: true });\n}\n\nexport function transactionExists(sdk) {\n  // We have a cookie state token\n  return !!sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n}\n\nexport function postToTransaction(sdk, url, args, options?) {\n  options = Object.assign({ withCredentials: true }, options);\n  return post(sdk, url, args, options)\n    .then(function(res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n","/*!\n * Copyright (c) 2019-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n /* eslint-disable complexity, max-statements */\nimport { stringToBase64Url, webcrypto } from '../../crypto';\nimport { MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH, DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\n\nfunction dec2hex (dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  webcrypto.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\n\nfunction generateVerifier(prefix?: string): string {\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\n\nfunction computeChallenge(str: string): PromiseLike<any> {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer) as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n\nexport default {\n  DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier,\n  computeChallenge\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\nimport { omit, getLink, toQueryString } from './util';\nimport { get, post, httpRequest } from './http';\n\nfunction sessionExists(sdk) {\n  return sdk.session.get()\n    .then(function(res) {\n      if (res.status === 'ACTIVE') {\n        return true;\n      }\n      return false;\n    })\n    .catch(function() {\n      return false;\n    });\n}\n\nfunction getSession(sdk) { \n  return get(sdk, '/api/v1/sessions/me', { withCredentials: true })\n  .then(function(session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function() {\n      return post(sdk, getLink(session, 'refresh').href, {}, { withCredentials: true });\n    };\n\n    res.user = function() {\n      return get(sdk, getLink(session, 'user').href, { withCredentials: true });\n    };\n\n    return res;\n  })\n  .catch(function() {\n    // Return INACTIVE status on failure\n    return {status: 'INACTIVE'};\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, { withCredentials: true });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' +\n    toQueryString({\n      checkAccountSetupComplete: true,\n      token: sessionToken,\n      redirectUrl: redirectUrl\n    }));\n}\n\nexport {\n  sessionExists,\n  getSession,\n  closeSession,\n  refreshSession,\n  setCookieAndRedirect\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { isString, removeNils, toQueryString } from '../../util';\nimport { AuthSdkError } from '../../errors';\nimport { OAuthParams, TokenParams } from '../../types';\n\nexport function convertTokenParamsToOAuthParams(tokenParams: TokenParams) {\n  // Quick validation\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthParams: OAuthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n  };\n  oauthParams = removeNils(oauthParams) as OAuthParams;\n\n  ['idp_scope', 'response_type'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType!.indexOf('id_token') !== -1 &&\n    tokenParams.scopes!.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else {\n    oauthParams.scope = tokenParams.scopes!.join(' ');\n  }\n\n  return oauthParams;\n}\n\nexport function buildAuthorizeParams(tokenParams: TokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString({ \n    ...oauthQueryParams, \n    ...(tokenParams.extraParams && { ...tokenParams.extraParams })\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../../errors';\nimport { CustomUrls, OAuthParams, OAuthResponse, RefreshToken, TokenParams } from '../../types';\nimport { removeNils, toQueryString } from '../../util';\nimport { httpRequest } from '../../http';\n\nfunction validateOptions(options: TokenParams) {\n  // Quick validation\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\n\nfunction getPostData(sdk, options: TokenParams): string {\n  // Convert Token params to OAuth params, sent to the /token endpoint\n  var params: OAuthParams = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n\n  const { clientSecret } = sdk.options;\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n\n  // Encode as URL string\n  return toQueryString(params).slice(1);\n}\n\n// exchange authorization code for an access token\nexport function postToTokenEndpoint(sdk, options: TokenParams, urls: CustomUrls): Promise<OAuthResponse> {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n\n  return httpRequest(sdk, {\n    url: urls.tokenUrl,\n    method: 'POST',\n    args: data,\n    headers\n  });\n}\n\nexport function postRefreshToken(sdk, options: TokenParams, refreshToken: RefreshToken): Promise<OAuthResponse> {\n  return httpRequest(sdk, {\n    url: refreshToken.tokenUrl,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n\n    args: Object.entries({\n      client_id: options.clientId, // eslint-disable-line camelcase\n      grant_type: 'refresh_token', // eslint-disable-line camelcase\n      scope: refreshToken.scopes.join(' '),\n      refresh_token: refreshToken.refreshToken, // eslint-disable-line camelcase\n    }).map(function ([name, value]) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return name + '=' + encodeURIComponent(value!);\n    }).join('&'),\n  });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { get } from '../../http';\nimport { find } from '../../util';\nimport { OktaAuthInterface, WellKnownResponse } from '../../types';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nexport function getWellKnown(sdk: OktaAuthInterface, issuer?: string): Promise<WellKnownResponse> {\n  var authServerUri = (issuer || sdk.options.issuer);\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nexport function getKey(sdk: OktaAuthInterface, issuer: string, kid: string): Promise<string> {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  return getWellKnown(sdk, issuer)\n  .then(function(wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n\n    // Check our kid against the cached version (if it exists and isn't expired)\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    // Remove cache for the key\n    httpCache.clearStorage(jwksUri);\n\n    // Pull the latest keys if the key wasn't in the cache\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    })\n    .then(function(res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window, document */\n/* eslint-disable complexity, max-statements */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthInterface } from '../../types';\n\nexport function addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\n\nexport function removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\n\nexport function loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n\n  return document.body.appendChild(iframe);\n}\n\nexport function loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' +\n    'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\n\nexport function addPostMessageListener(sdk: OktaAuthInterface, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new Promise(function (resolve, reject) {\n\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        // A message not meant for us\n        return;\n      }\n\n      // Configuration mismatch between saved token and current app instance\n      // This may happen if apps with different issuers are running on the same host url\n      // If they share the same storage key, they may read and write tokens in the same location.\n      // Common when developing against http://localhost\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n      resolve(e.data);\n    };\n\n    addListener(window, 'message', responseHandler);\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || 120000);\n  });\n\n  return msgReceivedOrTimeout\n    .finally(function () {\n      clearTimeout(timeoutId);\n      removeListener(window, 'message', responseHandler);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\nimport { genRandomString, removeTrailingSlash } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthInterface, CustomUrls } from '../../types';\n\nexport function generateState() {\n  return genRandomString(64);\n}\n\nexport function generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk: OktaAuthInterface, options: CustomUrls = {}) {\n  const issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nexport function getOAuthBaseUrl(sdk: OktaAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nexport function getOAuthDomain(sdk: OktaAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nexport function getOAuthUrls(sdk: OktaAuthInterface, options?: CustomUrls): CustomUrls {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n\n  // Get user-supplied arguments\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\n/* global document, window, TextEncoder, navigator */\n\nimport { webcrypto } from './crypto';\n\nconst isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\t\n\nexport function isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nexport function isIE11OrLess() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  return !!documentMode && documentMode <= 11;\n}\n\nexport function getUserAgent() {\n  return navigator.userAgent;\n}\n\nexport function isFingerprintSupported() {\n  const agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\t\n}\n\nexport function isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  var isIE8or9 = documentMode && documentMode < 10;\n  if (typeof window.postMessage !== 'undefined' && !isIE8or9) {\n    return true;\n  }\n  return false;\n}\n\nexport function isTokenVerifySupported() {\n  return typeof webcrypto !== 'undefined'\n    && webcrypto !== null\n    && typeof webcrypto.subtle !== 'undefined'\n    && typeof Uint8Array !== 'undefined';\n}\n\nexport function hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nexport function isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nexport function isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n  return window.location.protocol === 'https:';\n}\n\nexport function isLocalhost() {\n  // eslint-disable-next-line compat/compat\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\n","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateNonce, generateState } from './oauth';\nimport { OktaAuthInterface, TokenParams } from '../../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultTokenParams(sdk: OktaAuthInterface): TokenParams {\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    state,\n    ignoreSignature\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce,\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    ignoreSignature\n  });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuthInterface } from '../../types';\nimport { OAuthError, AuthApiError } from '../../errors';\n\nexport function isInteractionRequiredError(error: Error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n  const oauthError = error as OAuthError;\n  return (oauthError.errorCode === 'interaction_required');\n}\n\nexport function isAuthorizationCodeError(sdk: OktaAuthInterface, error: Error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n  const authApiError = error as AuthApiError;\n  // xhr property doesn't seem to match XMLHttpRequest type\n  const errorResponse = authApiError.xhr as unknown as Record<string, unknown>;\n  const responseJSON = errorResponse?.responseJSON as Record<string, unknown>;\n  return sdk.options.pkce && (responseJSON?.error as string === 'invalid_grant');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\n/* eslint-disable complexity, max-statements */\nimport { OktaAuthInterface, OktaAuthOptions } from '../../types';\n\nexport function hasTokensInHash(hash: string): boolean {\n  return /((id|access)_token=)/i.test(hash);\n}\n\n// authorization_code\nexport function hasAuthorizationCode(hashOrSearch: string): boolean {\n  return /(code=)/i.test(hashOrSearch);\n}\n\n// interaction_code\nexport function hasInteractionCode(hashOrSearch: string): boolean {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nexport function hasErrorInUrl(hashOrSearch: string): boolean {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nexport function isRedirectUri(uri: string, sdk: OktaAuthInterface): boolean {\n  var authParams = sdk.options;\n  if (!uri || !authParams.redirectUri) {\n    return false;\n  }\n  return uri.indexOf(authParams.redirectUri) === 0;\n}\n\nexport function isCodeFlow(options: OktaAuthOptions) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nexport function getHashOrSearch(options: OktaAuthOptions) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\n/**\n * Check if tokens or a code have been passed back into the url, which happens in\n * the OIDC (including social auth IDP) redirect flow.\n */\nexport function isLoginRedirect (sdk: OktaAuthInterface) {\n  // First check, is this a redirect URI?\n  if (!isRedirectUri(window.location.href, sdk)){\n    return false;\n  }\n\n  // The location contains either a code, token, or an error + error_description\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode =  hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  // implicit flow, will always be hash fragment\n  return hasTokensInHash(window.location.hash);\n}\n\n/**\n * Check if error=interaction_required has been passed back in the url, which happens in\n * the social auth IDP redirect flow.\n */\nexport function isInteractionRequired (sdk: OktaAuthInterface, hashOrSearch?: string) {\n  if (!hashOrSearch) { // web only\n    // First check, is this a redirect URI?\n    if (!isLoginRedirect(sdk)){\n      return false;\n    }\n  \n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthInterface, PKCETransactionMeta, TokenParams } from '../../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createOAuthMeta(\n  sdk: OktaAuthInterface, \n  tokenParams: TokenParams\n): OAuthTransactionMeta | PKCETransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: tokenParams.clientId!,\n    redirectUri: tokenParams.redirectUri!,\n    responseType: tokenParams.responseType!,\n    responseMode: tokenParams.responseMode!,\n    scopes: tokenParams.scopes!,\n    state: tokenParams.state!,\n    nonce: tokenParams.nonce!,\n    ignoreSignature: tokenParams.ignoreSignature!,\n  };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return oauthMeta;\n  }\n\n  const pkceMeta: PKCETransactionMeta = {\n    ...oauthMeta,\n    codeVerifier: tokenParams.codeVerifier!,\n    codeChallengeMethod: tokenParams.codeChallengeMethod!,\n    codeChallenge: tokenParams.codeChallenge!,\n  };\n\n  return pkceMeta;\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown } from '../endpoints/well-known';\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthInterface, TokenParams } from '../../types';\nimport { getDefaultTokenParams } from './defaultTokenParams';\nimport { DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport PKCE from './pkce';\n\nexport function assertPKCESupport(sdk: OktaAuthInterface) {\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n    if (!sdk.features.isHTTPS()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n    if (!sdk.features.hasTextEncoder()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n    throw new AuthSdkError(errorMessage);\n  }\n}\n\nexport async function validateCodeChallengeMethod(sdk: OktaAuthInterface, codeChallengeMethod?: string) {\n  // set default code challenge method, if none provided\n  codeChallengeMethod = codeChallengeMethod || sdk.options.codeChallengeMethod || DEFAULT_CODE_CHALLENGE_METHOD;\n\n  // validate against .well-known/openid-configuration\n  const wellKnownResponse = await getWellKnown(sdk);\n  var methods = wellKnownResponse['code_challenge_methods_supported'] || [];\n  if (methods.indexOf(codeChallengeMethod) === -1) {\n    throw new AuthSdkError('Invalid code_challenge_method');\n  }\n  return codeChallengeMethod;\n}\n\nexport async function preparePKCE(\n  sdk: OktaAuthInterface, \n  tokenParams: TokenParams\n): Promise<TokenParams> {\n  let {\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  } = tokenParams;\n\n  // PKCE calculations can be avoided by passing a codeChallenge\n  codeChallenge = codeChallenge || sdk.options.codeChallenge;\n  if (!codeChallenge) {\n    assertPKCESupport(sdk);\n    codeVerifier = codeVerifier || PKCE.generateVerifier();\n    codeChallenge = await PKCE.computeChallenge(codeVerifier);\n  }\n  codeChallengeMethod = await validateCodeChallengeMethod(sdk, codeChallengeMethod);\n\n  // Clone/copy the params. Set PKCE values\n  tokenParams = {\n    ...tokenParams,\n    responseType: 'code', // responseType is forced\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  };\n\n  return tokenParams;\n}\n\n// Prepares params for a call to /authorize or /token\nexport async function prepareTokenParams(\n  sdk: OktaAuthInterface,\n  tokenParams: TokenParams = {}\n): Promise<TokenParams> {\n  // build params using defaults + options\n  const defaults = getDefaultTokenParams(sdk);\n  tokenParams = { ...defaults, ...tokenParams };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return tokenParams;\n  }\n\n  return preparePKCE(sdk, tokenParams);\n}","import { RefreshToken } from '../../types';\nimport { isAuthApiError } from '../../errors';\n\nexport function isSameRefreshToken(a: RefreshToken, b: RefreshToken) {\n  return (a.refreshToken === b.refreshToken);\n}\n\nexport function isRefreshTokenError(err: Error) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n\n  const { responseJSON } = err.xhr;\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n\n  return false;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nexport function urlParamsToObject(hashOrSearch: string) {\n  // Predefine regexs for parsing hash\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n\n  // Some hash based routers will automatically add a / character after the hash\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n\n  // Remove the leading # or ?\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n\n\n  var obj = {};\n\n  // Loop until we have no more params\n  var param;\n  while (true) { // eslint-disable-line no-constant-condition\n    param = paramSplit.exec(fragment);\n    if (!param) { break; }\n\n    var key = param[1];\n    var value = param[2];\n\n    // id_token should remain base64url encoded\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n  return obj;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthInterface, TokenVerifyParams, UserClaims } from '../../types';\n\nexport function validateClaims(sdk: OktaAuthInterface, claims: UserClaims, validationParams: TokenVerifyParams) {\n  var aud = validationParams.clientId;\n  var iss = validationParams.issuer;\n  var nonce = validationParams.nonce;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  var now = Math.floor(Date.now()/1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' +\n      'does not match [' + iss + ']');\n  }\n\n  if (claims.aud !== aud) {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' +\n      'does not match [' + aud + ']');\n  }\n\n  if (claims.iat! > claims.exp!) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if ((now - sdk.options.maxClockSkew!) > claims.exp!) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat! > (now + sdk.options.maxClockSkew!)) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { StorageManager } from '../StorageManager';\nimport { CustomUrls } from './OktaAuthOptions';\nimport { FlowIdentifier, IdxTransactionMeta } from '../idx/types';\n\nexport interface TransactionManagerOptions {\n  storageManager?: StorageManager;\n  enableSharedStorage?: boolean; // default true\n  legacyWidgetSupport?: boolean; // default true\n  saveNonceCookie?: boolean; // default true\n  saveStateCookie?: boolean; // default true\n  saveParamsCookie?: boolean; // default true\n  saveLastResponse?: boolean; // default true\n}\n\nexport interface TransactionMetaOptions {\n  pkce?: boolean;\n  oauth?: boolean;\n  muteWarning?: boolean;\n  state?: string;\n  flow?: FlowIdentifier;\n  codeVerifier?: string;\n  codeChallenge?: string;\n  codeChallengeMethod?: string;\n  activationToken?: string;\n  recoveryToken?: string;\n}\n\n// formerly known as \"Redirect OAuth Params\"\nexport interface OAuthTransactionMeta {\n  issuer: string;\n  redirectUri: string;\n  state: string;\n  nonce: string;\n  responseType: string | string [];\n  responseMode?: string;\n  scopes: string[];\n  clientId: string;\n  urls: CustomUrls;\n  ignoreSignature: boolean;\n  originalUri?: string;\n}\n\nexport interface PKCETransactionMeta extends OAuthTransactionMeta {\n  codeVerifier: string;\n  codeChallengeMethod: string;\n  codeChallenge: string;\n}\n\nexport type CustomAuthTransactionMeta = Record<string, string | undefined>;\n\nexport type TransactionMeta =\n  IdxTransactionMeta |\n  PKCETransactionMeta |\n  OAuthTransactionMeta |\n  CustomAuthTransactionMeta;\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isOAuthTransactionMeta(obj: any): obj is OAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nexport function isPKCETransactionMeta(obj: any): obj is PKCETransactionMeta {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).codeVerifier;\n}\n\nexport function isIdxTransactionMeta(obj: any): obj is IdxTransactionMeta {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).interactionHandle;\n}\n\nexport function isCustomAuthTransactionMeta(obj: any): obj is CustomAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  const isAllStringValues = Object.values(obj).find((value) => (typeof value !== 'string')) === undefined;\n  return isAllStringValues;\n}\n\nexport function isTransactionMeta(obj: any): obj is TransactionMeta {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { InteractOptions } from '../interact';\nimport { IntrospectOptions } from '../introspect';\nimport { APIError, Tokens } from '../../types';\nimport { PKCETransactionMeta } from '../../types/Transaction';\nimport { \n  IdxActions, \n  IdxAuthenticator, \n  IdxContext,\n  IdxForm,\n  IdxMessage, \n  IdxOption, \n  IdxRemediation, \n  IdxResponse, \n  RawIdxResponse \n} from './idx-js';\nimport { FlowIdentifier } from './FlowIdentifier';\n\nexport type {\n  IdxMessage,\n  IdxMessages,\n  ChallengeData,\n  ActivationData,\n  IdxResponse,\n  IdxContext,\n  RawIdxResponse\n} from './idx-js';\nexport type { AuthenticationOptions } from '../authenticate';\nexport type { RegistrationOptions } from '../register';\nexport type { PasswordRecoveryOptions } from '../recoverPassword';\nexport type { AccountUnlockOptions } from '../unlockAccount';\nexport type { ProceedOptions } from '../proceed';\nexport type { CancelOptions } from '../cancel';\nexport type { RemediateOptions } from '../remediate';\nexport type { FlowIdentifier };\nexport type { IdxAuthenticator };\nexport type { EmailVerifyCallbackResponse } from '../emailVerify';\nexport type { WebauthnEnrollValues } from '../authenticator/WebauthnEnrollment';\nexport type { WebauthnVerificationValues } from '../authenticator/WebauthnVerification';\n\nexport enum IdxStatus {\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  FAILURE = 'FAILURE',\n  TERMINAL = 'TERMINAL',\n  CANCELED = 'CANCELED',\n}\n\nexport enum AuthenticatorKey {\n  OKTA_PASSWORD = 'okta_password',\n  OKTA_EMAIL = 'okta_email',\n  PHONE_NUMBER = 'phone_number',\n  GOOGLE_AUTHENTICATOR = 'google_otp',\n  SECURITY_QUESTION = 'security_question',\n  OKTA_VERIFY = 'okta_verify',\n  WEBAUTHN = 'webauthn',\n}\n\nexport type Input = {\n  name: string;\n  key?: string;\n  type?: string;\n  label?: string;\n  value?: string | {form: IdxForm};\n  minLength?: number;\n  maxLength?: number;\n  secret?: boolean;\n  required?: boolean;\n}\n\n\nexport interface IdxPollOptions {\n  required?: boolean;\n  refresh?: number;\n}\n\nexport type NextStep = {\n  name: string;\n  authenticator?: IdxAuthenticator;\n  canSkip?: boolean;\n  canResend?: boolean;\n  inputs?: Input[];\n  options?: IdxOption[];\n  poll?: IdxPollOptions;\n  authenticatorEnrollments?: IdxAuthenticator[];\n}\n\nexport enum IdxFeature {\n  PASSWORD_RECOVERY = 'recover-password',\n  REGISTRATION = 'enroll-profile',\n  SOCIAL_IDP = 'redirect-idp',\n  ACCOUNT_UNLOCK = 'unlock-account',\n}\n\nexport interface IdxTransactionMeta extends PKCETransactionMeta {\n  interactionHandle?: string;\n  remediations?: string[];\n  flow?: FlowIdentifier;\n  withCredentials?: boolean;\n  activationToken?: string;\n  recoveryToken?: string;\n}\n\nexport interface IdxTransaction {\n  status: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  requestDidSucceed?: boolean;\n\n  // from idx-js, used by signin widget\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  context: IdxContext;\n}\n\nexport type IdxOptions = InteractOptions & IntrospectOptions & {\n  flow?: FlowIdentifier;\n  exchangeCodeForTokens?: boolean;\n  autoRemediate?: boolean;\n  step?: string;\n};\n\nexport type Authenticator = {\n  id?: string;\n  key?: string;\n  methodType?: string;\n  phoneNumber?: string;\n};\n\nexport function isAuthenticator(obj: any): obj is Authenticator {\n  return obj && (obj.key || obj.id);\n}\n\nexport interface RemediationResponse {\n  idxResponse: IdxResponse;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  terminal?: boolean;\n  canceled?: boolean;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { UserClaims } from './UserClaims';\n\nexport interface AbstractToken {\n  expiresAt: number;\n  authorizeUrl: string;\n  scopes: string[];\n  pendingRemove?: boolean;\n}\n\nexport interface AccessToken extends AbstractToken {\n  accessToken: string;\n  claims: UserClaims;\n  tokenType: string;\n  userinfoUrl: string;\n}\n\nexport interface RefreshToken extends AbstractToken {\n  refreshToken: string;\n  tokenUrl: string;\n  issuer: string;\n}\n\nexport interface IDToken extends AbstractToken {\n  idToken: string;\n  claims: UserClaims;\n  issuer: string;\n  clientId: string;\n}\n\nexport type Token = AccessToken | IDToken | RefreshToken;\nexport type RevocableToken = AccessToken | RefreshToken;\n\nexport type TokenType = 'accessToken' | 'idToken' | 'refreshToken';\n\nexport function isToken(obj: any): obj is Token {\n  if (obj &&\n      (obj.accessToken || obj.idToken || obj.refreshToken) &&\n      Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isAccessToken(obj: any): obj is AccessToken {\n  return obj && obj.accessToken;\n}\n\nexport function isIDToken(obj: any): obj is IDToken {\n  return obj && obj.idToken;\n}\n\nexport function isRefreshToken(obj: any): obj is RefreshToken {\n  return obj && obj.refreshToken;\n}\n\nexport interface Tokens {\n  accessToken?: AccessToken;\n  idToken?: IDToken;\n  refreshToken?: RefreshToken;\n}\n","/* eslint-disable complexity */\n\nimport { AuthSdkError } from '../../errors';\nimport { isAccessToken, isIDToken, isRefreshToken, Token, TokenType } from '../../types';\n\nexport function validateToken(token: Token, type?: TokenType) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError(\n      'Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property'\n    );\n  }\n  \n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  } \n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { JWTObject } from '../types';\nimport { base64UrlToString } from '../crypto';\n\nexport function decodeToken(token: string): JWTObject {\n  var jwt = token.split('.');\n  var decodedToken: JWTObject;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuthInterface,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from '../types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport async function revokeToken(sdk: OktaAuthInterface, token: RevocableToken): Promise<any> {\n  let accessToken = '';\n  let refreshToken = '';\n  if (token) { \n      accessToken = (token as AccessToken).accessToken;\n      refreshToken = (token as RefreshToken).refreshToken;  \n  }\n  if(!accessToken && !refreshToken) { \n    throw new AuthSdkError('A valid access or refresh token object is required');\n  }\n  var clientId = sdk.options.clientId;\n  var clientSecret = sdk.options.clientSecret;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var revokeUrl = getOAuthUrls(sdk).revokeUrl!;\n  var args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n    token: refreshToken || accessToken,\n  }).slice(1);\n  var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  return post(sdk, revokeUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + creds\n    }\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable max-len */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { CustomUrls, OAuthResponse, OktaAuthInterface, TokenParams, TokenResponse } from '../types';\nimport { getOAuthUrls, getDefaultTokenParams } from './util';\nimport { clone } from '../util';\nimport { postToTokenEndpoint } from './endpoints/token';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\n// codeVerifier is required. May pass either an authorizationCode or interactionCode\nexport function exchangeCodeForTokens(sdk: OktaAuthInterface, tokenParams: TokenParams, urls?: CustomUrls): Promise<TokenResponse> {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  // build params using defaults + options\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state\n  } = tokenParams;\n\n  var getTokenOptions = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n  };\n\n  return postToTokenEndpoint(sdk, getTokenOptions, urls)\n    .then((response: OAuthResponse) => {\n\n      // `handleOAuthResponse` hanadles responses from both `/authorize` and `/token` endpoints\n      // Here we modify the response from `/token` so that it more closely matches a response from `/authorize`\n      // `responseType` is used to validate that the expected tokens were returned\n      const responseType = ['token']; // an accessToken will always be returned\n      if (scopes!.indexOf('openid') !== -1) {\n        responseType.push('id_token'); // an idToken will be returned if \"openid\" is in the scopes\n      }\n      const handleResponseOptions: TokenParams = {\n        clientId,\n        redirectUri,\n        scopes,\n        responseType,\n        ignoreSignature,\n      };\n      return handleOAuthResponse(sdk, handleResponseOptions, response, urls!)\n        .then((response: TokenResponse) => {\n          // For compatibility, \"code\" is returned in the TokenResponse. OKTA-326091\n          response.code = authorizationCode;\n          response.state = state!;\n          return response;\n        });\n    })\n    .finally(() => {\n      sdk.transactionManager.clear();\n    });\n}","/* eslint-disable max-len */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown, getKey } from './endpoints/well-known';\nimport { validateClaims } from './util';\nimport { AuthSdkError } from '../errors';\nimport { IDToken, OktaAuthInterface, TokenVerifyParams } from '../types';\nimport { decodeToken } from './decodeToken';\nimport * as sdkCrypto from '../crypto';\n\n// Verify the id token\nexport async function verifyToken(sdk: OktaAuthInterface, token: IDToken, validationParams: TokenVerifyParams): Promise<IDToken> {\n  if (!token || !token.idToken) {\n    throw new AuthSdkError('Only idTokens may be verified');\n  }\n\n  // Decode the Jwt object (may throw)\n  var jwt = decodeToken(token.idToken);\n\n  // The configured issuer may point to a frontend proxy.\n  // Get the \"real\" issuer from .well-known/openid-configuration\n  const configuredIssuer = validationParams?.issuer || sdk.options.issuer;\n  const { issuer } = await getWellKnown(sdk, configuredIssuer);\n\n  var validationOptions: TokenVerifyParams = Object.assign({\n    // base options, can be overridden by params\n    clientId: sdk.options.clientId,\n    ignoreSignature: sdk.options.ignoreSignature\n  }, validationParams, {\n    // final options, cannot be overridden\n    issuer\n  });\n\n  // Standard claim validation (may throw)\n  validateClaims(sdk, jwt.payload, validationOptions);\n\n  // If the browser doesn't support native crypto or we choose not\n  // to verify the signature, bail early\n  if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n    return token;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const key = await getKey(sdk, token.issuer, jwt.header.kid!);\n  const valid = await sdkCrypto.verifyToken(token.idToken, key);\n  if (!valid) {\n    throw new AuthSdkError('The token signature is not valid');\n  }\n  if (validationParams && validationParams.accessToken && token.claims.at_hash) {\n    const hash = await sdkCrypto.getOidcHash(validationParams.accessToken);\n    if (hash !== token.claims.at_hash) {\n      throw new AuthSdkError('Token hash verification failed');\n    }\n  }\n  return token;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { clone } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport {\n  OktaAuthInterface,\n  TokenVerifyParams,\n  IDToken,\n  OAuthResponse,\n  TokenParams,\n  TokenResponse,\n  CustomUrls,\n  Tokens,\n} from '../types';\nimport { exchangeCodeForTokens } from './exchangeCodeForTokens';\nimport { verifyToken } from './verifyToken';\nimport { getDefaultTokenParams } from './util';\n\nfunction validateResponse(res: OAuthResponse, oauthParams: TokenParams) {\n  if (res['error'] && res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\n\nexport async function handleOAuthResponse(\n  sdk: OktaAuthInterface,\n  tokenParams: TokenParams,\n  res: OAuthResponse,\n  urls?: CustomUrls\n): Promise<TokenResponse> {\n  var pkce = sdk.options.pkce !== false;\n\n  // The result contains an authorization_code and PKCE is enabled \n  // `exchangeCodeForTokens` will call /token then call `handleOauthResponse` recursively with the result\n  if (pkce && (res.code || res.interaction_code)) {\n    return exchangeCodeForTokens(sdk, Object.assign({}, tokenParams, {\n      authorizationCode: res.code,\n      interactionCode: res.interaction_code\n    }), urls);\n  }\n\n  tokenParams = tokenParams || getDefaultTokenParams(sdk);\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n\n  var responseType = tokenParams.responseType || [];\n  if (!Array.isArray(responseType)) {\n    responseType = [responseType];\n  }\n\n  var scopes;\n  if (res.scope) {\n    scopes = res.scope.split(' ');\n  } else {\n    scopes = clone(tokenParams.scopes);\n  }\n  var clientId = tokenParams.clientId || sdk.options.clientId;\n\n  // Handling the result from implicit flow or PKCE token exchange\n  validateResponse(res, tokenParams);\n\n  var tokenDict = {} as Tokens;\n  var expiresIn = res.expires_in;\n  var tokenType = res.token_type;\n  var accessToken = res.access_token;\n  var idToken = res.id_token;\n  var refreshToken = res.refresh_token;\n  var now = Math.floor(Date.now()/1000);\n\n  if (accessToken) {\n    var accessJwt = sdk.token.decode(accessToken);\n    tokenDict.accessToken = {\n      accessToken: accessToken,\n      claims: accessJwt.payload,\n      expiresAt: Number(expiresIn) + now,\n      tokenType: tokenType!,\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      userinfoUrl: urls.userinfoUrl!\n    };\n  }\n\n  if (refreshToken) {\n    tokenDict.refreshToken = {\n      refreshToken: refreshToken,\n      // should not be used, this is the accessToken expire time\n      // TODO: remove \"expiresAt\" in the next major version OKTA-407224\n      expiresAt: Number(expiresIn) + now, \n      scopes: scopes,\n      tokenUrl: urls.tokenUrl!,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n    };\n  }\n\n  if (idToken) {\n    var idJwt = sdk.token.decode(idToken);\n    var idTokenObj: IDToken = {\n      idToken: idToken,\n      claims: idJwt.payload,\n      expiresAt: idJwt.payload.exp! - idJwt.payload.iat! + now, // adjusting expiresAt to be in local time\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n      clientId: clientId!\n    };\n\n    var validationParams: TokenVerifyParams = {\n      clientId: clientId!,\n      issuer: urls.issuer!,\n      nonce: tokenParams.nonce,\n      accessToken: accessToken\n    };\n\n    if (tokenParams.ignoreSignature !== undefined) {\n      validationParams.ignoreSignature = tokenParams.ignoreSignature;\n    }\n\n    await verifyToken(sdk, idTokenObj, validationParams);\n    tokenDict.idToken = idTokenObj;\n  }\n\n  // Validate received tokens against requested response types \n  if (responseType.indexOf('token') !== -1 && !tokenDict.accessToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n  }\n  if (responseType.indexOf('id_token') !== -1 && !tokenDict.idToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n  }\n\n  return {\n    tokens: tokenDict,\n    state: res.state!,\n    code: res.code\n  };\n  \n}","\n/* global document */\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n  getOAuthUrls,\n  loadFrame,\n  addPostMessageListener\n} from './util';\n\nimport AuthSdkError from '../errors/AuthSdkError';\n\nimport {\n  OktaAuthInterface,\n  TokenParams,\n  PopupParams,\n  OAuthResponse,\n} from '../types';\n\nimport { prepareTokenParams } from './util/prepareTokenParams';\nimport { buildAuthorizeParams } from './endpoints/authorize';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nexport function getToken(sdk: OktaAuthInterface, options: TokenParams & PopupParams) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n\n  // window object cannot be serialized, save for later use\n  // TODO: move popup related params into a separate options object\n  const popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n\n      // Start overriding any options that don't make sense\n      var sessionTokenOverrides = {\n        prompt: 'none',\n        responseMode: 'okta_post_message',\n        display: null\n      };\n\n      var idpOverrides = {\n        display: 'popup'\n      };\n\n      if (options.sessionToken) {\n        Object.assign(tokenParams, sessionTokenOverrides);\n      } else if (options.idp) {\n        Object.assign(tokenParams, idpOverrides);\n      }\n\n      // Use the query params to build the authorize url\n      var requestUrl,\n        endpoint,\n        urls;\n\n      // Get authorizeUrl and issuer\n      urls = getOAuthUrls(sdk, tokenParams);\n      endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n\n      // Determine the flow type\n      var flowType;\n      if (tokenParams.sessionToken || tokenParams.display === null) {\n        flowType = 'IFRAME';\n      } else if (tokenParams.display === 'popup') {\n        flowType = 'POPUP';\n      } else {\n        flowType = 'IMPLICIT';\n      }\n\n      // Execute the flow type\n      switch (flowType) {\n        case 'IFRAME':\n          var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          var iframeEl = loadFrame(requestUrl);\n          return iframePromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (document.body.contains(iframeEl)) {\n                iframeEl.parentElement?.removeChild(iframeEl);\n              }\n            });\n\n        case 'POPUP':\n          var oauthPromise; // resolves with OAuth response\n\n          // Add listener on postMessage before window creation, so\n          // postMessage isn't triggered before we're listening\n          if (tokenParams.responseMode === 'okta_post_message') {\n            if (!sdk.features.isPopupPostMessageSupported()) {\n              throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n            }\n            oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          }\n\n          // Redirect for authorization\n          // popupWindown can be null when popup is blocked\n          if (popupWindow) { \n            popupWindow.location.assign(requestUrl);\n          }\n\n          // The popup may be closed without receiving an OAuth response. Setup a poller to monitor the window.\n          var popupPromise = new Promise(function (resolve, reject) {\n            var closePoller = setInterval(function () {\n              if (!popupWindow || popupWindow.closed) {\n                clearInterval(closePoller);\n                reject(new AuthSdkError('Unable to parse OAuth flow response'));\n              }\n            }, 100);\n\n            // Proxy the OAuth promise results\n            oauthPromise\n              .then(function (res) {\n                clearInterval(closePoller);\n                resolve(res);\n              })\n              .catch(function (err) {\n                clearInterval(closePoller);\n                reject(err);\n              });\n          });\n\n          return popupPromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (popupWindow && !popupWindow.closed) {\n                popupWindow.close();\n              }\n            });\n\n        default:\n          throw new AuthSdkError('The full page redirect flow is not supported');\n      }\n    });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthInterface, TokenParams, TokenResponse } from '../types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\n\nexport function getWithoutPrompt(sdk: OktaAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n  \n  options = clone(options) || {};\n  Object.assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { getOAuthUrls } from './util/oauth';\nimport { isSameRefreshToken } from './util/refreshToken';\nimport { OktaAuthInterface, TokenParams, RefreshToken, Tokens } from '../types';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { postRefreshToken } from './endpoints/token';\n\nexport async function renewTokensWithRefresh(\n  sdk: OktaAuthInterface,\n  tokenParams: TokenParams,\n  refreshTokenObject: RefreshToken\n): Promise<Tokens> {\n  const { clientId } = sdk.options;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n  }\n\n  const renewTokenParams: TokenParams = Object.assign({}, tokenParams, {\n    clientId,\n  });\n  const tokenResponse = await postRefreshToken(sdk, renewTokenParams, refreshTokenObject);\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const { tokens } = await handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n\n  // Support rotating refresh tokens\n  const { refreshToken } = tokens;\n  if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n    sdk.tokenManager.updateRefreshToken(refreshToken);\n  }\n\n  return tokens;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthInterface, Token, Tokens, isAccessToken, AccessToken, IDToken, isIDToken } from '../types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\n\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError(\n    'Renew must be passed a token with an array of scopes and an accessToken or idToken'\n  );\n}\n\n// Multiple tokens may have come back. Return only the token which was requested.\nfunction getSingleToken(originalToken: Token, tokens: Tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\nexport async function renewToken(sdk: OktaAuthInterface, token: Token): Promise<Token | undefined> {\n  if (!isIDToken(token) && !isAccessToken(token)) {\n    throwInvalidTokenError();\n  }\n\n  let tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    tokens = await renewTokensWithRefresh(sdk, {\n      scopes: token.scopes,\n    }, tokens.refreshToken);\n    return getSingleToken(token, tokens);\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (isAccessToken(token)) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  const { scopes, authorizeUrl, userinfoUrl, issuer } = token as (AccessToken & IDToken);\n  return getWithoutPrompt(sdk, {\n    responseType,\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  })\n    .then(function (res) {\n      return getSingleToken(token, res.tokens);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { TokenParams, Tokens } from '../types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\nimport { getDefaultTokenParams } from './util';\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\n// eslint-disable-next-line complexity\nexport async function renewTokens(sdk, options?: TokenParams): Promise<Tokens> {\n  const tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    return renewTokensWithRefresh(sdk, options || {}, tokens.refreshToken);\n  }\n\n  if (!tokens.accessToken && !tokens.idToken) {\n    throw new AuthSdkError('renewTokens() was called but there is no existing token');\n  }\n\n  const accessToken = tokens.accessToken || {};\n  const idToken = tokens.idToken || {};\n  const scopes = accessToken.scopes || idToken.scopes;\n  if (!scopes) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n  }\n  const authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n  if (!authorizeUrl) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n  }\n  const userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n  const issuer = idToken.issuer || sdk.options.issuer;\n\n  // Get tokens using the SSO cookie\n  options = Object.assign({\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  }, options);\n\n  if (sdk.options.pkce) {\n    options.responseType = 'code';\n  } else {\n    const { responseType } = getDefaultTokenParams(sdk);\n    options.responseType = responseType;\n  }\n\n  return getWithoutPrompt(sdk, options)\n    .then(res => res.tokens);\n    \n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { isFunction } from '../util';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { httpRequest } from '../http';\nimport { AccessToken, IDToken, UserClaims, isAccessToken, isIDToken } from '../types';\n\nexport async function getUserInfo(sdk, accessTokenObject: AccessToken, idTokenObject: IDToken): Promise<UserClaims> {\n  // If token objects were not passed, attempt to read from the TokenManager\n  if (!accessTokenObject) {\n    accessTokenObject = (await sdk.tokenManager.getTokens()).accessToken as AccessToken;\n  }\n  if (!idTokenObject) {\n    idTokenObject = (await sdk.tokenManager.getTokens()).idToken as IDToken;\n  }\n\n  if (!accessTokenObject || !isAccessToken(accessTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n\n  if (!idTokenObject || !isIDToken(idTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an ID token object'));\n  }\n\n  return httpRequest(sdk, {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  })\n    .then(userInfo => {\n      // Only return the userinfo response if subjects match to mitigate token substitution attacks\n      if (userInfo.sub === idTokenObject.claims.sub) {\n        return userInfo;\n      }\n      return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n    })\n    .catch(function (err) {\n      if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n        var authenticateHeader;\n        if (err.xhr.headers && isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n          authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n        } else if (isFunction(err.xhr.getResponseHeader)) {\n          authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n        }\n        if (authenticateHeader) {\n          var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n          var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n          var error = errorMatches[1];\n          var errorDescription = errorDescriptionMatches[1];\n          if (error && errorDescription) {\n            err = new OAuthError(error, errorDescription);\n          }\n        }\n      }\n      throw err;\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthInterface, TokenParams, TokenResponse } from '../types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\nimport { loadPopup } from './util';\n\nexport function getWithPopup(sdk: OktaAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow\n  });\n  return getToken(sdk, options);\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthInterface, TokenParams } from '../types';\nimport { clone } from '../util';\nimport { prepareTokenParams, createOAuthMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport async function getWithRedirect(sdk: OktaAuthInterface, options?: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  const tokenParams = await prepareTokenParams(sdk, options);\n  const meta = createOAuthMeta(sdk, tokenParams);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n  sdk.transactionManager.save(meta, { oauth: true });\n  sdk.token.getWithRedirect._setLocation(requestUrl);\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { isInteractionRequiredError, urlParamsToObject } from './util';\nimport {\n  ParseFromUrlOptions,\n  TokenResponse,\n  CustomUrls,\n  TransactionMeta,\n  OAuthResponse\n} from '../types';\nimport { isString } from '../util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nexport function getResponseMode(sdk): 'query' | 'fragment' {\n  // https://openid.net/specs/openid-connect-core-1_0.html#Authentication\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nexport function parseOAuthResponseFromUrl(sdk, options: string | ParseFromUrlOptions): OAuthResponse {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nexport function cleanOAuthResponseFromUrl(sdk, options: ParseFromUrlOptions) {\n  // Clean hash or search from the url\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nexport async function parseFromUrl(sdk, options?: string | ParseFromUrlOptions): Promise<TokenResponse> {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  const res: OAuthResponse = parseOAuthResponseFromUrl(sdk, options);\n  const state = res.state;\n  const oauthParams: TransactionMeta = sdk.transactionManager.load({\n    oauth: true,\n    pkce: sdk.options.pkce,\n    state\n  });\n  if (!oauthParams) {\n    return Promise.reject(new AuthSdkError('Unable to retrieve OAuth redirect params from storage'));\n  }\n  const urls: CustomUrls = oauthParams.urls as CustomUrls;\n  delete oauthParams.urls;\n\n  if (!options.url) {\n    // Clean hash or search from the url\n    cleanOAuthResponseFromUrl(sdk, options);\n  }\n\n  return handleOAuthResponse(sdk, oauthParams, res, urls)\n    .catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    })\n    .then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { base64UrlToBuffer, bufferToBase64Url } from './base64';\nimport { ActivationData, ChallengeData, IdxAuthenticator } from '../idx/types';\n\n// Get known credentials from list of enrolled authenticators\nconst getEnrolledCredentials = (authenticatorEnrollments: IdxAuthenticator[] = []) => {\n  const credentials: PublicKeyCredentialDescriptor[] = [];\n  authenticatorEnrollments.forEach((enrollement) => {\n    if (enrollement.key === 'webauthn') {\n      credentials.push({\n        type: 'public-key',\n        id: base64UrlToBuffer(enrollement.credentialId),\n      });\n    }\n  });\n  return credentials;\n};\n\n// Build options for navigator.credentials.create\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create\nexport const buildCredentialCreationOptions = (\n  activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      rp: activationData.rp,\n      user: {\n        id: base64UrlToBuffer(activationData.user.id),\n        name: activationData.user.name,\n        displayName: activationData.user.displayName\n      },\n      challenge: base64UrlToBuffer(activationData.challenge),\n      pubKeyCredParams: activationData.pubKeyCredParams,\n      attestation: activationData.attestation,\n      authenticatorSelection: activationData.authenticatorSelection,\n      excludeCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialCreationOptions;\n};\n\n\n// Build options for navigator.credentials.get\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get\nexport const buildCredentialRequestOptions = (\n  challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      challenge: base64UrlToBuffer(challengeData.challenge),\n      userVerification: challengeData.userVerification,\n      allowCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialRequestOptions;\n};\n\n// Build attestation for webauthn enroll\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse\nexport const getAttestation = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAttestationResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const attestation = bufferToBase64Url(response.attestationObject);\n  return {\n    id,\n    clientData,\n    attestation\n  };\n};\n\n// Build assertion for webauthn verification\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse\nexport const getAssertion = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAssertionResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const authenticatorData = bufferToBase64Url(response.authenticatorData);\n  const signatureData = bufferToBase64Url(response.signature);\n  return {\n    id,\n    clientData,\n    authenticatorData,\n    signatureData\n  };\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  StorageProvider,\n  StorageOptions,\n  PKCEStorage,\n  CookieOptions,\n  SimpleStorage,\n  StorageType,\n  BrowserStorageUtil,\n  CookieStorage\n} from '../types';\nimport { warn } from '../util';\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil: BrowserStorageUtil = {\n\n  // These are shimmed in `OktaAuthBase.ts`\n  getHttpCache(): StorageProvider {\n    return null as never as StorageProvider;\n  },\n\n  getPKCEStorage(): PKCEStorage {\n    return null as never as PKCEStorage;\n  },\n\n  // IE11 bug that Microsoft doesn't plan to fix\n  // https://connect.microsoft.com/IE/Feedback/Details/1496040\n  browserHasLocalStorage: function() {\n    try {\n      var storage = this.getLocalStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  browserHasSessionStorage: function() {\n    try {\n      var storage = this.getSessionStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  testStorageType: function(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = this.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = this.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n\n  getStorageByType: function(storageType: StorageType, options?: StorageOptions): SimpleStorage {\n    let storageProvider;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = this.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = this.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = this.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = this.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  },\n\n  findStorageType: function(types: StorageType[]) {\n    let curType;\n    let nextType;\n    \n    types = types.slice(); // copy array\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n\n    if (this.testStorageType(curType)) {\n      return curType;\n    }\n\n    // preferred type was unsupported.\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n\n    // fallback to the next type. this is a recursive call\n    return this.findStorageType(types);\n  },\n\n  getLocalStorage: function() {\n    return localStorage;\n  },\n\n  getSessionStorage: function() {\n    return sessionStorage;\n  },\n\n  // Provides webStorage-like interface for cookies\n  getCookieStorage: function(options): CookieStorage {\n    const secure = options!.secure;\n    const sameSite = options!.sameSite;\n    const sessionCookie = options!.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage: CookieStorage = {\n      getItem: this.storage.get,\n      setItem: (key, value, expiresAt = '2200-01-01T00:00:00.000Z') => {\n        // By defauilt, cookie shouldn't expire\n        expiresAt = (sessionCookie ? null : expiresAt) as string;\n        this.storage.set(key, value, expiresAt, {\n          secure: secure, \n          sameSite: sameSite,\n        });\n      },\n      removeItem: (key) => {\n        this.storage.delete(key);\n      }\n    };\n\n    if (!options!.useSeparateCookies) {\n      return storage;\n    }\n\n    // Tokens are stored separately because cookies have size limits.\n    // Can only be used when storing an object value. Object properties will be saved to separate cookies.\n    // Each property of the object must also be an object.\n    return {\n      getItem: function(key) {\n        var data = storage.getItem(); // read all cookies\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key!) === 0) { // filter out unrelated cookies\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]); // populate with cookie data\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        // Set key-value pairs from input to cookies\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        // Delete unmatched keys from existing cookies\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      }\n    };\n  },\n\n  // Provides an in-memory solution\n  inMemoryStore: {}, // override this for a unique memory store per instance\n  getInMemoryStorage: function() {\n    return {\n      getItem: (key) => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      }\n    };\n  },\n\n  testStorage: function(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  storage: {\n    set: function(name: string, value: string, expiresAt: string, options: CookieOptions): string {\n      const { sameSite, secure } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions: CookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!(Date.parse(expiresAt))) {\n        // Expires value can be converted to a Date object.\n        //\n        // If the 'expiresAt' value is not provided, or the value cannot be\n        // parsed as a Date object, the cookie will set as a session cookie.\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return this.get(name);\n    },\n\n    get: function(name?: string): string {\n      // return all cookies when no args is provided\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n      return Cookies.get(name);\n    },\n\n    delete: function(name: string): string {\n      return Cookies.remove(name, { path: '/' });\n    }\n  }\n};\n\nexport default storageUtil;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, clone } from './util';\nimport { AuthSdkError } from './errors';\nimport { validateToken  } from './oidc/util';\nimport { isLocalhost, isIE11OrLess } from './features';\nimport SdkClock from './clock';\nimport {\n  EventEmitter,\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  StorageOptions,\n  StorageType,\n  OktaAuthInterface,\n  StorageProvider,\n  TokenManagerErrorEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken,\n  AccessTokenCallback,\n  IDTokenCallback,\n  RefreshTokenCallback\n} from './types';\nimport { REFRESH_TOKEN_STORAGE_KEY, TOKEN_STORAGE_NAME } from './constants';\n\nconst DEFAULT_OPTIONS = {\n  // TODO: remove in next major version - OKTA-473815\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true,\n  // --- //\n  clearPendingRemoveTokens: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME,\n  _storageEventDelay: 0\n};\nexport const EVENT_EXPIRED = 'expired';\nexport const EVENT_RENEWED = 'renewed';\nexport const EVENT_ADDED = 'added';\nexport const EVENT_REMOVED = 'removed';\nexport const EVENT_ERROR = 'error';\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Promise<Token | undefined> | null;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuthInterface;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n\n  on: (event: string, handler: TokenManagerErrorEventHandler | TokenManagerEventHandler, context?: object) => void;\n  off: (event: string, handler?: TokenManagerErrorEventHandler | TokenManagerEventHandler) => void;\n\n  // eslint-disable-next-line complexity\n  constructor(sdk: OktaAuthInterface, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n    \n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (isIE11OrLess()) {\n      options._storageEventDelay = options._storageEventDelay || 1000;\n    }\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage({...storageOptions, useSeparateCookies: true});\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n\n    this.on = this.emitter.on.bind(this.emitter);\n    this.off = this.emitter.off.bind(this.emitter);\n  }\n\n  start() {\n    if (this.options.clearPendingRemoveTokens) {\n      this.clearPendingRemoveTokens();\n    }\n    this.setExpireEventTimeoutAll();\n  }\n  \n  stop() {\n    this.clearExpireEventTimeoutAll();\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    const expireEarlySeconds = this.options.expireEarlySeconds || 0;\n    var expireTime = token.expiresAt - expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  emitEventsForCrossTabsStorageUpdate(newValue, oldValue) {\n    const oldTokens = this.getTokensFromStorageValue(oldValue);\n    const newTokens = this.getTokensFromStorageValue(newValue);\n    Object.keys(newTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (JSON.stringify(oldToken) !== JSON.stringify(newToken)) {\n        this.emitAdded(key, newToken);\n      }\n    });\n    Object.keys(oldTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (!newToken) {\n        this.emitRemoved(key, oldToken);\n      }\n    });\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    this.state.renewPromise = null;\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key) {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key) {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  private getTokenType(token: Token): TokenType {\n    if (isAccessToken(token)) {\n      return 'accessToken';\n    }\n    if (isIDToken(token)) {\n      return 'idToken';\n    }\n    if(isRefreshToken(token)) {\n      return 'refreshToken';\n    }\n    throw new AuthSdkError('Unknown token type');\n  }\n\n  setTokens(\n    tokens: Tokens,\n    // TODO: callbacks can be removed in the next major version OKTA-407224\n    accessTokenCb?: AccessTokenCallback, \n    idTokenCb?: IDTokenCallback,\n    refreshTokenCb?: RefreshTokenCallback\n  ): void {\n    const handleTokenCallback = (key, token) => {\n      const type = this.getTokenType(token);\n      if (type === 'accessToken') {\n        accessTokenCb && accessTokenCb(key, token);\n      } else if (type === 'idToken') {\n        idTokenCb && idTokenCb(key, token);\n      } else if (type === 'refreshToken') {\n        refreshTokenCb && refreshTokenCb(key, token);\n      }\n    };\n    const handleAdded = (key, token) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRenewed = (key, token, oldToken) => {\n      this.emitRenewed(key, token, oldToken);\n      this.clearExpireEventTimeout(key);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRemoved = (key, token) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      handleTokenCallback(key, token);\n    };\n    \n    const types: TokenType[] = ['idToken', 'accessToken', 'refreshToken'];\n    const existingTokens = this.getTokensSync();\n\n    // valid tokens\n    types.forEach((type) => {\n      const token = tokens[type];\n      if (token) {\n        validateToken(token, type);\n      }\n    });\n  \n    // add token to storage\n    const storage = types.reduce((storage, type) => {\n      const token = tokens[type];\n      if (token) {\n        const storageKey = this.getStorageKeyByType(type) || type;\n        storage[storageKey] = token;\n      }\n      return storage;\n    }, {});\n    this.storage.setStorage(storage);\n  \n    // emit event and start expiration timer\n    types.forEach(type => {\n      const newToken = tokens[type];\n      const existingToken = existingTokens[type];\n      const storageKey = this.getStorageKeyByType(type) || type;\n      if (newToken && existingToken) { // renew\n        // call handleRemoved first, since it clears timers\n        handleRemoved(storageKey, existingToken);\n        handleAdded(storageKey, newToken);\n        handleRenewed(storageKey, newToken, existingToken);\n      } else if (newToken) { // add\n        handleAdded(storageKey, newToken);\n      } else if (existingToken) { //remove\n        handleRemoved(storageKey, existingToken);\n      }\n    });\n  }\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token?.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  // TODO: renew method should take no param, change in the next major version OKTA-407224\n  renew(key): Promise<Token | undefined> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    if (this.state.renewPromise) {\n      return this.state.renewPromise;\n    }\n  \n    try {\n      var token = this.getSync(key);\n      if (!token) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  \n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    this.state.renewPromise = this.sdk.token.renewTokens()\n      .then(tokens => {\n        this.setTokens(tokens);\n\n        // resolve token based on the key\n        const tokenType = this.getTokenType(token);\n        return tokens[tokenType];\n      })\n      .catch(err => {\n        // If renew fails, remove token from storage and emit error\n        this.remove(key);\n        err.tokenKey = key;\n        this.emitError(err);\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        this.state.renewPromise = null;\n      });\n  \n    return this.state.renewPromise;\n  }\n  \n  clear() {\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n  }\n\n  clearPendingRemoveTokens() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      if (tokens[key].pendingRemove) {\n       this.remove(key);\n      }\n    });\n  }\n  \n  getTokensFromStorageValue(value) {\n    let tokens;\n    try {\n      tokens = JSON.parse(value) || {};\n    } catch (e) {\n      tokens = {};\n    }\n    return tokens;\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n  }\n\n  addPendingRemoveFlags() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      tokens[key].pendingRemove = true;\n    });\n    this.setTokens(tokens);\n  }\n  \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { TokenManager, EVENT_EXPIRED } from '../TokenManager';\nimport { AuthSdkError } from '../errors';\nimport { ServiceInterface, ServiceManagerOptions } from '../types';\nimport { isBrowser } from '../features';\n\nexport class AutoRenewService implements ServiceInterface {\n  private tokenManager: TokenManager;\n  private options: ServiceManagerOptions;\n  private renewTimeQueue: Array<number>;\n  private started = false;\n\n  constructor(tokenManager: TokenManager, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  \n  private shouldThrottleRenew(): boolean {\n    let res = false;\n    this.renewTimeQueue.push(Date.now());\n    if (this.renewTimeQueue.length >= 10) {\n      // get and remove first item from queue\n      const firstTime = this.renewTimeQueue.shift() as number;\n      const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n      res = (lastTime - firstTime) < 30 * 1000;\n    }\n    return res;\n  }\n\n  requiresLeadership() {\n    // If tokens sync storage is enabled, handle tokens expiration only in 1 leader tab\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  private onTokenExpiredHandler(key: string) {\n    if (this.options.autoRenew) {\n      if (this.shouldThrottleRenew()) {\n        const error = new AuthSdkError('Too many token renew requests');\n        this.tokenManager.emitError(error);\n      } else {\n        this.tokenManager.renew(key).catch(() => {}); // Renew errors will emit an \"error\" event \n      }\n    } else if (this.options.autoRemove) {\n      this.tokenManager.remove(key);\n    }\n  }\n\n  canStart() {\n    return (!!this.options.autoRenew || !!this.options.autoRemove);\n  }\n\n  start() {\n    if (this.canStart()) {\n      this.stop();\n      this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.started = true;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.renewTimeQueue = [];\n      this.started = false;\n    }\n  }\n\n  isStarted() {\n    return this.started;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global window */\nimport { TokenManager } from '../TokenManager';\nimport { isBrowser } from '../features';\nimport { ServiceManagerOptions, ServiceInterface } from '../types';\n\n\nexport class SyncStorageService implements ServiceInterface {\n  private tokenManager: TokenManager;\n  private options: ServiceManagerOptions;\n  private syncTimeout: unknown;\n  private started = false;\n\n  constructor(tokenManager: TokenManager, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.storageListener = this.storageListener.bind(this);\n  }\n\n  // Sync authState cross multiple tabs when localStorage is used as the storageProvider\n  // A StorageEvent is sent to a window when a storage area it has access to is changed \n  // within the context of another document.\n  // https://developer.mozilla.org/en-US/docs/Web/API/StorageEvent\n  private storageListener({ key, newValue, oldValue }: StorageEvent) {\n    const opts = this.tokenManager.getOptions();\n\n    const handleCrossTabsStorageChange = () => {\n      this.tokenManager.resetExpireEventTimeoutAll();\n      this.tokenManager.emitEventsForCrossTabsStorageUpdate(newValue, oldValue);\n    };\n\n    // Skip if:\n    // not from localStorage.clear (event.key is null)\n    // event.key is not the storageKey\n    // oldValue === newValue\n    if (key && (key !== opts.storageKey || newValue === oldValue)) {\n      return;\n    }\n\n    // LocalStorage cross tabs update is not synced in IE, set a 1s timer by default to read latest value\n    // https://stackoverflow.com/questions/24077117/localstorage-in-win8-1-ie11-does-not-synchronize\n    this.syncTimeout = setTimeout(() => handleCrossTabsStorageChange(), opts._storageEventDelay);\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  start() {\n    if (this.canStart()) {\n      this.stop();\n      window.addEventListener('storage', this.storageListener);\n      this.started = true;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      window.removeEventListener('storage', this.storageListener!);\n      clearTimeout(this.syncTimeout as any);\n      this.started = false;\n    }\n  }\n} ","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport {\n  ServiceManagerInterface,\n  ServiceInterface,\n  ServiceManagerOptions\n} from './types';\nimport { OktaAuth } from '.';\nimport {\n  BroadcastChannel,\n  createLeaderElection,\n  LeaderElector\n} from 'broadcast-channel';\nimport { AutoRenewService, SyncStorageService } from './services';\nimport { isBrowser } from './features';\n\nexport class ServiceManager implements ServiceManagerInterface {\n  private sdk: OktaAuth;\n  private options: ServiceManagerOptions;\n  private services: Map<string, ServiceInterface>;\n  private channel?: BroadcastChannel;\n  private elector?: LeaderElector;\n  private started: boolean;\n\n  private static knownServices = ['autoRenew', 'syncStorage'];\n\n  private static defaultOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true\n  };\n\n  constructor(sdk: OktaAuth, options: ServiceManagerOptions = {}) {\n    this.sdk = sdk;\n\n    // TODO: backwards compatibility, remove in next major version - OKTA-473815\n    const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n    this.options = Object.assign({}, \n      ServiceManager.defaultOptions,\n      { autoRenew, autoRemove, syncStorage },\n      options\n    );\n\n    this.started = false;\n    this.services = new Map();\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  public static canUseLeaderElection() {\n    return isBrowser();\n  }\n\n  private onLeader() {\n    if (this.started) {\n      // Start services that requires leadership\n      this.startServices();\n    }\n  }\n\n  private onLeaderDuplicate() {\n  }\n\n  isLeader() {\n    return !!this.elector?.isLeader;\n  }\n\n  hasLeader() {\n    return this.elector?.hasLeader;\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.requiresLeadership());\n  }\n\n  start() {\n    if (this.started) {\n      return;     // noop if services have already started\n    }\n    // only start election if a leader is required\n    if (this.isLeaderRequired()) {\n      this.startElector();\n    }\n    this.startServices();\n    this.started = true;\n  }\n  \n  stop() {\n    this.stopElector();\n    this.stopServices();\n    this.started = false;\n  }\n\n  getService(name: string): ServiceInterface | undefined {\n    return this.services.get(name);\n  }\n\n  private startServices() {\n    for (const srv of this.services.values()) {\n      const canStart = srv.canStart() && !srv.isStarted() && (srv.requiresLeadership() ? this.isLeader() : true);\n      if (canStart) {\n        srv.start();\n      }\n    }\n  }\n\n  private stopServices() {\n    for (const srv of this.services.values()) {\n      srv.stop();\n    }\n  }\n\n  private startElector() {\n    this.stopElector();\n    if (ServiceManager.canUseLeaderElection()) {\n      if (!this.channel) {\n        const { broadcastChannelName } = this.options;\n        this.channel = new BroadcastChannel(broadcastChannelName as string);\n      }\n      if (!this.elector) {\n        this.elector = createLeaderElection(this.channel);\n        this.elector.onduplicate = this.onLeaderDuplicate;\n        this.elector.awaitLeadership().then(this.onLeader);\n      }\n    }\n  }\n\n  private stopElector() {\n    if (this.elector) {\n      this.elector?.die();\n      this.elector = undefined;\n      this.channel?.close();\n      this.channel = undefined;\n    }\n  }\n\n  private createService(name: string): ServiceInterface {\n    const tokenManager = this.sdk.tokenManager;\n\n    let service: ServiceInterface | undefined;\n    switch (name) {\n      case 'autoRenew':\n        service = new AutoRenewService(tokenManager, {...this.options});\n        break;\n      case 'syncStorage':\n        service = new SyncStorageService(tokenManager, {...this.options});\n        break;\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n    return service;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise, warn } from './util';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\ninterface PromiseQueueOptions {\n  quiet?: boolean; // if false, concurrrency warnings will not be logged\n}\nclass PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n  options: PromiseQueueOptions;\n\n  constructor(options: PromiseQueueOptions = { quiet: false }) {\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: (...args: any) => any, thisObject: any, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        // There is at least one other pending call.\n        // The PromiseQueue will prevent these methods from running concurrently.\n        if (this.options.quiet !== false) {\n          warn(\n            'Async method is being called but another async method is already running. ' +\n            'The new method will be delayed until the previous method completes.'\n          );\n        }\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var queueItem = this.queue.shift()!;\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args as never) as unknown;\n    if (isPromise(res)) {\n      (res as Promise<unknown>).then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n\nexport default PromiseQueue;","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { isFingerprintSupported } from '../features';\nimport {\n  addListener,\n  removeListener\n} from '../oidc';\nimport { FingerprintOptions, OktaAuthInterface } from '../types';\n\nexport default function fingerprint(sdk: OktaAuthInterface, options?: FingerprintOptions): Promise<string> {\n  options = options || {};\n\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  var timeout;\n  var iframe;\n  var listener;\n  var promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    // eslint-disable-next-line complexity\n    listener = function listener(e) {\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      try {\n        var msg = JSON.parse(e.data);\n      } catch (err) {\n        // iframe messages should all be parsable\n        // skip not parsable messages come from other sources in same origin (browser extensions)\n        // TODO: add namespace flag in okta-core to distinguish messages that come from other sources\n        return;\n      }\n\n      if (!msg) { return; }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint as string);\n      }\n      if (msg.type === 'FingerprintServiceReady') {\n        e.source.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      }\n    };\n    addListener(window, 'message', listener);\n\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    document.body.appendChild(iframe);\n\n    timeout = setTimeout(function() {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options?.timeout || 15000);\n  });\n\n  return promise.finally(function() {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (document.body.contains(iframe)) {\n      iframe.parentElement.removeChild(iframe);\n    }\n  }) as Promise<string>;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n \n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport PCancelable from 'p-cancelable';\nimport { AuthSdkError } from './errors';\nimport { AuthState, AuthStateLogOptions } from './types';\nimport { OktaAuth } from '.';\nimport { getConsole } from './util';\nimport { EVENT_ADDED, EVENT_REMOVED } from './TokenManager';\nimport PromiseQueue from './PromiseQueue';\n\nexport const INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\n\n// only compare first level of authState\nconst isSameAuthState = (prevState: AuthState | null, state: AuthState) => {\n  // initial state is null\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated \n    && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n    && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n    && prevState.error === state.error;\n};\n\n\nexport class AuthStateManager {\n  _sdk: OktaAuth;\n  _pending: { \n    updateAuthStatePromise: any;\n    canceledTimes: number; \n  };\n  _authState: AuthState | null;\n  _prevAuthState: AuthState | null;\n  _logOptions: AuthStateLogOptions;\n  _transformQueue: PromiseQueue;\n\n  constructor(sdk: OktaAuth) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = { ...DEFAULT_PENDING };\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    this._prevAuthState = null;\n    this._transformQueue = new PromiseQueue({\n      quiet: true\n    });\n\n    // Listen on tokenManager events to start updateState process\n    // \"added\" event is emitted in both add and renew process\n    // Only listen on \"added\" event to update auth state\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({ event: EVENT_ADDED, key, token });\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({ event: EVENT_REMOVED, key, token });\n      this.updateAuthState();\n    });\n  }\n\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n\n  getAuthState(): AuthState | null {\n    return this._authState;\n  }\n\n  getPreviousAuthState(): AuthState | null {\n    return this._prevAuthState;\n  }\n\n  async updateAuthState(): Promise<AuthState> {\n    const { transformAuthState, devMode } = this._sdk.options;\n\n    const log = (status) => {\n      const { event, key, token } = this._logOptions;\n      getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n      getConsole().log(key, token);\n      getConsole().log('Current authState', this._authState);\n      getConsole().groupEnd();\n      \n      // clear log options after logging\n      this._logOptions = {};\n    };\n\n    const emitAuthStateChange = (authState) => {\n      if (isSameAuthState(this._authState, authState)) {\n        devMode && log('unchanged'); \n        return;\n      }\n      this._prevAuthState = this._authState;\n      this._authState = authState;\n      // emit new authState object\n      this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, { ...authState });\n      devMode && log('emitted');\n    };\n\n    const finalPromise = (origPromise) => {       \n      return this._pending.updateAuthStatePromise.then(() => {\n        const curPromise = this._pending.updateAuthStatePromise;\n        if (curPromise && curPromise !== origPromise) {\n          return finalPromise(curPromise);\n        }\n        return this.getAuthState();\n      });\n    };\n\n    if (this._pending.updateAuthStatePromise) {\n      if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n        // stop canceling then starting a new promise\n        // let existing promise finish to prevent running into loops\n        devMode && log('terminated');\n        return finalPromise(this._pending.updateAuthStatePromise);\n      } else {\n        this._pending.updateAuthStatePromise.cancel();\n      }\n    }\n\n    /* eslint-disable complexity */\n    const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n      onCancel.shouldReject = false;\n      onCancel(() => {\n        this._pending.updateAuthStatePromise = null;\n        this._pending.canceledTimes = this._pending.canceledTimes + 1;\n        devMode && log('canceled');\n      });\n\n      const emitAndResolve = (authState) => {\n        if (cancelablePromise.isCanceled) {\n          resolve();\n          return;\n        }\n        // emit event and resolve promise \n        emitAuthStateChange(authState);\n        resolve();\n\n        // clear pending states after resolve\n        this._pending = { ...DEFAULT_PENDING };\n      };\n\n      this._sdk.isAuthenticated()\n        .then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n\n          // Enqueue transformAuthState so that it does not run concurrently\n          const promise: Promise<AuthState> = transformAuthState\n            ? this._transformQueue.push(transformAuthState, null, this._sdk, authState) as Promise<AuthState>\n            : Promise.resolve(authState);\n\n          promise\n            .then(authState => emitAndResolve(authState))\n            .catch(error => emitAndResolve({\n              accessToken, \n              idToken, \n              refreshToken,\n              isAuthenticated: false, \n              error\n            }));\n        });\n    });\n    /* eslint-enable complexity */\n    this._pending.updateAuthStatePromise = cancelablePromise;\n\n    return finalPromise(cancelablePromise);\n  }\n\n  subscribe(handler): void {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n  unsubscribe(handler?): void {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { StorageProvider, SimpleStorage } from './types';\n\n// formerly known as \"storageBuilder\". Represents an object saved under a key/name.\nexport default class SavedObject implements StorageProvider {\n  storageProvider: SimpleStorage;\n  storageName: string;\n\n  constructor(storage: SimpleStorage, storageName: string) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  //\n  // SimpleStorage interface\n  //\n\n  getItem(key: string) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key: string, value: any) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key: string) {\n    return this.clearStorage(key);\n  }\n\n  //\n  // StorageProvider interface\n  //\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj?: any) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key?: string) {\n    if (!key) {\n      // clear all\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  PKCE_STORAGE_NAME,\n  TOKEN_STORAGE_NAME,\n  TRANSACTION_STORAGE_NAME,\n  SHARED_TRANSACTION_STORAGE_NAME,\n  ORIGINAL_URI_STORAGE_NAME,\n  IDX_RESPONSE_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n  REDIRECT_OAUTH_PARAMS_NAME\n} from './constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  PKCEStorage,\n  CookieOptions,\n  TransactionStorage,\n  IdxResponseStorage,\n  StorageManagerOptions,\n  SimpleStorage\n} from './types';\nimport SavedObject from './SavedObject';\nimport { isBrowser } from './features';\nimport { warn } from './util';\nimport { AuthSdkError } from './errors';\n\nfunction logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageProvider) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\nexport class StorageManager {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  // eslint-disable-next-line complexity\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // Maintain compatibility. Automatically fallback. May change in next major version. OKTA-362589\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n\n    if (!storageType) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      storageType = this.storageUtil.findStorageType(storageTypes!);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // stateToken, interactionHandle\n  getTransactionStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('transaction', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getSharedTansactionStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('shared-transaction', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getOriginalUriStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('original-uri', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // intermediate idxResponse\n  // store for network traffic optimazation purpose\n  // TODO: revisit in auth-js 6.0 epic JIRA: OKTA-399791\n  getIdxResponseStorage(options?: StorageOptions): IdxResponseStorage | null {\n    let storage;\n    if (isBrowser()) {\n      // on browser side only use memory storage \n      try {\n        storage = this.storageUtil.getStorageByType('memory', options);\n      } catch (e) {\n        // it's ok to miss response storage\n        // eslint-disable-next-line max-len\n        warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n      }\n    } else {\n      // on server side re-use transaction custom storage\n      const transactionStorage = this.getTransactionStorage(options);\n      if (transactionStorage) {\n        storage = {\n          getItem: (key) => {\n            const transaction = transactionStorage.getStorage();\n            if (transaction && transaction[key]) {\n              return transaction[key];\n            }\n            return null;\n          },\n          setItem: (key, val) => {\n            const transaction = transactionStorage.getStorage();\n            if (!transaction) {\n              throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n            }\n            transaction[key] = val;\n            transactionStorage.setStorage(transaction);\n          },\n          removeItem: (key) => {\n            const transaction = transactionStorage.getStorage();\n            if (!transaction) {\n              return;\n            }\n            delete transaction[key];\n            transactionStorage.setStorage(transaction);\n          }\n        };\n      }\n    }\n\n    if (!storage) {\n      return null;\n    }\n\n    return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // Will be removed in an upcoming major version. OKTA-362589\n  getLegacyPKCEStorage(options?: StorageOptions): PKCEStorage {\n    options = this.getOptionsForSection('legacy-pkce', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || PKCE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getLegacyOAuthParamsStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('legacy-oauth-params', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || REDIRECT_OAUTH_PARAMS_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n}\n","/* eslint-disable no-use-before-define */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n// TODO: remove when idx-js provides type information\n\nexport interface ChallengeData {\n  challenge: string; \n  userVerification: string; \n  extensions?: {\n    appid: string;\n  };\n}\nexport interface ActivationData {\n  challenge: string;\n  rp: {\n    name: string;\n  };\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n  };\n  pubKeyCredParams: {\n    type: string;\n    alg: number;\n  }[];\n  attestation?: string;\n  authenticatorSelection?: {\n    userVerification?: string;\n    authenticatorAttachment?: string;\n    requireResidentKey?: boolean;\n    residentKey?: string;\n  };\n  excludeCredentials?: {\n    id: string;\n    type: string;\n  }[];\n}\nexport interface IdxAuthenticatorMethod {\n  type: string;\n}\nexport interface IdxAuthenticator {\n  displayName: string;\n  id: string;\n  key: string;\n  methods: IdxAuthenticatorMethod[];\n  type: string;\n  settings?: {\n    complexity?: unknown;\n    age?: unknown;\n  };\n  contextualData?: {\n    enrolledQuestion?: {\n      question: string;\n      questionKey: string;\n    };\n    qrcode?: { \n      href: string; \n      method: string; \n      type: string; \n    };\n    sharedSecret?: string;\n    questions?: {\n      questionKey: string;\n      question: string;\n    }[];\n    questionKeys?: string[];\n    selectedChannel?: string;\n    activationData?: ActivationData;\n    challengeData?: ChallengeData;\n  };\n  credentialId?: string;\n  enrollmentId?: string;\n}\n\nexport interface IdxForm {\n  value: IdxRemediationValue[];\n}\n\nexport interface IdxOption {\n  value: string | { form: IdxForm };\n  label: string;\n  relatesTo?: IdxAuthenticator;\n}\n\nexport interface IdpConfig {\n  id: string;\n  name: string;\n}\n\nexport interface IdxRemediationValueForm {\n  form: IdxForm;\n}\n\nexport interface IdxRemediationValue {\n  name: string;\n  type?: string;\n  required?: boolean;\n  secret?: boolean;\n  visible?: boolean;\n  mutable?: boolean;\n  value?: string | IdxRemediationValueForm;\n  label?: string;\n  form?: IdxForm;\n  options?: IdxOption[];\n  messages?: IdxMessages;\n  minLength?: number;\n  maxLength?: number;\n}\n\nexport interface IdxRemediation {\n  name: string;\n  label?: string;\n  value?: IdxRemediationValue[];\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  idp?: IdpConfig;\n  href?: string;\n  method?: string;\n  type?: string;\n  accepts?: string;\n  refresh?: number;\n}\n\nexport interface IdxContext {\n  version: string;\n  stateHandle: string;\n  expiresAt: string;\n  intent: string;\n  currentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  authenticators: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  authenticatorEnrollments: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  enrollmentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  user?: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  app: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  messages?: IdxMessages;\n  success?: IdxRemediation;\n  failure?: IdxRemediation;\n}\n\nexport interface IdxMessage {\n  message: string;\n  class: string;\n  i18n: {\n    key: string;\n    params?: unknown[];\n  };\n}\n\nexport interface IdxMessages {\n  type: 'array';\n  value: IdxMessage[];\n}\n\n// JSON response from the server\nexport interface RawIdxResponse {\n  version: string;\n  stateHandle: string;\n  intent?: string;\n  expiresAt?: string;\n  remediation?: {\n    type: 'array';\n    value: IdxRemediation[];\n  };\n  messages?: IdxMessages;\n  success?: boolean;\n  successWithInteractionCode?: IdxRemediation;\n}\n\nexport function isRawIdxResponse(obj: any): obj is RawIdxResponse {\n  return obj && obj.version;\n}\n\nexport interface IdxActionParams {\n  [key: string]: string | boolean | number;\n}\n\nexport interface IdxActions {\n  [key: string]: (params?: IdxActionParams) => Promise<IdxResponse>;\n}\n\n// Object returned from auth-js\nexport interface IdxResponse {\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  toPersist: {\n    interactionHandle?: string;\n  };\n  context?: IdxContext;\n  requestDidSucceed?: boolean;\n}\n\nexport function isIdxResponse(obj: any): obj is IdxResponse {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\n","import { isTransactionMeta, TransactionMeta } from '../types';\nimport { StorageManager } from '../StorageManager';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000; // 30 minutes\n\nexport function pruneSharedStorage(storageManager: StorageManager) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nexport function saveTransactionToSharedStorage(storageManager: StorageManager, state: string, meta: TransactionMeta) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\n\nexport function loadTransactionFromSharedStorage(storageManager: StorageManager, state: string) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\n\nexport function clearTransactionFromSharedStorage(storageManager: StorageManager, state: string) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from './errors';\nimport { REDIRECT_NONCE_COOKIE_NAME, REDIRECT_OAUTH_PARAMS_NAME, REDIRECT_STATE_COOKIE_NAME } from './constants';\nimport { StorageManager } from './StorageManager';\nimport {\n  StorageProvider,\n  TransactionMeta,\n  isTransactionMeta,\n  isOAuthTransactionMeta,\n  PKCETransactionMeta,\n  OAuthTransactionMeta,\n  TransactionMetaOptions,\n  TransactionManagerOptions,\n  CookieStorage,\n  SavedIdxResponse\n} from './types';\nimport { isRawIdxResponse } from './idx/types/idx-js';\nimport { warn } from './util';\nimport {\n  clearTransactionFromSharedStorage,\n  loadTransactionFromSharedStorage,\n  pruneSharedStorage,\n  saveTransactionToSharedStorage\n} from './util/sharedStorage';\n\nexport interface ClearTransactionMetaOptions extends TransactionMetaOptions {\n  clearSharedStorage?: boolean;\n}\nexport default class TransactionManager {\n  options: TransactionManagerOptions;\n  storageManager: StorageManager;\n  legacyWidgetSupport: boolean;\n  saveNonceCookie: boolean;\n  saveStateCookie: boolean;\n  saveParamsCookie: boolean;\n  enableSharedStorage: boolean;\n  saveLastResponse: boolean;\n\n  constructor(options: TransactionManagerOptions) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.storageManager = options.storageManager!;\n    this.legacyWidgetSupport = options.legacyWidgetSupport === false ? false : true;\n    this.saveNonceCookie = options.saveNonceCookie === false ? false : true;\n    this.saveStateCookie = options.saveStateCookie === false ? false : true;\n    this.saveParamsCookie = options.saveParamsCookie === false ? false : true;\n    this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n    this.saveLastResponse = options.saveLastResponse === false ? false : true;\n    this.options = options;\n  }\n\n  // eslint-disable-next-line complexity\n  clear(options: ClearTransactionMetaOptions = {}) {\n    const transactionStorage: StorageProvider = this.storageManager.getTransactionStorage();\n    const meta = transactionStorage.getStorage();\n\n    // Clear primary storage (by default, sessionStorage on browser)\n    transactionStorage.clearStorage();\n\n    // clear IDX response storage\n    this.clearIdxResponse();\n\n    // Usually we want to also clear shared storage unless another tab may need it to continue/complete a flow\n    if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n      const state = options.state || meta?.state;\n      if (state) {\n        clearTransactionFromSharedStorage(this.storageManager, state);\n      }\n    }\n  \n    if (!this.legacyWidgetSupport) {\n      return;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      this.clearLegacyOAuthParams();\n    }\n\n    if (options.pkce) {\n      this.clearLegacyPKCE();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  save(meta: TransactionMeta, options: TransactionMetaOptions = {}) {\n    // There must be only one transaction executing at a time.\n    // Before saving, check to see if a transaction is already stored.\n    // An existing transaction indicates a concurrency/race/overlap condition\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    const obj = storage.getStorage();\n    // oie process may need to update transaction in the middle of process for tracking purpose\n    // false alarm might be caused \n    // TODO: revisit for a better solution, https://oktainc.atlassian.net/browse/OKTA-430919\n    if (isTransactionMeta(obj) && !options.muteWarning) {\n      // eslint-disable-next-line max-len\n      warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n    }\n\n    storage.setStorage(meta);\n\n    // Shared storage allows continuation of transaction in another tab\n    if (this.enableSharedStorage && meta.state) {\n      saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n    }\n\n    if (!options.oauth) {\n      return;\n    }\n  \n    // Legacy cookie storage\n    if (this.saveNonceCookie || this.saveStateCookie || this.saveParamsCookie) {\n      const cookieStorage: CookieStorage = this.storageManager.getStorage({ storageType: 'cookie' }) as CookieStorage;\n\n      if (this.saveParamsCookie) {\n        const { \n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        } = meta;\n        const oauthParams = {\n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        };\n        cookieStorage.setItem(REDIRECT_OAUTH_PARAMS_NAME, JSON.stringify(oauthParams), null);\n      }\n\n      if (this.saveNonceCookie && meta.nonce) {\n        // Set nonce cookie for servers to validate nonce in id_token\n        cookieStorage.setItem(REDIRECT_NONCE_COOKIE_NAME, meta.nonce, null);\n      }\n\n      if (this.saveStateCookie && meta.state) {\n        // Set state cookie for servers to validate state\n        cookieStorage.setItem(REDIRECT_STATE_COOKIE_NAME, meta.state, null);\n      }\n    }\n  }\n\n  exists(options: TransactionMetaOptions = {}): boolean {\n    try {\n      const meta = this.load(options);\n      return !!meta;\n    } catch {\n      return false;\n    }\n  }\n\n  // load transaction meta from storage\n  // eslint-disable-next-line complexity,max-statements\n  load(options: TransactionMetaOptions = {}): TransactionMeta | null {\n\n    let meta: TransactionMeta;\n\n    // If state was passed, try loading transaction data from shared storage\n    if (this.enableSharedStorage && options.state) {\n      pruneSharedStorage(this.storageManager); // prune before load\n      meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n      if (isTransactionMeta(meta)) {\n        return meta;\n      }\n    }\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    meta = storage.getStorage();\n    if (isTransactionMeta(meta)) {\n      // if we have meta in the new location, there is no need to go further\n      return meta;\n    }\n\n    if (!this.legacyWidgetSupport) {\n      return null;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      try {\n        const oauthParams = this.loadLegacyOAuthParams();\n        Object.assign(meta, oauthParams);\n      } finally {\n        this.clearLegacyOAuthParams();\n      }\n    }\n\n    if (options.pkce) {\n      try {\n        const pkceMeta: PKCETransactionMeta = this.loadLegacyPKCE();\n        Object.assign(meta, pkceMeta);\n      } finally {\n        this.clearLegacyPKCE();\n      }\n    }\n\n    if (isTransactionMeta(meta)) {\n      return meta;\n    }\n    return null;\n  }\n\n  // This is for compatibility with older versions of the signin widget. OKTA-304806\n  clearLegacyPKCE(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyPKCE(): PKCETransactionMeta {\n    let storage: StorageProvider;\n    let obj;\n    \n    // Try reading from localStorage first.\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n\n    // If meta is not valid, read from sessionStorage. This is expected for more recent versions of the widget.\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n    \n    // If meta is not valid, throw an exception to avoid misleading server-side error\n    // The most likely cause of this error is trying to handle a callback twice\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n  }\n\n  clearLegacyOAuthParams(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyOAuthParams(): OAuthTransactionMeta {\n    let storage: StorageProvider;\n    let oauthParams;\n  \n    // load first from session storage\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      oauthParams = storage.getStorage();\n    }\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n    // try to load from cookie\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      oauthParams = storage.getStorage();\n    }\n\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n\n    // Something is there but we don't recognize it\n    // throw new AuthSdkError('Unable to parse the ' + REDIRECT_OAUTH_PARAMS_NAME + ' value from storage');\n  }\n\n  saveIdxResponse({ rawIdxResponse, requestDidSucceed }: SavedIdxResponse): void {\n    if (!this.saveLastResponse) {\n      return;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return;\n    }\n    storage.setStorage({ rawIdxResponse, requestDidSucceed });\n  }\n\n  loadIdxResponse(): SavedIdxResponse | null {\n    if (!this.saveLastResponse) {\n      return null;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return null;\n    }\n    const storedValue = storage.getStorage();\n    if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n      return null;\n    }\n    return storedValue;\n  }\n\n  clearIdxResponse(): void {\n    if (!this.saveLastResponse) {\n      return;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    storage?.clearStorage();\n  }\n}","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { OktaAuthOptions } from './types';\n\n// TODO: use @okta/configuration-validation (move module to this monorepo?)\n// eslint-disable-next-line complexity\nfunction assertValidConfig(args: OktaAuthOptions) {\n  args = args || {};\n\n  var scopes = args.scopes;\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' +\n      'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var issuer = args.issuer!;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\n\nexport {\n  assertValidConfig\n};\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport crossFetch from 'cross-fetch';\nimport { FetchOptions, HttpResponse } from '../types';\n\n// content-type = application/json OR application/ion+json\nconst appJsonContentTypeRegex = /application\\/\\w*\\+?json/;\n\nfunction readData(response: Response): Promise<object | string> {\n  if (response.headers.get('Content-Type') &&\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    response.headers.get('Content-Type')!.toLowerCase().indexOf('application/json') >= 0) {\n  return response.json()\n    // JSON parse can fail if response is not a valid object\n    .catch(e => {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status: number, data: object | string, response: Response) {\n  const isObject = typeof data === 'object';\n  const headers = {};\n  for (const pair of (response.headers as any).entries()) {\n    headers[pair[0]] = pair[1];\n  }\n  const result: HttpResponse = {\n    responseText: isObject ? JSON.stringify(data) : data as string,\n    status: status,\n    headers\n  };\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data as object;\n  }\n  return result;\n}\n\n/* eslint-disable complexity */\nfunction fetchRequest(method: string, url: string, args: FetchOptions) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n\n  if (body && typeof body !== 'string') {\n    // JSON encode body (if appropriate)\n    if (appJsonContentTypeRegex.test(contentType)) {\n      body = JSON.stringify(body);\n    }\n    else if (contentType === 'application/x-www-form-urlencoded') {\n      body = Object.entries(body)\n      .map( ([param, value]) => `${param}=${encodeURIComponent(value)}` )\n      .join('&');\n    }\n  }\n\n  var fetch = global.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body as string,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function(response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response)\n      .then(data => {\n        return formatResult(status, data, response);\n      })\n      .then(result => {\n        if (error || result.responseJSON?.error) {\n          // Throwing result object since error handling is done in http.js\n          throw result;\n        }\n        return result;\n      });\n  });\n}\n\nexport default fetchRequest;\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport NodeCache from 'node-cache';\nimport { SimpleStorage, StorageType, StorageUtil, Cookies } from '../types';\nimport { AuthSdkError } from '../errors';\n// eslint-disable-next-line import/no-commonjs\n\n// this is a SHARED memory storage to support a stateless http server\nconst sharedStorage = typeof NodeCache === 'function' ? new NodeCache() : null;\n\nclass ServerCookies implements Cookies {\n  nodeCache: any; // NodeCache\n  \n  constructor(nodeCache) {\n    this.nodeCache = nodeCache;\n  }\n\n  set(name: string, value: string, expiresAt: string): string {\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!(Date.parse(expiresAt))) {\n      // Time to expiration in seconds\n      var ttl = (Date.parse(expiresAt) - Date.now()) / 1000;\n      this.nodeCache.set(name, value, ttl);\n    } else {\n      this.nodeCache.set(name, value);\n    }\n\n    return this.get(name);\n  }\n\n  get(name): string {\n    return this.nodeCache.get(name);\n  }\n\n  delete(name) {\n    return this.nodeCache.del(name);\n  }\n}\n// Building this as an object allows us to mock the functions in our tests\nclass ServerStorage implements StorageUtil {\n  nodeCache: any; // NodeCache\n  storage: Cookies;\n  constructor(nodeCache) {\n    this.nodeCache = nodeCache;\n    this.storage = new ServerCookies(nodeCache);\n  }\n\n  testStorageType(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        break;\n    }\n    return supported;\n  }\n\n  getStorageByType(storageType: StorageType): SimpleStorage {\n    let storageProvider;\n    switch (storageType) {\n      case 'memory':\n        storageProvider = this.getStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  }\n\n  findStorageType(): StorageType {\n    return 'memory';\n  }\n\n  // will be removed in next version. OKTA-362589\n  getHttpCache() {\n    return null; // stubbed in server.js\n  }\n\n  // shared in-memory using node cache\n  getStorage(): SimpleStorage {\n    return {\n      getItem: this.nodeCache.get,\n      setItem: (key, value) => {\n        this.nodeCache.set(key, value, '2200-01-01T00:00:00.000Z');\n      }\n    };\n  }\n}\n\nexport default new ServerStorage(sharedStorage);\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { StorageManagerOptions, OktaAuthOptions, StorageUtil } from '../types';\n\nimport { default as storage } from '../server/serverStorage';\n\nexport function getStorage(): StorageUtil {\n  return storage;\n}\n\nexport const STORAGE_MANAGER_OPTIONS: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'memory'\n    ]\n  },\n  cache: {\n    storageTypes: [\n      'memory'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'memory'\n    ]\n  }\n};\n\nexport const enableSharedStorage = false;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\nexport function getCookieSettings(args: OktaAuthOptions = {}, isHTTPS?: boolean) {\n  return args.cookies;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { removeTrailingSlash, removeNils } from '../util';\nimport { assertValidConfig } from '../builderUtil';\nimport { OktaAuthOptions } from '../types';\n\nimport fetchRequest from '../fetch/fetchRequest';\nimport { getStorage, STORAGE_MANAGER_OPTIONS, enableSharedStorage, getCookieSettings } from './node';\nimport { isHTTPS } from '../features';\n\nexport function getDefaultOptions(): OktaAuthOptions {\n\n  \n  const options = {\n    devMode: false,\n    httpRequestClient: fetchRequest,\n    storageUtil: getStorage(),\n    storageManager: STORAGE_MANAGER_OPTIONS,\n    transactionManager: {\n      enableSharedStorage\n    }\n  };\n  return options;\n}\n\nfunction mergeOptions(options, args): OktaAuthOptions {\n  return Object.assign({}, options, removeNils(args), {\n    storageManager: Object.assign({}, options.storageManager, args.storageManager),\n    transactionManager: Object.assign({}, options.transactionManager, args.transactionManager),\n  });\n}\n\nexport function buildOptions(args: OktaAuthOptions = {}): OktaAuthOptions {\n  assertValidConfig(args);\n  args = mergeOptions(getDefaultOptions(), args);\n  return removeNils({\n    // OIDC configuration\n    issuer: removeTrailingSlash(args.issuer),\n    tokenUrl: removeTrailingSlash(args.tokenUrl),\n    authorizeUrl: removeTrailingSlash(args.authorizeUrl),\n    userinfoUrl: removeTrailingSlash(args.userinfoUrl),\n    revokeUrl: removeTrailingSlash(args.revokeUrl),\n    logoutUrl: removeTrailingSlash(args.logoutUrl),\n    clientId: args.clientId,\n    redirectUri: args.redirectUri,\n    state: args.state,\n    scopes: args.scopes,\n    postLogoutRedirectUri: args.postLogoutRedirectUri,\n    responseMode: args.responseMode,\n    responseType: args.responseType,\n    pkce: args.pkce === false ? false : true, // PKCE defaults to true\n    useInteractionCodeFlow: args.useInteractionCodeFlow,\n\n    // Internal options\n    httpRequestClient: args.httpRequestClient,\n    transformErrorXHR: args.transformErrorXHR,\n    transformAuthState: args.transformAuthState,\n    restoreOriginalUri: args.restoreOriginalUri,\n    storageUtil: args.storageUtil,\n    headers: args.headers,\n    devMode: !!args.devMode,\n    storageManager: args.storageManager,\n    transactionManager: args.transactionManager,\n    cookies: getCookieSettings(args, isHTTPS()),\n    flow: args.flow,\n    codeChallenge: args.codeChallenge,\n    codeChallengeMethod: args.codeChallengeMethod,\n    recoveryToken: args.recoveryToken,\n    activationToken: args.activationToken,\n\n    // Give the developer the ability to disable token signature validation.\n    ignoreSignature: !!args.ignoreSignature,\n\n    // Server-side web applications\n    clientSecret: args.clientSecret\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthInterface, IdxTransactionMeta, TransactionMetaOptions, PKCETransactionMeta } from '../types';\nimport { removeNils, warn } from '../util';\nimport { createOAuthMeta } from '../oidc';\n\n// Calculate new values\nexport async function createTransactionMeta(\n  authClient: OktaAuthInterface,\n  options: TransactionMetaOptions = {}\n): Promise<IdxTransactionMeta> {\n  const tokenParams = await authClient.token.prepareTokenParams(options);\n  const pkceMeta = createOAuthMeta(authClient, tokenParams) as PKCETransactionMeta;\n  let {\n    flow = 'default',\n    withCredentials = true,\n    activationToken = undefined,\n    recoveryToken = undefined,\n  } = { ...authClient.options, ...options }; // local options override SDK options\n\n  const meta: IdxTransactionMeta = {\n    ...pkceMeta,\n    flow,\n    withCredentials,\n    activationToken,\n    recoveryToken,\n  };\n  return meta;\n}\n\nexport function hasSavedInteractionHandle(authClient: OktaAuthInterface, options?: TransactionMetaOptions): boolean {\n  const savedMeta = getSavedTransactionMeta(authClient, options);\n  if (savedMeta?.interactionHandle) {\n    return true;\n  }\n  return false;\n}\n\n// Returns the saved transaction meta, if it exists and is valid\nexport function getSavedTransactionMeta(\n  authClient: OktaAuthInterface,\n  options?: TransactionMetaOptions\n): IdxTransactionMeta | undefined {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  let savedMeta;\n  try {\n    savedMeta = authClient.transactionManager.load(options) as IdxTransactionMeta;\n  } catch (e) {\n    // ignore errors here\n  }\n\n  if (!savedMeta) {\n    return;\n  }\n\n  if (isTransactionMetaValid(savedMeta, options)) {\n    return savedMeta;\n  }\n\n  // existing meta is not valid for this configuration\n  // this is common when changing configuration in local development environment\n  // in a production environment, this may indicate that two apps are sharing a storage key\n  warn('Saved transaction meta does not match the current configuration. ' + \n    'This may indicate that two apps are sharing a storage key.');\n\n}\n\nexport async function getTransactionMeta(\n  authClient: OktaAuthInterface,\n  options?: TransactionMetaOptions\n): Promise<IdxTransactionMeta> {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  // Load existing transaction meta from storage\n  const validExistingMeta = getSavedTransactionMeta(authClient, options);\n  if (validExistingMeta) {\n    return validExistingMeta;\n  }\n  // No existing? Create new transaction meta.\n  return createTransactionMeta(authClient, options);\n}\n\nexport function saveTransactionMeta (authClient: OktaAuthInterface, meta): void {\n  authClient.transactionManager.save(meta, { muteWarning: true });\n}\n\nexport function clearTransactionMeta (authClient: OktaAuthInterface): void {\n  authClient.transactionManager.clear();\n}\n\nexport function isTransactionMetaValid (meta, options: TransactionMetaOptions  = {}): boolean {\n  // Validate against certain options. If these exist in options, they must match in meta\n  const keys = [\n    'issuer',\n    'clientId',\n    'redirectUri',\n    'state',\n    'codeChallenge',\n    'codeChallengeMethod',\n    'activationToken',\n    'recoveryToken'\n  ];\n  if (isTransactionMetaValidForOptions(meta, options, keys) === false) {\n    return false;\n  }\n\n  // Validate configured flow\n  const { flow } = options;\n  if (isTransactionMetaValidForFlow(meta, flow) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isTransactionMetaValidForFlow(meta, flow) {\n  // Specific flows should not share transaction data\n  const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      // The flow has changed; abandon the old transaction\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isTransactionMetaValidForOptions(meta, options, keys) {\n  // returns false if values in meta do not match options\n  // if the option does not have a value for a specific key, it is ignored\n  const mismatch = keys.some(key => {\n    const value = options[key];\n    if (value && value !== meta[key]) {\n      return true;\n    }\n  });\n  return !mismatch;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint complexity:[0,8] */\nimport { OktaAuthInterface, IdxTransactionMeta } from '../types';\nimport { getSavedTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\nimport { createTransactionMeta } from '.';\nimport { removeNils } from '../util';\nimport { httpRequest } from '../http';\n\nexport interface InteractOptions {\n  withCredentials?: boolean;\n  state?: string;\n  scopes?: string[];\n  codeChallenge?: string;\n  codeChallengeMethod?: string;\n  activationToken?: string;\n  recoveryToken?: string;\n  clientSecret?: string;\n}\n\nexport interface InteractResponse {\n  state?: string;\n  interactionHandle: string;\n  meta: IdxTransactionMeta;\n}\n\n/* eslint-disable camelcase */\nexport interface InteractParams {\n  client_id: string;\n  scope: string;\n  redirect_uri: string;\n  code_challenge: string;\n  code_challenge_method: string;\n  state: string;\n  activation_token?: string;\n  recovery_token?: string;\n  client_secret?: string;\n}\n/* eslint-enable camelcase */\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle!,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (\n  authClient: OktaAuthInterface, \n  options: InteractOptions = {}\n): Promise<InteractResponse> {\n  options = removeNils(options);\n\n  let meta = getSavedTransactionMeta(authClient, options);\n  // If meta exists, it has been validated against all options\n\n  if (meta?.interactionHandle) {\n    return getResponse(meta); // Saved transaction, return meta\n  }\n\n  // Create new meta, respecting previous meta if it has been set and is not overridden\n  meta = await createTransactionMeta(authClient, { ...meta, ...options });\n  const baseUrl = getOAuthBaseUrl(authClient);\n  let {\n    clientId,\n    redirectUri,\n    state,\n    scopes,\n    withCredentials,\n    codeChallenge,\n    codeChallengeMethod,\n    activationToken,\n    recoveryToken,\n  } = meta as IdxTransactionMeta;\n  const clientSecret = options.clientSecret || authClient.options.clientSecret;\n  withCredentials = withCredentials ?? true;\n\n  /* eslint-disable camelcase */\n  const url = `${baseUrl}/v1/interact`;\n  const params = {\n    client_id: clientId,\n    scope: scopes.join(' '),\n    redirect_uri: redirectUri,\n    code_challenge: codeChallenge,\n    code_challenge_method: codeChallengeMethod,\n    state,\n  } as InteractParams;\n  if (activationToken) {\n    params.activation_token = activationToken;\n  }\n  if (recoveryToken) {\n    params.recovery_token = recoveryToken;\n  }\n  if (clientSecret) {\n  // X-Device-Token header need to pair with `client_secret`\n  // eslint-disable-next-line max-len\n  // https://oktawiki.atlassian.net/wiki/spaces/eng/pages/2445902453/Support+Device+Binding+in+interact#Scenario-1%3A-Non-User-Agent-with-Confidential-Client-(top-priority)\n    params.client_secret = clientSecret;\n  }\n  /* eslint-enable camelcase */\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  const resp = await httpRequest(authClient, {\n    method: 'POST',\n    url,\n    headers,\n    withCredentials,\n    args: params\n  });\n  const interactionHandle = resp.interaction_handle;\n\n  const newMeta = {\n    ...meta,\n    interactionHandle,\n    \n    // Options which can be passed into interact() should be saved in the meta\n    withCredentials,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  };\n  // Save transaction meta so it can be resumed\n  saveTransactionMeta(authClient, newMeta);\n\n  return getResponse(newMeta);\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst isFieldMutable = function isFieldMutable(field) {\n  // mutable defaults to true, annoyingly\n  return ( field.mutable !== false );\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability( action ) {\n  const defaultParamsForAction = {}; // mutable and present\n  const neededParamsForAction = []; // mutable values\n  const immutableParamsForAction = {}; // immutable\n  // TODO: remove assumption that form names are unique, neededParams being an array is a temp fix\n  // not all actions have value (e.g. redirect)\n  // making sure they are not empty and instead hold the remediation object\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n  }\n\n  for ( let field of action.value ) {\n\n    if ( isFieldMutable( field ) ) {\n\n      neededParamsForAction.push(field);\n\n      if ( field.value ?? false ) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n\n    } else {\n      immutableParamsForAction[field.name] = field.value ?? '';\n    }\n  }\n  return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n};\n\nexport const divideActionParamsByMutability = function divideActionParamsByMutability( actionList ) {\n  // TODO: when removing form name is unique assumption, this may all be redundant\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for ( let action of actionList ) {\n    const { \n      defaultParamsForAction, \n      neededParamsForAction, \n      immutableParamsForAction \n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return { defaultParams, neededParams, immutableParams };\n};\n\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { httpRequest } from '../../../http';\nimport { OktaAuthInterface } from '../../../types';    // auth-js/types\nimport { IdxActionParams } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport { makeIdxState } from './makeIdxState';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {}\n}) {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const response = await httpRequest(authClient, {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      });\n\n      return makeIdxState(authClient, { ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = makeIdxState(authClient, { ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      // Throw IDX response if request did not succeed. This behavior will be removed in version 7.0: OKTA-481844\n      throw idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthInterface, actionDefinition, toPersist ) {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { OktaAuthInterface } from '../../../types';    // auth-js/types\nimport generateIdxAction from './generateIdxAction';\n\nexport const generateRemediationFunctions = function generateRemediationFunctions(\n  authClient: OktaAuthInterface,\n  remediationValue,\n  toPersist = {}\n) {\n  return Object.fromEntries( remediationValue.map( remediation => {\n    return [\n      remediation.name,\n      generateIdxAction(authClient, remediation, toPersist),\n    ];\n  }) );\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { OktaAuthInterface } from '../../../types';    // auth-js/types\nimport { generateRemediationFunctions } from './remediationParser';\nimport generateIdxAction from './generateIdxAction';\nimport { JSONPath } from 'jsonpath-plus';\n\nconst SKIP_FIELDS = Object.fromEntries([\n  'remediation', // remediations are put into proceed/neededToProceed\n  'context', // the API response of 'context' isn't externally useful.  We ignore it and put all non-action (contextual) info into idxState.context\n].map( (field) => [ field, !!'skip this field' ] ));\n\nexport const parseNonRemediations = function parseNonRemediations( authClient: OktaAuthInterface, idxResponse, toPersist = {} ) {\n  const actions = {};\n  const context = {};\n\n  Object.keys(idxResponse)\n    .filter( field => !SKIP_FIELDS[field])\n    .forEach( field => {\n      const fieldIsObject = typeof idxResponse[field] === 'object' && !!idxResponse[field];\n\n      if ( !fieldIsObject ) {\n        // simple fields are contextual info\n        context[field] = idxResponse[field];\n        return;\n      }\n\n      if ( idxResponse[field].rel ) {\n        // top level actions\n        actions[idxResponse[field].name] = generateIdxAction(authClient, idxResponse[field], toPersist);\n        return;\n      }\n\n      const { value: fieldValue, type, ...info} = idxResponse[field];\n      context[field] = { type, ...info}; // add the non-action parts as context\n\n      if ( type !== 'object' ) {\n        // only object values hold actions\n        context[field].value = fieldValue;\n        return;\n      }\n\n      // We are an object field containing an object value\n      context[field].value = {};\n      Object.entries(fieldValue)\n        .forEach( ([subField, value]) => {\n          if (value.rel) { // is [field].value[subField] an action?\n            // add any \"action\" value subfields to actions\n            actions[`${field}-${subField.name || subField}`] = generateIdxAction(authClient, value, toPersist);\n          } else {\n            // add non-action value subfields to context\n            context[field].value[subField] = value;\n          }\n        });\n    });\n\n  return { context, actions };\n};\n\nconst expandRelatesTo = (idxResponse, value) => {\n  Object.keys(value).forEach(k => {\n    if (k === 'relatesTo') {\n      const query = Array.isArray(value[k]) ? value[k][0] : value[k];\n      if (typeof query === 'string') {\n        // eslint-disable-next-line new-cap\n        const result = JSONPath({ path: query, json: idxResponse })[0];\n        if (result) {\n          value[k] = result;\n          return;\n        }\n      }\n    }\n    if (Array.isArray(value[k])) {\n      value[k].forEach(innerValue => expandRelatesTo(idxResponse, innerValue));\n    }\n  });\n};\n\nconst convertRemediationAction = (authClient: OktaAuthInterface, remediation, toPersist) => {\n  const remediationActions = generateRemediationFunctions( authClient, [remediation], toPersist );\n  const actionFn = remediationActions[remediation.name];\n  return {\n    ...remediation,\n    action: actionFn,\n  };\n};\n\nexport const parseIdxResponse = function parseIdxResponse( authClient: OktaAuthInterface, idxResponse, toPersist = {} ): {\n  remediations: IdxRemediation[];\n  context: IdxContext;\n  actions: IdxActions;\n} {\n  const remediationData = idxResponse.remediation?.value || [];\n\n  remediationData.forEach(\n    remediation => expandRelatesTo(idxResponse, remediation)\n  );\n\n  const remediations = remediationData.map(remediation => convertRemediationAction( authClient, remediation, toPersist ));\n\n  const { context, actions } = parseNonRemediations( authClient, idxResponse, toPersist );\n\n  return {\n    remediations,\n    context,\n    actions,\n  };\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxResponse } from '../../types/idx-js';\nimport { OktaAuthInterface, RawIdxResponse } from '../../../types';    // auth-js/types\nimport { parseIdxResponse } from './idxResponseParser';\n\nexport function makeIdxState( \n  authClient: OktaAuthInterface,\n  idxResponse: RawIdxResponse,\n  toPersist,\n  requestDidSucceed: boolean\n): IdxResponse {\n  const rawIdxResponse =  idxResponse;\n  const { remediations, context, actions } = parseIdxResponse( authClient, idxResponse, toPersist );\n  const neededToProceed = [...remediations];\n\n  const proceed: IdxResponse['proceed'] = async function( remediationChoice, paramsFromUser = {} ) {\n    /*\n    remediationChoice is the name attribute on each form\n    name should remain unique for items inside the remediation that are considered forms(identify, select-factor)\n    name can be duplicate for items like redirect where its not considered a form(redirect)\n    when names are not unique its a redirect to a href, so widget wont POST to idx-js layer.\n    */\n    const remediationChoiceObject = remediations.find((remediation) => remediation.name === remediationChoice);\n    if ( !remediationChoiceObject ) {\n      return Promise.reject(`Unknown remediation choice: [${remediationChoice}]`);\n    }\n\n    return remediationChoiceObject.action(paramsFromUser);\n  };\n\n  const findCode = item => item.name === 'interaction_code';\n  const interactionCode = rawIdxResponse.successWithInteractionCode?.value?.find( findCode )?.value as string;\n\n  return {\n    proceed,\n    neededToProceed,\n    actions,\n    context,\n    rawIdxState: rawIdxResponse,\n    interactionCode,\n    toPersist,\n    requestDidSucceed,\n  };\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { makeIdxState } from './makeIdxState';\n\nexport default {\n  makeIdxState,\n};\n","import { OktaAuthInterface } from '../../types';    // auth-js/types\nimport { IdxResponse, RawIdxResponse } from '../types/idx-js';      // idx/types\nimport { IDX_API_VERSION } from '../../constants';\nimport v1 from './v1/parsers';\n\n\nexport const parsersForVersion = function parsersForVersion( version ) {\n  switch (version) {\n    case '1.0.0':\n      return v1;\n    case undefined:\n    case null:\n      throw new Error('Api version is required');\n    default:\n      throw new Error(`Unknown api version: ${version}.  Use an exact semver version.`);\n  }\n};\n\nexport function validateVersionConfig(version) {\n  if ( !version ) {\n    throw new Error('version is required');\n  }\n\n  const cleanVersion = (version ?? '').replace(/[^0-9a-zA-Z._-]/, '');\n  if ( cleanVersion !== version || !version ) {\n    throw new Error('invalid version supplied - version is required and uses semver syntax');\n  }\n\n  parsersForVersion(version); // will throw for invalid version\n}\n\nexport function makeIdxState ( \n  authClient: OktaAuthInterface,\n  rawIdxResponse: RawIdxResponse,\n  toPersist: Record<string, unknown> = {},\n  requestDidSucceed: boolean,\n): IdxResponse {\n  const version = rawIdxResponse?.version ?? IDX_API_VERSION;\n  validateVersionConfig(version);\n  \n  const { makeIdxState } = parsersForVersion(version);\n  return makeIdxState(authClient, rawIdxResponse, toPersist, requestDidSucceed);\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState, validateVersionConfig } from './idxState';\nimport { OktaAuthInterface } from '../types';\nimport { IdxResponse, isRawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\nimport { httpRequest } from '../http';\nimport { isAuthApiError } from '../errors';\n\nexport interface IntrospectOptions {\n  withCredentials?: boolean;\n  interactionHandle?: string;\n  stateHandle?: string;\n  version?: string;\n}\n\nexport async function introspect (\n  authClient: OktaAuthInterface, \n  options: IntrospectOptions = {}\n): Promise<IdxResponse> {\n  let rawIdxResponse;\n  let requestDidSucceed;\n\n  // try load from storage first\n  const savedIdxResponse = authClient.transactionManager.loadIdxResponse();\n  if (savedIdxResponse) {\n    rawIdxResponse = savedIdxResponse.rawIdxResponse;\n    requestDidSucceed = savedIdxResponse.requestDidSucceed;\n  }\n\n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = options.version || IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    const { interactionHandle, stateHandle } = options;\n    const withCredentials = options.withCredentials ?? true;\n    try {\n      requestDidSucceed = true;\n      validateVersionConfig(version);\n      const url = `${domain}/idp/idx/introspect`;\n      const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n      const headers = {\n        'Content-Type': `application/ion+json; okta-version=${version}`, // Server wants this version info\n        Accept: `application/ion+json; okta-version=${version}`,\n      };\n      rawIdxResponse = await httpRequest(authClient, {\n        method: 'POST',\n        url,\n        headers,\n        withCredentials,\n        args: body\n      });\n    } catch (err) {\n      if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n        rawIdxResponse = err.xhr.responseJSON;\n        requestDidSucceed = false;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  const { withCredentials } = options;\n  return makeIdxState(authClient, rawIdxResponse, { withCredentials }, requestDidSucceed);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name as never);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediation.value!.find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n}\n","import { Authenticator, isAuthenticator } from '../types';\n\nexport function formatAuthenticator(incoming: unknown): Authenticator {\n  let authenticator: Authenticator;\n  if  (isAuthenticator(incoming)) {\n    authenticator = incoming;\n  } else if (typeof incoming === 'string') {\n    authenticator = {\n      key: incoming\n    };\n  } else {\n    throw new Error('Invalid format for authenticator');\n  }\n  return authenticator;\n}\n\n// Returns true if the authenticators are equivalent\nexport function compareAuthenticators(auth1, auth2) {\n  if (!auth1 || !auth2) {\n    return false;\n  }\n  // by id\n  if (auth1.id && auth2.id) {\n    return (auth1.id === auth2.id);\n  }\n  // by key\n  if (auth1.key && auth2.key) {\n    return (auth1.key === auth2.key);\n  }\n  return false;\n}\n\n// Find matched authenticator in provided order\nexport function findMatchedOption(authenticators, options) {\n  let option;\n  for (let authenticator of authenticators) {\n    option = options\n      .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n    if (option) {\n      break;\n    }\n  }\n  return option;\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { NextStep, IdxMessage, Authenticator, Input, IdxOptions, RemediateOptions } from '../../types';\nimport { IdxAuthenticator, IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { getAllValues, getRequiredValues, titleCase, getAuthenticatorFromRemediation } from '../util';\nimport { formatAuthenticator, compareAuthenticators } from '../../authenticator/util';\n\n// A map from IDX data values (server spec) to RemediationValues (client spec)\nexport type IdxToRemediationValueMap = Record<string, string[]>;\n\nexport interface RemediationValues extends IdxOptions {\n  stateHandle?: string;\n  authenticators?: (Authenticator | string)[];\n  authenticator?: string | Authenticator;\n  authenticatorsData?: Authenticator[];\n  resend?: boolean;\n}\n\nexport interface RemediatorConstructor {\n  new<T extends RemediationValues>(remediation: IdxRemediation, values?: T, options?: RemediateOptions): any;\n}\n\n// Base class - DO NOT expose static remediationName\nexport class Remediator<T extends RemediationValues = RemediationValues> {\n  static remediationName: string;\n\n  remediation: IdxRemediation;\n  values: T;\n  options: RemediateOptions;\n  map?: IdxToRemediationValueMap;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T, options: RemediateOptions = {}) {\n    // assign fields to the instance\n    this.values = { ...values };\n    this.options = { ...options };\n    this.formatAuthenticators();\n    this.remediation = remediation;\n  }\n\n  private formatAuthenticators() {\n    this.values.authenticators = (this.values.authenticators || []) as Authenticator[];\n\n    // ensure authenticators are in the correct format\n    this.values.authenticators = this.values.authenticators.map(authenticator => {\n      return formatAuthenticator(authenticator);\n    });\n\n    // add authenticator (if any) to \"authenticators\"\n    if (this.values.authenticator) {\n      const authenticator = formatAuthenticator(this.values.authenticator);\n      const hasAuthenticatorInList = this.values.authenticators.some(existing => {\n        return compareAuthenticators(authenticator, existing);\n      });\n      if (!hasAuthenticatorInList) {\n        this.values.authenticators.push(authenticator);\n      }\n    }\n\n    // save non-key meta to \"authenticatorsData\" field\n    // authenticators will be removed after selection to avoid select-authenticator loop\n    this.values.authenticatorsData = this.values.authenticators.reduce((acc, authenticator) => {\n      if (typeof authenticator === 'object' && Object.keys(authenticator).length > 1) {\n        // save authenticator meta into authenticator data\n        acc.push(authenticator);\n      }\n      return acc;\n    }, this.values.authenticatorsData || []);\n  }\n\n  getName(): string {\n    return this.remediation.name;\n  }\n\n  // Override this method to provide custom check\n  /* eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars */\n  canRemediate(): boolean {\n    const required = getRequiredValues(this.remediation);\n    const needed = required!.find((key) => !this.hasData(key));\n    if (needed) {\n      return false; // missing data for a required field\n    }\n    return true; // all required fields have available data\n  }\n\n  // returns an object for the entire remediation form, or just a part\n  getData(key?: string) {\n\n    if (!key) {\n      let allValues = getAllValues(this.remediation);\n      let res = allValues!.reduce((data, key) => {\n        data[key] = this.getData(key); // recursive\n        return data;\n      }, {});\n      return res;\n    }\n\n    // Map value by \"map${Property}\" function in each subClass\n    if (typeof this[`map${titleCase(key)}`] === 'function') {\n      const val = this[`map${titleCase(key)}`](\n        this.remediation.value!.find(({name}) => name === key)\n      );\n      if (val) {\n        return val;\n      }\n    }\n\n    // If a map is defined for this key, return the first aliased property that returns a truthy value\n    if (this.map && this.map[key]) {\n      const entry = this.map[key];\n      for (let i = 0; i < entry.length; i++) {\n        let val = this.values[entry[i]];\n        if (val) {\n          return val;\n        }\n      }\n    }\n\n    // fallback: return the value by key\n    return this.values[key];\n  }\n\n  hasData(\n    key: string // idx name\n  ): boolean \n  {\n    // no attempt to format, we want simple true/false\n    return !!this.getData(key);\n  }\n\n  getNextStep(_context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    const authenticator = this.getAuthenticator();\n    // TODO: remove type field in the next major version change\n    // https://oktainc.atlassian.net/browse/OKTA-431749\n    const type = authenticator?.type;\n    return { \n      name, \n      inputs, \n      ...(type && { type }),\n      ...(authenticator && { authenticator }),\n    };\n  }\n\n  // Get inputs for the next step\n  private getInputs(): Input[] {\n    const inputs: Input[] = [];\n    const inputsFromRemediation = this.remediation.value || [];\n    inputsFromRemediation.forEach(inputFromRemediation => {\n      let input;\n      let { name, type, visible, messages } = inputFromRemediation;\n      if (visible === false) {\n        return; // Filter out invisible inputs, like stateHandle\n      }\n      if (typeof this[`getInput${titleCase(name)}`] === 'function') {\n        input = this[`getInput${titleCase(name)}`](inputFromRemediation);\n      } else if (type !== 'object') {\n        // handle general primitive types\n        let alias;\n        const aliases = (this.map ? this.map[name] : null) || [];\n        if (aliases.length === 1) {\n          alias = aliases[0];\n        } else {\n          // try find key from values\n          alias = aliases.find(name => Object.keys(this.values).includes(name));\n        }\n        if (alias) {\n          input = { ...inputFromRemediation, name: alias };\n        }\n      }\n      if (!input) {\n        input = inputFromRemediation;\n      }\n      if (Array.isArray(input)) {\n        input.forEach(i => inputs.push(i));\n      } else {\n        // guarantees field-level messages are passed back\n        if (messages) {\n          input.messages = messages;\n        }\n        inputs.push(input);\n      }\n    });\n    return inputs;\n  }\n\n  static getMessages(remediation: IdxRemediation): IdxMessage[] | undefined {\n    if (!remediation.value) {\n      return;\n    }\n    return remediation.value[0]?.form?.value.reduce((messages: IdxMessage[], field) => {\n      if (field.messages) {\n        messages = [...messages, ...field.messages.value];\n      }\n      return messages;\n    }, []);\n  }\n\n  // Prepare values for the next remediation\n  // In general, remove used values from inputs for the current remediation\n  // Override this method if special cases need be handled\n  getValuesAfterProceed(): T {\n    const inputsFromRemediation = this.remediation.value || []; // \"raw\" inputs from server response\n    const inputsFromRemediator = this.getInputs(); // \"aliased\" inputs from SDK remediator\n    const inputs = [\n      ...inputsFromRemediation,\n      ...inputsFromRemediator\n    ];\n    // scrub all values related to this remediation\n    for (const input of inputs) {\n      delete this.values[input.name];\n    }\n    return this.values;\n  }\n\n  protected getAuthenticator(): IdxAuthenticator | undefined {\n    // relatesTo value may be an authenticator or an authenticatorEnrollment\n    const relatesTo = this.remediation.relatesTo?.value;\n    if (!relatesTo) {\n      return;\n    }\n\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    if (!authenticatorFromRemediation) {\n      // Hopefully value is an authenticator\n      return relatesTo;\n    }\n\n    // If relatesTo is an authenticatorEnrollment, the id is actually the enrollmentId\n    // Let's get the correct authenticator id from the form value\n    const id = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'id')!.value as string;\n    const enrollmentId = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'enrollmentId')?.value as string;\n\n    return {\n      ...relatesTo,\n      id,\n      enrollmentId\n    };\n  }\n}\n","import { IdxAuthenticator, IdxRemediationValue } from '../types/idx-js';\n\n\nexport interface Credentials {\n  [key: string]: string | undefined;\n}\n\nexport abstract class Authenticator<Values> {\n  meta: IdxAuthenticator;\n\n  constructor(authenticator: IdxAuthenticator) {\n    this.meta = authenticator;\n  }\n\n  abstract canVerify(values: Values): boolean;\n\n  abstract mapCredentials(values: Values): Credentials | undefined;\n\n  abstract getInputs(idxRemediationValue: IdxRemediationValue): any; // TODO: add type\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface VerificationCodeValues {\n  verificationCode?: string;\n  otp?: string;\n  credentials?: Credentials;\n}\n\ninterface VerificationCodeCredentials extends Credentials {\n  passcode: string;\n}\n\n// general authenticator to handle \"verificationCode\" input\n// it can be used for \"email\", \"phone\", \"google authenticator\"\n// a new authenticator class should be created if special cases need to be handled\nexport class VerificationCodeAuthenticator extends Authenticator<VerificationCodeValues> {\n  canVerify(values: VerificationCodeValues) {\n    return !!(values.credentials ||values.verificationCode || values.otp);\n  }\n\n  mapCredentials(values): VerificationCodeCredentials | Credentials | undefined {\n    const { credentials, verificationCode, otp } = values;\n    if (!credentials && !verificationCode && !otp) {\n      return;\n    }\n    return credentials || { passcode: verificationCode || otp };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'verificationCode',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n","import { Credentials } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\n\ninterface TotpCredentials extends Credentials {\n  totp: string;\n}\n\nexport class OktaVerifyTotp extends VerificationCodeAuthenticator {\n  mapCredentials(values): TotpCredentials | undefined {\n    const { verificationCode } = values;\n    if (!verificationCode) {\n      return;\n    }\n    return { totp: verificationCode };\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface OktaPasswordInputValues {\n  password?: string;\n  credentials?: Credentials;\n}\n\nexport class OktaPassword extends Authenticator<OktaPasswordInputValues> {\n  canVerify(values: OktaPasswordInputValues) {\n    return !!(values.credentials || values.password);\n  }\n\n  mapCredentials(values: OktaPasswordInputValues): Credentials | undefined {\n    const { credentials, password } = values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionEnrollValues {\n  questionKey?: string;\n  question?: string;\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionEnrollment extends Authenticator<SecurityQuestionEnrollValues> {\n  canVerify(values: SecurityQuestionEnrollValues) {\n    const { credentials } = values;\n    if (credentials && credentials.questionKey && credentials.answer) {\n      return true;\n    }\n    const { questionKey, question, answer } = values;\n    return !!(questionKey && answer) || !!(question && answer);\n  }\n\n  mapCredentials(values: SecurityQuestionEnrollValues): Credentials | undefined {\n    const { questionKey, question, answer } = values;\n    if (!questionKey && !question && !answer) {\n      return;\n    }\n    return {\n      questionKey: question ? 'custom' : questionKey,\n      question,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'questionKey', type: 'string', required: true },\n      { name: 'question', type: 'string', label: 'Create a security question' },\n      { name: 'answer', type: 'string', label: 'Answer', required: true },\n    ];\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionVerificationValues {\n  answer?: string;\n}\n\nexport class SecurityQuestionVerification extends Authenticator<SecurityQuestionVerificationValues> {\n  canVerify(values: SecurityQuestionVerificationValues) {\n    return !!values.answer;\n  }\n\n  mapCredentials(values: SecurityQuestionVerificationValues): Credentials | undefined {\n    const { answer } = values;\n    if (!answer) {\n      return;\n    }\n    return {\n      questionKey: this.meta.contextualData!.enrolledQuestion!.questionKey,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'answer', type: 'string', label: 'Answer', required: true }\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnEnrollValues {\n  clientData?: string;\n  attestation?: string;\n}\n\nexport class WebauthnEnrollment extends Authenticator<WebauthnEnrollValues> {\n  canVerify(values: WebauthnEnrollValues) {\n    const { clientData, attestation } = values;\n    return !!(clientData && attestation);\n  }\n\n  mapCredentials(values: WebauthnEnrollValues): Credentials | undefined {\n    const { clientData, attestation } = values;\n    if (!clientData && !attestation) {\n      return;\n    }\n    return {\n      clientData,\n      attestation\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'clientData', type: 'string', required: true, visible: false, label: 'Client Data' },\n      { name: 'attestation', type: 'string', required: true, visible: false, label: 'Attestation' },\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnVerificationValues {\n  clientData?: string;\n  authenticatorData?: string;\n  signatureData?: string;\n}\n\nexport class WebauthnVerification extends Authenticator<WebauthnVerificationValues> {\n  canVerify(values: WebauthnVerificationValues) {\n    const { clientData, authenticatorData, signatureData } = values;\n    return !!(clientData && authenticatorData && signatureData);\n  }\n\n  mapCredentials(values: WebauthnVerificationValues): Credentials | undefined {\n    const { authenticatorData, clientData, signatureData } = values;\n    if (!authenticatorData && !clientData && !signatureData) {\n      return;\n    }\n    return {\n      authenticatorData,\n      clientData,\n      signatureData\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'authenticatorData', type: 'string', label: 'Authenticator Data', required: true, visible: false },\n      { name: 'clientData', type: 'string', label: 'Client Data', required: true, visible: false },\n      { name: 'signatureData', type: 'string', label: 'Signature Data', required: true, visible: false },\n    ];\n  }\n}\n","import { OktaVerifyTotp } from './OktaVerifyTotp';\nimport { Authenticator } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\nimport { OktaPassword } from './OktaPassword';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification';\nimport { WebauthnEnrollment } from './WebauthnEnrollment';\nimport { WebauthnVerification } from './WebauthnVerification';\nimport { IdxAuthenticator, IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey } from '../types';\n\n/* eslint complexity:[0,8] */\nexport function getAuthenticator(remediation: IdxRemediation): Authenticator<any> {\n  const relatesTo = remediation.relatesTo;\n  const value = relatesTo?.value || {} as IdxAuthenticator;\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if (value.contextualData?.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if (value.contextualData?.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticator, Authenticator, AuthenticatorValues } from '../../authenticator';\nimport { IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { NextStep } from '../../types';\n\nexport type VerifyAuthenticatorValues = AuthenticatorValues & RemediationValues;\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator<T extends VerifyAuthenticatorValues = VerifyAuthenticatorValues>\n  extends Remediator<T> {\n\n  authenticator: Authenticator<VerifyAuthenticatorValues>;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n    this.authenticator = getAuthenticator(remediation);\n  }\n\n  getNextStep(context?: IdxContext): NextStep {\n    const nextStep = super.getNextStep(context);\n    const authenticatorEnrollments = context?.authenticatorEnrollments?.value;\n\n    return {\n      ...nextStep,\n      authenticatorEnrollments\n    };\n  }\n\n  canRemediate() {\n    return this.authenticator.canVerify(this.values);\n  }\n\n  mapCredentials() {\n    return this.authenticator.mapCredentials(this.values);\n  }\n\n  getInputCredentials(input) {\n    return this.authenticator.getInputs(input);\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'credentials');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {} as T);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type EnrollAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class EnrollAuthenticator extends VerifyAuthenticator<EnrollAuthenticatorValues> {\n  static remediationName = 'enroll-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { NextStep } from '../../types';\nimport { IdxContext } from '../types/idx-js';\n\nexport interface EnrollPollValues extends RemediationValues {\n  startPolling?: boolean;\n}\n\nexport class EnrollPoll extends Remediator<EnrollPollValues> {\n  static remediationName = 'enroll-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'enroll-poll';\n  }\n\n  getNextStep(context?: IdxContext): NextStep {\n    const common = super.getNextStep(context);\n    let authenticator = this.getAuthenticator();\n    if (!authenticator && context?.currentAuthenticator) {\n      authenticator = context.currentAuthenticator.value;\n    }\n    return {\n      ...common,\n      authenticator,\n      poll: {\n        required: true,\n        refresh: this.remediation.refresh\n      },\n    };\n  }\n\n  getValuesAfterProceed(): EnrollPollValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxOption, IdxRemediationValue, IdxContext } from '../types/idx-js';\nimport { getAuthenticatorFromRemediation } from './util';\n\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator<SelectEnrollmentChannelValues> {\n  static remediationName = 'select-enrollment-channel';\n\n  canRemediate() {\n    return Boolean(this.values.channel);\n  }\n\n  getNextStep(context: IdxContext) {\n    const common = super.getNextStep();\n    const options = this.getChannels();\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      ...(options && { options }),\n      authenticator,\n    };\n  }\n\n  private getChannels(): IdxOption[] | undefined {\n    const authenticator: IdxRemediationValue = getAuthenticatorFromRemediation(this.remediation);\n    const remediationValue = authenticator.value as IdxRemediationValueForm;\n    return remediationValue.form.value.find(({ name }) => name === 'channel')?.options;\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed() {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'channel');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxContext } from '../types/idx-js';\n\n\nexport type EnrollmentChannelDataValues = RemediationValues & {\n  email?: string;\n  phoneNumber?: string;\n};\n\nexport class EnrollmentChannelData extends Remediator<EnrollmentChannelDataValues> {\n  static remediationName = 'enrollment-channel-data';\n\n  getInputEmail() {\n    return [\n      { name: 'email', type: 'string', required: true, label: 'Email' },\n    ];\n  }\n\n  getInputPhoneNumber() {\n    return [\n      { name: 'phoneNumber', type: 'string', required: true, label: 'Phone Number' },\n    ];\n  }\n\n  canRemediate() {\n    return Boolean(this.values.email || this.values.phoneNumber);\n  }\n\n  getNextStep(context: IdxContext) {\n    const common = super.getNextStep();\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    return {\n      stateHandle: this.values.stateHandle,\n      email: this.values.email,\n      phoneNumber: this.values.phoneNumber\n    };\n  }\n\n  getValuesAfterProceed() {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => !['email', 'phoneNumber'].includes(valueKey));\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ChallengeAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ChallengeAuthenticator extends VerifyAuthenticator<ChallengeAuthenticatorValues> {\n  static remediationName = 'challenge-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { EnrollPoll } from './EnrollPoll';\n\nexport class ChallengePoll extends EnrollPoll{\n  static remediationName = 'challenge-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'challenge-poll';\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ResetAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ResetAuthenticator extends VerifyAuthenticator<ResetAuthenticatorValues> {\n  static remediationName = 'reset-authenticator';\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediationValue } from '../types/idx-js';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n}\n\nexport class EnrollProfile extends Remediator<EnrollProfileValues> {\n  static remediationName = 'enroll-profile';\n\n  canRemediate() {\n    const userProfileFromValues = this.getData().userProfile;\n    if (!userProfileFromValues) {\n      return false;\n    }\n    // eslint-disable-next-line max-len\n    const userProfileFromRemediation = this.remediation.value!.find(({ name }) => name === 'userProfile') as IdxRemediationValue;\n    return userProfileFromRemediation.form!.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n    return data;\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Credentials } from '../authenticator';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n  credentials?: Credentials;\n}\n\nexport class Identify extends Remediator<IdentifyValues> {\n  static remediationName = 'identify';\n\n  map = {\n    'identifier': ['username']\n  };\n\n  canRemediate() {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    const { credentials, password } = this.values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator<ReEnrollAuthenticatorValues> {\n  static remediationName = 'reenroll-authenticator';\n\n  mapCredentials() {\n    const { newPassword } = this.values;\n    if (!newPassword) {\n      return;\n    }\n    return { \n      passcode: newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const challengeType = this.getAuthenticator()!.type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator } from './Base/Remediator';\n\nexport class RedirectIdp extends Remediator {\n  static remediationName = 'redirect-idp';\n\n  canRemediate() {\n    return false;\n  }\n\n  getNextStep() {\n    const { name, type, idp, href } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxOption, IdxRemediationValue } from '../../types/idx-js';\nimport { Authenticator, isAuthenticator } from '../../types';\nimport { compareAuthenticators, findMatchedOption} from '../../authenticator/util';\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string | Authenticator;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator<T extends SelectAuthenticatorValues = SelectAuthenticatorValues>\n  extends Remediator<T> {\n  selectedAuthenticator?: Authenticator;\n  selectedOption?: any;\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  canRemediate() {\n    const { authenticators, authenticator } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      return true;\n    }\n\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options);\n    if (matchedOption) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  getNextStep() {\n    const common = super.getNextStep();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const options = authenticatorFromRemediation.options!.map(option => {\n      const { \n        label, \n        relatesTo\n      } = option as IdxOption;\n      const key = relatesTo!.key!;\n      return { label, value: key };\n    });\n    return { ...common, options };\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators, authenticator } = this.values;\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      this.selectedAuthenticator = authenticator; // track the selected authenticator\n      return authenticator;\n    }\n\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    this.selectedAuthenticator = selectedOption.relatesTo; // track the selected authenticator\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator() {\n    return { name: 'authenticator', key: 'string' };\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey, Authenticator, RemediateOptions } from '../types';\n\nexport type SelectAuthenticatorAuthenticateValues = SelectAuthenticatorValues & {\n  password?: string;\n};\n\nexport class SelectAuthenticatorAuthenticate extends SelectAuthenticator<SelectAuthenticatorAuthenticateValues> {\n  static remediationName = 'select-authenticator-authenticate';\n\n  constructor(remediation: IdxRemediation, values: SelectAuthenticatorValues = {}, options: RemediateOptions = {}) {\n    super(remediation, values, options);\n\n    // Preset password authenticator to trigger recover action\n    const isRecoveryFlow = this.options.flow === 'recoverPassword';\n    const hasPasswordInOptions = getAuthenticatorFromRemediation(remediation)\n      .options?.some(({ relatesTo }) => relatesTo?.key === AuthenticatorKey.OKTA_PASSWORD);\n    if (hasPasswordInOptions && (isRecoveryFlow || this.values.password)) {\n      this.values.authenticators = [\n        ...this.values.authenticators || [],\n        { key: AuthenticatorKey.OKTA_PASSWORD }\n      ] as Authenticator[];\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorEnrollValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorEnroll extends SelectAuthenticator<SelectAuthenticatorEnrollValues> {\n  static remediationName = 'select-authenticator-enroll';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { Authenticator } from '../../types';\nimport { IdxRemediationValue } from '../types/idx-js';\n\n\nexport type SelectAuthenticatorUnlockAccountValues = SelectAuthenticatorValues & {\n  identifier?: string;\n  methodType?: string;\n};\n\nexport class SelectAuthenticatorUnlockAccount extends SelectAuthenticator<SelectAuthenticatorUnlockAccountValues> {\n  static remediationName = 'select-authenticator-unlock-account';\n  authenticator?: Authenticator;\n\n  map = {\n    identifier: ['username']\n  };\n\n  canRemediate() {\n    const identifier = this.getData('identifier');\n    return !!identifier && super.canRemediate();\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const authenticatorMap = super.mapAuthenticator(remediationValue);\n    const methodTypeOption = this.selectedOption?.value.form.value.find(({ name }) => name === 'methodType');\n\n    // defaults to 'manually defined' value\n    // 2nd: option may have pre-defined value, like stateHandle\n    // 3rd: if only a single OV option is available, default to that option\n    const methodTypeValue = this.values.methodType ||\n      methodTypeOption?.value as string || methodTypeOption?.options?.[0]?.value as string;\n\n    if (methodTypeValue) {\n      return {\n        ...authenticatorMap,\n        methodType: methodTypeValue\n      };\n    }\n\n    return authenticatorMap;\n  }\n\n  getInputUsername () {\n    return { name: 'username', key: 'string' };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SelectEnrollProfileValues extends RemediationValues {}\n\nexport class SelectEnrollProfile extends Remediator<SelectEnrollProfileValues> {\n  static remediationName = 'select-enroll-profile';\n\n  canRemediate() {\n    return true;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { IdxRemediationValue, IdxOption, IdxRemediation, IdxAuthenticator } from '../../types/idx-js';\nimport { isAuthenticator } from '../../types';\nimport { compareAuthenticators } from '../../authenticator/util';\n\nexport type AuthenticatorDataValues = RemediationValues & {\n  methodType?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class AuthenticatorData<T extends AuthenticatorDataValues = AuthenticatorDataValues> extends Remediator<T> {\n  authenticator: IdxAuthenticator;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n\n    // set before other data calculation\n    this.authenticator = this.getAuthenticator()!;\n\n    this.formatAuthenticatorData();\n  }\n\n  protected formatAuthenticatorData() {\n    const authenticatorData = this.getAuthenticatorData();\n    if (authenticatorData) {\n      this.values.authenticatorsData = this.values.authenticatorsData!.map(data => {\n        if (compareAuthenticators(this.authenticator, data)) {\n          return this.mapAuthenticatorDataFromValues(data);\n        }\n        return data;\n      });\n    } else {\n      const data = this.mapAuthenticatorDataFromValues();\n      if (data) {\n        this.values.authenticatorsData!.push(data);\n      }\n    }\n  }\n\n  protected getAuthenticatorData() {\n    return this.values.authenticatorsData!\n      .find((data) => compareAuthenticators(this.authenticator, data));\n  }\n\n  canRemediate() {\n    return this.values.authenticatorsData!\n      .some(data => compareAuthenticators(this.authenticator, data));\n  }\n\n  getNextStep() {\n    const common = super.getNextStep();\n    const options = this.getMethodTypes();\n    return { \n      ...common, \n      ...(options && { options }) \n    };\n  }\n\n  protected mapAuthenticatorDataFromValues(authenticatorData?) {\n    // add methodType to authenticatorData if it exists in values\n    let { methodType, authenticator } = this.values;\n    if (!methodType && isAuthenticator(authenticator)) {\n     methodType = authenticator?.methodType;\n    }\n    \n    const { id, enrollmentId } = this.authenticator;\n    const data = { \n      id,\n      enrollmentId,\n      ...(authenticatorData && authenticatorData),\n      ...(methodType && { methodType }) \n    };\n\n    return data.methodType ? data : null;\n  }\n\n  protected getAuthenticatorFromRemediation(): IdxRemediationValue {\n    const authenticator = this.remediation.value!\n      .find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n    return authenticator;\n  }\n\n  private getMethodTypes(): IdxOption[] {\n    const authenticator: IdxRemediationValue = this.getAuthenticatorFromRemediation();\n    return authenticator.form!.value.find(({ name }) => name === 'methodType')?.options as IdxOption[];\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticatorData\n    const authenticatorsData = this.values.authenticatorsData!\n      .filter(data => compareAuthenticators(this.authenticator, data) !== true);\n    return { ...this.values, authenticatorsData };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../../errors';\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { IdxRemediation } from '../types/idx-js';\nimport { RemediateOptions } from '../remediate';\n\nexport type AuthenticatorVerificationDataValues = AuthenticatorDataValues;\n\nexport class AuthenticatorVerificationData extends AuthenticatorData<AuthenticatorVerificationDataValues> {\n  static remediationName = 'authenticator-verification-data';\n\n  shouldProceedWithEmailAuthenticator: boolean; // will be removed in next major version\n\n  constructor(remediation: IdxRemediation, values: AuthenticatorDataValues = {}, options: RemediateOptions = {}) {\n    super(remediation, values);\n\n    // will be removed in next major version\n    this.shouldProceedWithEmailAuthenticator = options.shouldProceedWithEmailAuthenticator !== false\n      && this.authenticator.methods.length === 1 \n      && this.authenticator.methods[0].type === 'email';\n  }\n\n  canRemediate() {\n    // auto proceed if there is only one method (will be removed in next major version)\n    if (this.shouldProceedWithEmailAuthenticator !== false) {\n      return true;\n    }\n    return super.canRemediate();\n  }\n\n  mapAuthenticator() {\n    // auto proceed with the only methodType option\n    if (this.shouldProceedWithEmailAuthenticator !== false) {\n      const authenticatorFromRemediation = this.getAuthenticatorFromRemediation();\n      return authenticatorFromRemediation.form?.value.reduce((acc, curr) => {\n        if (curr.value) {\n          acc[curr.name] = curr.value;\n        } else if (curr.options) {\n          acc[curr.name] = curr.options![0].value;\n        } else {\n          throw new AuthSdkError(`Unsupported authenticator data type: ${curr}`);\n        }\n        return acc;\n      }, {});\n    }\n\n    return this.getAuthenticatorData();\n  }\n\n  getInputAuthenticator() {\n    const authenticator = this.getAuthenticatorFromRemediation();\n    const methodType = authenticator.form!.value.find(({ name }) => name === 'methodType');\n    // if has methodType in form, let user select the methodType\n    if (methodType && methodType.options) {\n      return { name: 'methodType', type: 'string', required: true };\n    }\n    // no methodType, then return form values\n    const inputs = [...authenticator.form!.value];\n    return inputs;\n  }\n\n  getValuesAfterProceed(): AuthenticatorVerificationDataValues {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'authenticator');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { getAuthenticatorFromRemediation } from './util';\n\nexport type AuthenticatorEnrollmentDataValues =  AuthenticatorDataValues & {\n  phoneNumber?: string;\n  resend?: boolean; // resend is not a remediator value - revise when IdxResponse structure is updated\n}\nexport class AuthenticatorEnrollmentData extends AuthenticatorData<AuthenticatorEnrollmentDataValues> {\n  static remediationName = 'authenticator-enrollment-data';\n\n  mapAuthenticator() {\n    const authenticatorData = this.getAuthenticatorData();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation)!;\n    return { \n      id: authenticatorFromRemediation.form!.value\n        .find(({ name }) => name === 'id')!.value,\n      methodType: authenticatorData!.methodType,\n      phoneNumber: authenticatorData!.phoneNumber,\n    };\n  }\n\n  getInputAuthenticator() {\n    return [\n      { name: 'methodType', type: 'string', required: true },\n      { name: 'phoneNumber', type: 'string', required: true, label: 'Phone Number' },\n    ];\n  }\n\n  protected mapAuthenticatorDataFromValues(data?) {\n    // get mapped authenticator from base class\n    data = super.mapAuthenticatorDataFromValues(data);\n    // add phoneNumber to authenticator if it exists in values\n    const { phoneNumber } = this.values;\n    if (!data && !phoneNumber) {\n      return;\n    }\n\n    return { \n      ...(data && data), \n      ...(phoneNumber && { phoneNumber }) \n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface SkipValues extends RemediationValues {\n  skip?: boolean;\n}\n\nexport class Skip extends Remediator<SkipValues> {\n  static remediationName = 'skip';\n\n  canRemediate() {\n    return !!this.values.skip || this.options.step === 'skip';\n  }\n\n}\n","import { warn } from '../util';\nimport * as remediators from './remediators';\nimport { RemediationValues, Remediator, RemediatorConstructor } from './remediators';\nimport { IdxFeature, NextStep, RemediateOptions, RemediationResponse } from './types';\nimport { IdxMessage, IdxRemediation, IdxRemediationValue, IdxResponse, isIdxResponse } from './types/idx-js';\n\nexport function isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nexport function canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nexport function canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nexport function getMessagesFromIdxRemediationValue(\n  value?: IdxRemediationValue[]\n): IdxMessage[] | undefined {\n  if (!value || !Array.isArray(value)) {\n    return;\n  }\n  return value.reduce((messages, value) => {\n    if (value.messages) {\n      messages = [...messages, ...value.messages.value] as never;\n    }\n    if (value.form) {\n      const messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n      messages = [...messages, ...messagesFromForm] as never;\n    } \n    if (value.options) {\n      let optionValues = [];\n      value.options.forEach(option => {\n        if (!option.value || typeof option.value === 'string') {\n          return;\n        }\n        optionValues = [...optionValues, option.value] as never;\n      });\n      const messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n      messages = [...messages, ...messagesFromOptions] as never;\n    }\n    return messages;\n  }, []);\n}\n\nexport function getMessagesFromResponse(idxResponse: IdxResponse): IdxMessage[] {\n  let messages: IdxMessage[] = [];\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages] as never;\n  }\n\n  // Handle field messages for current flow\n  for (let remediation of neededToProceed) {\n    const fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n    if (fieldMessages) {\n      messages = [...messages, ...fieldMessages] as never;\n    }\n  }\n\n  // API may return identical error on same field, filter by i18n key\n  const seen = {};\n  messages = messages.reduce((filtered, message) => {\n    const key = message.i18n?.key;\n    if (key && seen[key]) {\n      return filtered;\n    }\n    seen[key] = message;\n    filtered = [...filtered, message] as never;\n    return filtered;\n  }, []);\n  return messages;\n}\n\n\nexport function getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'unlock-account')) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK as never);\n  }\n\n  return res;\n}\n\nexport function getAvailableSteps(idxResponse: IdxResponse): NextStep[] {\n  const res: NextStep[] = [];\n\n  const remediatorMap: Record<string, RemediatorConstructor> = Object.values(remediators)\n    .reduce((map, remediatorClass) => {\n      // Only add concrete subclasses to the map\n      if (remediatorClass.remediationName) {\n        map[remediatorClass.remediationName] = remediatorClass;\n      }\n      return map;\n    }, {});\n\n  for (let remediation of idxResponse.neededToProceed) {\n    const T = remediatorMap[remediation.name];\n    if (T) {\n      const remediator: Remediator = new T(remediation);\n      res.push (remediator.getNextStep(idxResponse.context) as never);\n    }\n  }\n\n  return res;\n}\n\nexport function filterValuesForRemediation(\n  idxResponse: IdxResponse,\n  remediationName: string,\n  values: RemediationValues\n): RemediationValues {\n  const remediations = idxResponse.neededToProceed || [];\n  const remediation = remediations.find(r => r.name === remediationName);\n  if (!remediation) {\n    // step was specified, but remediation was not found. This is unexpected!\n    warn(`filterValuesForRemediation: \"${remediationName}\" did not match any remediations`);\n    return values;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const valuesForRemediation = remediation.value!.reduce((res, entry) => {\n    const { name, value } = entry;\n    if (name === 'stateHandle') {\n      res[name] = value; // use the stateHandle value in the remediation\n    } else {\n      res[name] = values[name]; // use the value provided by the caller\n    }\n    return res;\n  }, {});\n  return valuesForRemediation;\n}\n\n// Return first match idxRemediation in allowed remediators\n// eslint-disable-next-line complexity\nexport function getRemediator(\n  idxRemediations: IdxRemediation[],\n  values: RemediationValues,\n  options: RemediateOptions,\n): Remediator | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const remediators = options.remediators!;\n\n  let remediator: Remediator;\n  // remediation name specified by caller - fast-track remediator lookup \n  if (options.step) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediation = idxRemediations.find(({ name }) => name === options.step)!;\n    if (remediation) {\n      const T = remediation ? remediators[remediation.name] : undefined;\n      return T ? new T(remediation, values, options) : undefined;\n    } else {\n      // step was specified, but remediation was not found. This is unexpected!\n      warn(`step \"${options.step}\" did not match any remediations`);\n      return;\n    }\n  }\n\n  const remediatorCandidates: Remediator[] = [];\n  for (let remediation of idxRemediations) {\n    const isRemeditionInFlow = Object.keys(remediators as object).includes(remediation.name);\n    if (!isRemeditionInFlow) {\n      continue;\n    }\n\n    const T = remediators[remediation.name];\n    remediator = new T(remediation, values, options);\n    if (remediator.canRemediate()) {\n      // found the remediator\n      return remediator;\n    }\n    // remediator cannot handle the current values\n    // maybe return for next step\n    remediatorCandidates.push(remediator);  \n  }\n  \n  return remediatorCandidates[0];\n}\n\n\nexport function getNextStep(\n  remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep(idxResponse.context);\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nexport function handleIdxError(e, remediator?): RemediationResponse {\n  // Handle idx messages\n  let idxResponse = isIdxResponse(e) ? e : null;\n  if (!idxResponse) {\n    // Thrown error terminates the interaction with idx\n    throw e;\n  }\n  idxResponse = {\n    ...idxResponse,\n    requestDidSucceed: false\n  };\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  } else {\n    const nextStep = remediator && getNextStep(remediator, idxResponse);\n    return { \n      idxResponse,\n      messages, \n      ...(nextStep && { nextStep }) \n    };\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, max-depth, complexity */\nimport { AuthSdkError } from '../errors';\nimport { RemediationValues } from './remediators';\nimport { FlowIdentifier, RemediationResponse } from './types';\nimport { RemediationFlow } from './flow';\nimport { \n  IdxResponse,\n  IdxActionParams, \n} from './types/idx-js';\nimport {\n  getMessagesFromResponse,\n  isTerminalResponse,\n  filterValuesForRemediation,\n  getRemediator,\n  getNextStep,\n  handleIdxError\n} from './util';\n\nexport interface RemediateActionWithOptionalParams {\n  name: string;\n  params?: IdxActionParams;\n}\n\nexport type RemediateAction = string | RemediateActionWithOptionalParams;\nexport interface RemediateOptions {\n  remediators?: RemediationFlow;\n  actions?: RemediateAction[];\n  flow?: FlowIdentifier;\n  step?: string;\n  shouldProceedWithEmailAuthenticator?: boolean; // will be removed in next major version\n}\n\n\nfunction getActionFromValues(values: RemediationValues, idxResponse: IdxResponse): string | undefined {\n  // Currently support resend actions only\n  return Object.keys(idxResponse.actions).find(action => !!values.resend && action.includes('-resend'));\n}\n\nfunction removeActionFromValues(values: RemediationValues): RemediationValues {\n  // Currently support resend actions only\n  return {\n    ...values,\n    resend: undefined\n  };\n}\n\nfunction removeActionFromOptions(options: RemediateOptions, actionName: string): RemediateOptions {\n  let actions = options.actions || [];\n  actions = actions.filter(entry => {\n    if (typeof entry === 'string') {\n      return entry !== actionName;\n    }\n    return entry.name !== actionName;\n  });\n\n  return { ...options, actions };\n}\n\n// This function is called recursively until it reaches success or cannot be remediated\nexport async function remediate(\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions\n): Promise<RemediationResponse> {\n  let { neededToProceed, interactionCode } = idxResponse;\n  const { flow } = options;\n\n  // If the response contains an interaction code, there is no need to remediate\n  if (interactionCode) {\n    return { idxResponse };\n  }\n\n  // Reach to terminal state\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  }\n\n  const remediator = getRemediator(neededToProceed, values, options);\n\n  // Try actions in idxResponse first\n  const actionFromValues = getActionFromValues(values, idxResponse);\n  const actionFromOptions = options.actions || [];\n  const actions = [\n    ...actionFromOptions,\n    ...(actionFromValues && [actionFromValues] || []),\n  ];\n  if (actions) {\n    for (let action of actions) {\n      // Action can either be specified as a string, or as an object with name and optional params\n      let params: IdxActionParams = {};\n      if (typeof action !== 'string') {\n        params = action.params || {};\n        action = action.name;\n      }\n      let valuesWithoutExecutedAction = removeActionFromValues(values);\n      let optionsWithoutExecutedAction = removeActionFromOptions(options, action);\n\n      if (typeof idxResponse.actions[action] === 'function') {\n        try {\n          idxResponse = await idxResponse.actions[action](params);\n          idxResponse = { ...idxResponse, requestDidSucceed: true };\n        } catch (e) {\n          return handleIdxError(e, remediator);\n        }\n        if (action === 'cancel') {\n          return { idxResponse, canceled: true };\n        }\n        return remediate(idxResponse, valuesWithoutExecutedAction, optionsWithoutExecutedAction); // recursive call\n      }\n\n      // search for action in remediation list\n      const remediationAction = neededToProceed.find(({ name }) => name === action);\n      if (remediationAction) {\n        try {\n          idxResponse = await idxResponse.proceed(action, params);\n          idxResponse = { ...idxResponse, requestDidSucceed: true };\n        }\n        catch (e) {\n          return handleIdxError(e, remediator);\n        }\n\n        return remediate(idxResponse, values, optionsWithoutExecutedAction); // recursive call\n      }\n    }\n  }\n\n  if (!remediator) {\n    if (options.step) {\n      values = filterValuesForRemediation(idxResponse, options.step, values); // include only requested values\n      try {\n        idxResponse = await idxResponse.proceed(options.step, values);\n        idxResponse = { ...idxResponse, requestDidSucceed: true };\n        return { idxResponse };\n      } catch(e) {\n        return handleIdxError(e);\n      }\n    }\n    if (flow === 'default') {\n      return { idxResponse };\n    }\n    throw new AuthSdkError(`\n      No remediation can match current flow, check policy settings in your org.\n      Remediations: [${neededToProceed.reduce((acc, curr) => acc ? acc + ' ,' + curr.name : curr.name, '')}]\n    `);\n  }\n\n  // Return next step to the caller\n  if (!remediator.canRemediate()) {\n    const nextStep = getNextStep(remediator, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n      messages: messages.length ? messages: undefined\n    };\n  }\n\n  const name = remediator.getName();\n  const data = remediator.getData();\n  try {\n    idxResponse = await idxResponse.proceed(name, data);\n    idxResponse = { ...idxResponse, requestDidSucceed: true };\n    // We may want to trim the values bag for the next remediation\n    // Let the remediator decide what the values should be (default to current values)\n    values = remediator.getValuesAfterProceed();\n    options = { ...options, step: undefined }; // do not re-use the step\n    return remediate(idxResponse, values, options); // recursive call\n  } catch (e) {\n    return handleIdxError(e, remediator);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ReEnrollAuthenticator,\n  RedirectIdp,\n  AuthenticatorEnrollmentData,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorVerificationData,\n  EnrollPoll,\n  ChallengePoll, Skip\n} from '../remediators';\n\nexport const AuthenticationFlow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'enroll-poll': EnrollPoll,\n  'redirect-idp': RedirectIdp,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  AuthenticatorVerificationData,\n  ResetAuthenticator,\n  ReEnrollAuthenticator,\n  SelectAuthenticatorEnroll,\n  AuthenticatorEnrollmentData,\n  EnrollPoll\n} from '../remediators';\n\nexport const PasswordRecoveryFlow: RemediationFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'enroll-poll': EnrollPoll,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  SelectEnrollProfile,\n  EnrollPoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  EnrollProfile,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorEnrollmentData,\n  Skip,\n} from '../remediators';\n\nexport const RegistrationFlow: RemediationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorUnlockAccount,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ChallengePoll,\n  AuthenticatorVerificationData\n} from '../remediators';\n\nexport const AccountUnlockFlow: RemediationFlow = {\n  'identify': Identify,\n  // NOTE: unlock-account is purposely not included. Handled as action\n  // because it's a rememdiation which requires no input\n  // 'unlock-account': UnlockAccount,\n  'select-authenticator-unlock-account': SelectAuthenticatorUnlockAccount,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n};\n","import { OktaAuthInterface, FlowIdentifier } from '../../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { AccountUnlockFlow } from './AccountUnlockFlow';\nimport { RemediationFlow } from './RemediationFlow';\n\nexport interface FlowSpecification {\n  flow: FlowIdentifier;\n  remediators: RemediationFlow;\n  actions?: string[];\n  withCredentials?: boolean;\n}\n\n// eslint-disable-next-line complexity\nexport function getFlowSpecification(oktaAuth: OktaAuthInterface, flow: FlowIdentifier = 'default'): FlowSpecification {\n  let remediators, actions, withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = [\n        'unlock-account'\n      ];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      // default case has no flow monitor\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return { flow, remediators, actions, withCredentials };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, complexity, max-depth */\nimport { interact } from './interact';\nimport { introspect } from './introspect';\nimport { remediate, RemediateOptions } from './remediate';\nimport { getFlowSpecification, RemediationFlow } from './flow';\nimport * as remediators from './remediators';\nimport { \n  OktaAuthInterface,\n  IdxStatus,\n  IdxTransaction,\n  IdxFeature,\n  NextStep,\n  FlowIdentifier,\n  IdxTransactionMeta,\n  Tokens,\n  APIError,\n} from '../types';\nimport { IdxMessage, IdxResponse, isIdxResponse } from './types/idx-js';\nimport { getSavedTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport { ProceedOptions } from './proceed';\nimport { getAvailableSteps, getEnabledFeatures, getMessagesFromResponse, isTerminalResponse } from './util';\n\nexport type RunOptions = ProceedOptions & RemediateOptions & {\n  flow?: FlowIdentifier;\n  remediators?: RemediationFlow;\n  actions?: string[];\n  withCredentials?: boolean;\n}\n\ndeclare interface RunData {\n  options: RunOptions;\n  values: remediators.RemediationValues;\n  status?: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  idxResponse?: IdxResponse;\n  canceled?: boolean;\n  interactionCode?: string;\n  shouldClearTransaction?: boolean;\n  clearSharedStorage?: boolean;\n  terminal?: boolean;\n}\n\nfunction initializeValues(options: RunOptions) {\n  // remove known options, everything else is assumed to be a value\n  const knownOptions = [\n    'flow', \n    'remediators', \n    'actions', \n    'withCredentials', \n    'step', \n    'shouldProceedWithEmailAuthenticator'\n  ];\n  const values = { ...options };\n  knownOptions.forEach(option => {\n    delete values[option];\n  });\n  return values;\n}\n\nfunction initializeData(authClient, data: RunData): RunData {\n  const { options } = data;\n  let {\n    flow,\n    withCredentials,\n    remediators,\n    actions\n  } = options;\n\n  const status = IdxStatus.PENDING;\n\n  // certain options can be set by the flow specification\n  flow = flow || authClient.idx.getFlow() || 'default';\n  if (flow) {\n    authClient.idx.setFlow(flow);\n    const flowSpec = getFlowSpecification(authClient, flow);\n    // Favor option values over flow spec\n    withCredentials = (typeof withCredentials !== 'undefined') ? withCredentials : flowSpec.withCredentials;\n    remediators = remediators || flowSpec.remediators;\n    actions = actions || flowSpec.actions;\n  }\n  return { \n    ...data,\n    options: { ...options, flow, withCredentials, remediators, actions },\n    status\n  };\n}\n\nasync function getDataFromIntrospect(authClient, data: RunData): Promise<RunData> {\n  const { options } = data;\n  const {\n    stateHandle,\n    withCredentials,\n    version,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  } = options;\n\n  let idxResponse;\n  let meta = getSavedTransactionMeta(authClient, { state, recoveryToken, activationToken }); // may be undefined\n\n  if (stateHandle) {\n    idxResponse = await introspect(authClient, { withCredentials, version, stateHandle });\n  } else {\n    let interactionHandle = meta?.interactionHandle; // may be undefined\n    if (!interactionHandle) {\n      // start a new transaction\n      authClient.transactionManager.clear();\n      const interactResponse = await interact(authClient, {\n        withCredentials,\n        state,\n        scopes,\n        activationToken,\n        recoveryToken\n      }); \n      interactionHandle = interactResponse.interactionHandle;\n      meta = interactResponse.meta;\n    }\n  \n    // Introspect to get idx response\n    idxResponse = await introspect(authClient, { withCredentials, version, interactionHandle });\n  }\n  return { ...data, idxResponse, meta };\n}\n\nasync function getDataFromRemediate(data: RunData): Promise<RunData> {\n  let {\n    idxResponse,\n    options,\n    values\n  } = data;\n\n  const {\n    autoRemediate,\n    remediators,\n    actions,\n    flow,\n    step,\n    shouldProceedWithEmailAuthenticator, // will be removed in next major version\n  } = options;\n  \n  const shouldRemediate = (autoRemediate !== false && (remediators || actions || step));\n  if (!shouldRemediate) {\n    return data;\n  }\n\n  values = { \n    ...values, \n    stateHandle: idxResponse!.rawIdxState.stateHandle \n  };\n\n  // Can we handle the remediations?\n  const { \n    idxResponse: idxResponseFromRemediation, \n    nextStep,\n    canceled,\n  } = await remediate(idxResponse!, values, {\n    remediators,\n    actions,\n    flow,\n    step,\n    shouldProceedWithEmailAuthenticator, // will be removed in next major version\n  });\n  idxResponse = idxResponseFromRemediation;\n\n  return { ...data, idxResponse, nextStep, canceled };\n}\n\nasync function getTokens(authClient, data: RunData): Promise<Tokens> {\n  let { meta, idxResponse } = data;\n  const { interactionCode } = idxResponse as IdxResponse;\n  const {\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    urls,\n    scopes,\n  } = meta as IdxTransactionMeta;\n  const tokenResponse = await authClient.token.exchangeCodeForTokens({\n    interactionCode,\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    scopes\n  }, urls);\n  return tokenResponse.tokens;\n}\n\nasync function finalizeData(authClient, data: RunData): Promise<RunData> {\n  let {\n    options,\n    idxResponse,\n    canceled,\n    status,\n  } = data;\n  const { exchangeCodeForTokens } = options;\n  let shouldClearTransaction = false;\n  let clearSharedStorage = true;\n  let interactionCode;\n  let tokens;\n  let enabledFeatures;\n  let availableSteps;\n  let messages;\n  let terminal;\n\n  if (idxResponse) {\n    enabledFeatures = getEnabledFeatures(idxResponse);\n    availableSteps = getAvailableSteps(idxResponse);\n    messages = getMessagesFromResponse(idxResponse);\n    terminal = isTerminalResponse(idxResponse);\n  }\n\n  if (terminal) {\n    status = IdxStatus.TERMINAL;\n    shouldClearTransaction = true;\n    clearSharedStorage = false;\n  } else if (canceled) {\n    status = IdxStatus.CANCELED;\n    shouldClearTransaction = true;\n  } else if (idxResponse?.interactionCode) { \n    interactionCode = idxResponse.interactionCode;\n    if (exchangeCodeForTokens === false) {\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = false;\n    } else {\n      tokens = await getTokens(authClient, data);\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = true;\n    }\n  }\n  return {\n    ...data,\n    status,\n    interactionCode,\n    tokens,\n    shouldClearTransaction,\n    clearSharedStorage,\n    enabledFeatures,\n    availableSteps,\n    messages,\n    terminal\n  };\n}\n\nfunction handleError(err, data: RunData): RunData {\n  let { error, status, shouldClearTransaction } = data;\n\n  // current version of idx-js will throw/reject IDX responses. Handle these differently than regular errors\n  if (isIdxResponse(err)) {\n    error = err;\n    status = IdxStatus.FAILURE;\n    shouldClearTransaction = true;\n  } else {\n    // error is not an IDX response, throw it like a regular error\n    throw err;\n  }\n\n  return { ...data, error, status, shouldClearTransaction };\n}\n\nexport async function run(\n  authClient: OktaAuthInterface, \n  options: RunOptions = {},\n): Promise<IdxTransaction> {\n  let data: RunData = {\n    options,\n    values: initializeValues(options)\n  };\n\n  data = initializeData(authClient, data);\n  try {\n    data = await getDataFromIntrospect(authClient, data);\n    data = await getDataFromRemediate(data);\n  } catch (err) {\n    data = handleError(err, data);\n  }\n  data = await finalizeData(authClient, data);\n\n  const {\n    idxResponse,\n    meta,\n    shouldClearTransaction,\n    clearSharedStorage,\n    status,\n    enabledFeatures,\n    availableSteps,\n    tokens,\n    nextStep,\n    messages,\n    error,\n    interactionCode\n  } = data;\n\n  if (shouldClearTransaction) {\n    authClient.transactionManager.clear({ clearSharedStorage });\n  }\n  else {\n    // ensures state is saved to sessionStorage\n    saveTransactionMeta(authClient, { ...meta });\n\n    if (idxResponse) {\n      // Save intermediate idx response in storage to reduce introspect call\n      const { rawIdxState: rawIdxResponse, requestDidSucceed } = idxResponse;\n      authClient.transactionManager.saveIdxResponse({\n        rawIdxResponse,\n        requestDidSucceed\n      });\n    }\n\n  }\n  \n  // from idx-js, used by the widget\n  const { actions, context, neededToProceed, proceed, rawIdxState, requestDidSucceed } = idxResponse || {};\n  return {\n    status: status!,\n    ...(meta && { meta }),\n    ...(enabledFeatures && { enabledFeatures }),\n    ...(availableSteps && { availableSteps }),\n    ...(tokens && { tokens }),\n    ...(nextStep && { nextStep }),\n    ...(messages && messages.length && { messages }),\n    ...(error && { error }),\n    interactionCode, // if options.exchangeCodeForTokens is false\n\n    // from idx-js\n    actions: actions!,\n    context: context!,\n    neededToProceed: neededToProceed!,\n    proceed: proceed!,\n    rawIdxState: rawIdxState!,\n    requestDidSucceed\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthInterface,\n  IdxOptions,\n  IdxTransaction,\n  AuthenticatorKey\n} from '../types';\nimport { run } from './run';\nimport { \n  IdentifyValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  ReEnrollAuthenticatorValues,\n  AuthenticatorEnrollmentDataValues,\n  SelectAuthenticatorEnrollValues,\n  EnrollAuthenticatorValues,\n} from './remediators';\n\nexport type AuthenticationOptions = IdxOptions \n  & IdentifyValues \n  & SelectAuthenticatorAuthenticateValues \n  & SelectAuthenticatorEnrollValues\n  & ChallengeAuthenticatorValues \n  & ReEnrollAuthenticatorValues\n  & AuthenticatorEnrollmentDataValues\n  & EnrollAuthenticatorValues;\n\nexport async function authenticate(\n  authClient: OktaAuthInterface, options: AuthenticationOptions = {}\n): Promise<IdxTransaction> {\n  if (options.password && !options.authenticator) {\n    options.authenticator = AuthenticatorKey.OKTA_PASSWORD;\n  }\n  return run(authClient, { \n    ...options, \n    flow: 'authenticate'\n  });\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthInterface, IdxOptions, IdxTransactionMeta } from '../types';\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\n\nexport type CancelOptions = IdxOptions;\n\nexport async function cancel (authClient: OktaAuthInterface, options?: CancelOptions) {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  const flowSpec = getFlowSpecification(authClient, meta.flow);\n  return run(authClient, {\n    ...options,\n    ...flowSpec,\n    actions: ['cancel']\n  });\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthInterface } from '../types';\n\nimport CustomError from '../errors/CustomError';\nimport { urlParamsToObject  } from '../oidc/util/urlParams';\n\nexport interface EmailVerifyCallbackResponse {\n  state: string;\n  otp: string;\n}\n\nexport class EmailVerifyCallbackError extends CustomError {\n  state: string;\n  otp: string;\n\n  constructor(state: string, otp: string) {\n    super(`Enter the OTP code in the originating client: ${otp}`);\n    this.name = 'EmailVerifyCallbackError';\n    this.state = state;\n    this.otp = otp;\n  }\n}\n\nexport function isEmailVerifyCallbackError(error: Error) {\n  return (error.name === 'EmailVerifyCallbackError');\n}\n\n// Check if state && otp have been passed back in the url\nexport function isEmailVerifyCallback (urlPath: string): boolean {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\n// Parse state and otp from a urlPath (should be either a search or fragment from the URL)\nexport function parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n  return urlParamsToObject(urlPath) as EmailVerifyCallbackResponse;\n}\n\nexport async function handleEmailVerifyCallback(authClient: OktaAuthInterface, search: string) {\n  if (isEmailVerifyCallback(search)) {\n    const { state, otp } = parseEmailVerifyCallback(search);\n    if (authClient.idx.canProceed({ state })) {\n      // same browser / device\n      return await authClient.idx.proceed({ state, otp });\n    } else {\n      // different browser or device\n      throw new EmailVerifyCallbackError(state, otp);\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthInterface,\n  IdxTransaction,\n} from '../types';\nimport { run } from './run';\nimport { AuthenticationOptions } from './authenticate';\nimport {\n  EnrollPollValues as EnrollPollOptions,\n  SelectEnrollmentChannelValues as SelectEnrollmentChannelOptions\n} from './remediators';\nimport { RegistrationOptions } from './register';\nimport { PasswordRecoveryOptions } from './recoverPassword';\nimport { AccountUnlockOptions } from './unlockAccount';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { AuthSdkError } from '../errors';\n\nexport type ProceedOptions = AuthenticationOptions\n  & RegistrationOptions\n  & PasswordRecoveryOptions\n  & AccountUnlockOptions\n  & EnrollPollOptions\n  & SelectEnrollmentChannelOptions\n  & { step?: string };\n\nexport function canProceed(authClient: OktaAuthInterface, options: ProceedOptions = {}): boolean {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!(meta || options.stateHandle);\n}\n\nexport async function proceed(\n  authClient: OktaAuthInterface,\n  options: ProceedOptions = {}\n): Promise<IdxTransaction> {\n\n  if (!canProceed(authClient, options)) {\n    throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n  }\n\n  let { flow, state } = options;\n  if (!flow) {\n    const meta = getSavedTransactionMeta(authClient, { state });\n    flow = meta?.flow;\n  }\n\n  return run(authClient, { \n    ...options, \n    flow\n  });\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed';\n\nimport { \n  IdxPollOptions,\n  IdxTransaction,\n  OktaAuthInterface,\n} from '../types';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { warn } from '../util';\n\nexport async function poll(authClient: OktaAuthInterface, options: IdxPollOptions = {}): Promise<IdxTransaction> {\n  let transaction = await proceed(authClient, {\n    startPolling: true\n  });\n\n  const meta = getSavedTransactionMeta(authClient);\n  let availablePollingRemeditaions = meta?.remediations?.find(remediation => remediation.includes('poll'));\n  if (!availablePollingRemeditaions?.length) {\n    warn('No polling remediations available at the current IDX flow stage');\n  }\n\n  if (Number.isInteger(options.refresh)) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(async function () {\n        try {\n          const refresh = transaction.nextStep?.poll?.refresh;\n          if (refresh) {\n            resolve(poll(authClient, {\n              refresh\n            }));\n          } else {\n            resolve(transaction);\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }, options.refresh);\n    });\n  }\n\n  return transaction;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run, RunOptions } from './run';\nimport { OktaAuthInterface, IdxTransaction } from '../types';\n\nexport async function startTransaction(\n  authClient: OktaAuthInterface, \n  options: RunOptions = {}\n): Promise<IdxTransaction> {\n  // Clear IDX response cache and saved transaction meta (if any)\n  authClient.transactionManager.clear();\n\n  return run(authClient, {\n    exchangeCodeForTokens: false,\n    ...options\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { \n  EnrollProfileValues,\n  SelectAuthenticatorEnrollValues,\n  EnrollAuthenticatorValues,\n  AuthenticatorEnrollmentDataValues,\n  SkipValues,\n} from './remediators';\nimport { AuthSdkError } from '../errors';\nimport { \n  IdxOptions, \n  IdxTransaction, \n  OktaAuthInterface, \n  IdxFeature,\n} from '../types';\n\nexport type RegistrationOptions = IdxOptions \n  & EnrollProfileValues \n  & SelectAuthenticatorEnrollValues \n  & EnrollAuthenticatorValues \n  & AuthenticatorEnrollmentDataValues \n  & SkipValues;\n\nexport async function register(\n  authClient: OktaAuthInterface, options: RegistrationOptions = {}\n): Promise<IdxTransaction> {\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures, availableSteps } = await startTransaction(authClient, {\n      ...options,\n      flow: 'register',\n      autoRemediate: false\n    });\n    if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      const error = new AuthSdkError('Registration is not supported based on your current org configuration.');\n      throw error;\n    // return { status: IdxStatus.FAILURE, error } as unknown as IdxTransaction; // TODO: wny not just throw the error?\n    }\n    if (options.activationToken && availableSteps?.some(({ name }) => name === 'identify')) {\n      const error = new AuthSdkError('activationToken is not supported based on your current org configuration.');\n      throw error;\n    // return { status: IdxStatus.FAILURE, error } as unknown as IdxTransaction; // TODO: wny not just throw the error?\n    }\n  }\n\n  return run(authClient, {\n    ...options,\n    flow: 'register'\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport {\n  IdentifyValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  AuthenticatorVerificationDataValues,\n  ResetAuthenticatorValues,\n  ReEnrollAuthenticatorValues,\n} from './remediators';\nimport { getFlowSpecification } from './flow';\nimport { \n  OktaAuthInterface, \n  IdxOptions, \n  IdxTransaction,\n} from '../types';\n\nexport type PasswordRecoveryOptions = IdxOptions \n  & IdentifyValues \n  & SelectAuthenticatorAuthenticateValues \n  & ChallengeAuthenticatorValues \n  & ResetAuthenticatorValues\n  & AuthenticatorVerificationDataValues\n  & ReEnrollAuthenticatorValues;\n\nexport async function recoverPassword(\n  authClient: OktaAuthInterface, options: PasswordRecoveryOptions = {}\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n  return run(\n    authClient, \n    { \n      ...options,\n      ...flowSpec,\n    }\n  );\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { OktaAuth } from '..';\nimport {IdxTransactionMeta} from '../types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuth, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    throw new OAuthError(error, searchParams.get('error_description')!);\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport {\n  IdentifyValues,\n  SelectAuthenticatorUnlockAccountValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  AuthenticatorVerificationDataValues\n} from './remediators';\nimport { AuthSdkError } from '../errors';\nimport { \n  OktaAuthInterface, \n  IdxOptions, \n  IdxTransaction,\n  IdxFeature,\n} from '../types';\n\nexport type AccountUnlockOptions = IdxOptions\n  & IdentifyValues\n  & SelectAuthenticatorUnlockAccountValues\n  & SelectAuthenticatorAuthenticateValues\n  & ChallengeAuthenticatorValues\n  & AuthenticatorVerificationDataValues;\n\nexport async function unlockAccount(\n  authClient: OktaAuthInterface, options: AccountUnlockOptions = {}\n): Promise<IdxTransaction> {\n  options.flow = 'unlockAccount';\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, { ...options, autoRemediate: false });\n    if (enabledFeatures && !enabledFeatures.includes(IdxFeature.ACCOUNT_UNLOCK)) {\n      throw new AuthSdkError(\n        'Self Service Account Unlock is not supported based on your current org configuration.'\n      );\n    }\n  }\n\n  return run(authClient, { ...options });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* global SDK_VERSION */\n\nimport { isBrowser } from './features';\nexport class OktaUserAgent {\n  private environments: string[];\n\n  constructor() {\n    // add base sdk env\n    this.environments = [`okta-auth-js/${SDK_VERSION}`];\n  }\n\n  addEnvironment(env: string) {\n    this.environments.push(env);\n  }\n\n  getHttpHeader() {\n    this.maybeAddNodeEnvironment();\n    return { 'X-Okta-User-Agent-Extended': this.environments.join(' ') };\n  }\n\n  getVersion() {\n    return SDK_VERSION;\n  }\n\n  private maybeAddNodeEnvironment() {\n    if (isBrowser() || !process || !process.versions) {\n      return;\n    }\n    const { node: version } = process.versions;\n    this.environments.push(`nodejs/${version}`);\n  }\n}\n","/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nimport { \n  DEFAULT_MAX_CLOCK_SKEW, \n  REFERRER_PATH_STORAGE_KEY\n} from './constants';\nimport * as constants from './constants';\nimport {\n  OktaAuthInterface,\n  OktaAuthOptions, \n  AccessToken, \n  IDToken,\n  RefreshToken,\n  TokenAPI, \n  FeaturesAPI, \n  CryptoAPI,\n  WebauthnAPI,\n  SignoutAPI, \n  FingerprintAPI,\n  UserClaims, \n  SigninWithRedirectOptions,\n  SigninWithCredentialsOptions,\n  SignoutOptions,\n  Tokens,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  TransactionAPI,\n  SessionAPI,\n  SigninAPI,\n  PkceAPI,\n  SigninOptions,\n  IdxAPI,\n  SignoutRedirectUrlOptions,\n  HttpAPI,\n  FlowIdentifier,\n  GetWithRedirectAPI,\n  ParseFromUrlInterface,\n  GetWithRedirectFunction,\n  RequestOptions,\n  IsAuthenticatedOptions,\n} from './types';\nimport {\n  transactionStatus,\n  resumeTransaction,\n  transactionExists,\n  introspectAuthn,\n  postToTransaction,\n  AuthTransaction\n} from './tx';\nimport PKCE from './oidc/util/pkce';\nimport {\n  closeSession,\n  sessionExists,\n  getSession,\n  refreshSession,\n  setCookieAndRedirect\n} from './session';\nimport {\n  getOAuthUrls,\n  getWithoutPrompt,\n  getWithPopup,\n  getWithRedirect,\n  isLoginRedirect,\n  parseFromUrl,\n  decodeToken,\n  revokeToken,\n  renewToken,\n  renewTokens,\n  renewTokensWithRefresh,\n  getUserInfo,\n  verifyToken,\n  prepareTokenParams,\n  exchangeCodeForTokens,\n  isInteractionRequiredError,\n  isInteractionRequired,\n} from './oidc';\nimport { isBrowser } from './features';\nimport * as features from './features';\nimport * as crypto from './crypto';\nimport * as webauthn from './crypto/webauthn';\nimport browserStorage from './browser/browserStorage';\nimport { \n  toQueryString, \n  toAbsoluteUrl,\n  clone,\n} from './util';\nimport { TokenManager } from './TokenManager';\nimport { ServiceManager } from './ServiceManager';\nimport { get, httpRequest, setRequestHeader } from './http';\nimport PromiseQueue from './PromiseQueue';\nimport fingerprint from './browser/fingerprint';\nimport { AuthStateManager } from './AuthStateManager';\nimport { StorageManager } from './StorageManager';\nimport TransactionManager from './TransactionManager';\nimport { buildOptions } from './options';\nimport {\n  interact,\n  introspect,\n  authenticate,\n  cancel,\n  poll,\n  proceed,\n  register,\n  recoverPassword,\n  unlockAccount,\n  startTransaction,\n  handleInteractionCodeRedirect,\n  canProceed,\n  handleEmailVerifyCallback,\n  isEmailVerifyCallback,\n  parseEmailVerifyCallback,\n  isEmailVerifyCallbackError\n} from './idx';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { parseOAuthResponseFromUrl } from './oidc/parseFromUrl';\nimport {\n  getSavedTransactionMeta,\n  createTransactionMeta,\n  getTransactionMeta,\n  saveTransactionMeta,\n  clearTransactionMeta,\n  isTransactionMetaValid\n} from './idx/transactionMeta';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport Emitter from 'tiny-emitter';\n\nclass OktaAuth implements OktaAuthInterface, SigninAPI, SignoutAPI {\n  options: OktaAuthOptions;\n  storageManager: StorageManager;\n  transactionManager: TransactionManager;\n  tx: TransactionAPI;\n  idx: IdxAPI;\n  session: SessionAPI;\n  pkce: PkceAPI;\n  static features: FeaturesAPI = features;\n  static crypto: CryptoAPI = crypto;\n  static webauthn: WebauthnAPI = webauthn;\n  features: FeaturesAPI = features;\n  token: TokenAPI;\n  _tokenQueue: PromiseQueue;\n  emitter: any;\n  tokenManager: TokenManager;\n  authStateManager: AuthStateManager;\n  serviceManager: ServiceManager;\n  http: HttpAPI;\n  fingerprint: FingerprintAPI;\n  _oktaUserAgent: OktaUserAgent;\n  _pending: { handleLogin: boolean };\n  constructor(args: OktaAuthOptions) {\n    const options = this.options = buildOptions(args);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.storageManager = new StorageManager(options.storageManager!, options.cookies!, options.storageUtil!);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager,\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n\n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: (name) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const storage = options.storageUtil!.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspectAuthn.bind(null, this)\n    };\n\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n\n    // Add shims for compatibility, these will be removed in next major version. OKTA-362589\n    Object.assign(this.options.storageUtil, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager),\n    });\n\n    this._pending = { handleLogin: false };\n\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin), // allow relative URIs\n      });\n    }\n\n    // Digital clocks will drift over time, so the server\n    // can misalign with the time reported by the browser.\n    // The maxClockSkew allows relaxing the time-based\n    // validation of tokens (in seconds, not milliseconds).\n    // It currently defaults to 300, because 5 min is the\n    // default maximum tolerance allowed by Kerberos.\n    // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n\n    // As some end user's devices can have their date \n    // and time incorrectly set, allow for the disabling\n    // of the jwt liftetime validation\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n\n    this._tokenQueue = new PromiseQueue();\n    const useQueue = (method) => {\n      return PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    };\n\n    // eslint-disable-next-line max-len\n    const getWithRedirectFn = useQueue(getWithRedirect.bind(null, this)) as GetWithRedirectFunction;\n    const getWithRedirectApi: GetWithRedirectAPI = Object.assign(getWithRedirectFn, {\n      // This is exposed so we can set window.location in our tests\n      _setLocation: function(url) {\n        window.location = url;\n      }\n    });\n    // eslint-disable-next-line max-len\n    const parseFromUrlFn = useQueue(parseFromUrl.bind(null, this)) as ParseFromUrlInterface;\n    const parseFromUrlApi: ParseFromUrlInterface = Object.assign(parseFromUrlFn, {\n      // This is exposed so we can mock getting window.history in our tests\n      _getHistory: function() {\n        return window.history;\n      },\n\n      // This is exposed so we can mock getting window.location in our tests\n      _getLocation: function() {\n        return window.location;\n      },\n\n      // This is exposed so we can mock getting window.document in our tests\n      _getDocument: function() {\n        return window.document;\n      }\n    });\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirectApi,\n      parseFromUrl: parseFromUrlApi,\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: getUserInfo.bind(null, this),\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    // Wrap all async token API methods using MethodQueue to avoid issues with concurrency\n    const syncMethods = [\n      // sync methods\n      'decode',\n      'isLoginRedirect',\n      // already bound\n      'getWithRedirect',\n      'parseFromUrl'\n    ];\n    Object.keys(this.token).forEach(key => {\n      if (syncMethods.indexOf(key) >= 0) { // sync methods should not be wrapped\n        return;\n      }\n      var method = this.token[key];\n      this.token[key] = PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    });\n\n    // IDX\n    const boundStartTransaction = startTransaction.bind(null, this);\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspect.bind(null, this),\n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      start: boundStartTransaction,\n      startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n      poll: poll.bind(null, this),\n      proceed: proceed.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n\n      // oauth redirect callback\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n\n      // interaction required callback\n      isInteractionRequired: isInteractionRequired.bind(null, this),\n      isInteractionRequiredError,\n\n      // email verify callback\n      handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, this),\n      isEmailVerifyCallback,\n      parseEmailVerifyCallback,\n      isEmailVerifyCallbackError,\n      \n      getSavedTransactionMeta: getSavedTransactionMeta.bind(null, this),\n      createTransactionMeta: createTransactionMeta.bind(null, this),\n      getTransactionMeta: getTransactionMeta.bind(null, this),\n      saveTransactionMeta: saveTransactionMeta.bind(null, this),\n      clearTransactionMeta: clearTransactionMeta.bind(null, this),\n      isTransactionMetaValid,\n      setFlow: (flow: FlowIdentifier) => {\n        this.options.flow = flow;\n      },\n      getFlow: (): FlowIdentifier | undefined => {\n        return this.options.flow;\n      },\n      canProceed: canProceed.bind(null, this),\n      unlockAccount: unlockAccount.bind(null, this),\n    };\n\n    // HTTP\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n\n    // Fingerprint API\n    this.fingerprint = fingerprint.bind(null, this);\n\n    this.emitter = new Emitter();\n\n    // TokenManager\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n\n    // AuthStateManager\n    this.authStateManager = new AuthStateManager(this);\n\n    // ServiceManager\n    this.serviceManager = new ServiceManager(this, args.services);\n  }\n\n  start() {\n    // TODO: review tokenManager.start\n    this.tokenManager.start();\n    if (!this.token.isLoginRedirect()) {\n      this.authStateManager.updateAuthState();\n    }\n    this.serviceManager.start();\n  }\n\n  stop() {\n    // TODO: review tokenManager.stop\n    this.tokenManager.stop();\n    this.serviceManager.stop();\n  }\n\n  setHeaders(headers) {\n    this.options.headers = Object.assign({}, this.options.headers, headers);\n  }\n\n\n  // Authn  V1\n  async signIn(opts: SigninOptions): Promise<AuthTransaction> {\n    return this.signInWithCredentials(opts as SigninWithCredentialsOptions);\n  }\n\n  // Authn  V1\n  async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthTransaction> {\n    opts = clone(opts || {});\n    const _postToTransaction = (options?) => {\n      delete opts.sendFingerprint;\n      return postToTransaction(this, '/api/v1/authn', opts, options);\n    };\n    if (!opts.sendFingerprint) {\n      return _postToTransaction();\n    }\n    return this.fingerprint()\n    .then(function(fingerprint) {\n      return _postToTransaction({\n        headers: {\n          'X-Device-Fingerprint': fingerprint\n        }\n      });\n    });\n  }\n\n  async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n    const { originalUri, ...additionalParams } = opts;\n    if(this._pending.handleLogin) { \n      // Don't trigger second round\n      return;\n    }\n\n    this._pending.handleLogin = true;\n    try {\n      // Trigger default signIn redirect flow\n      if (originalUri) {\n        this.setOriginalUri(originalUri);\n      }\n      const params = Object.assign({\n        // TODO: remove this line when default scopes are changed OKTA-343294\n        scopes: this.options.scopes || ['openid', 'email', 'profile']\n      }, additionalParams);\n      await this.token.getWithRedirect(params);\n    } finally {\n      this._pending.handleLogin = false;\n    }\n  }\n\n  // Ends the current Okta SSO session without redirecting to Okta.\n  closeSession(): Promise<unknown> {\n    return this.session.close() // DELETE /api/v1/sessions/me\n    .then(async () => {\n      // Clear all local tokens\n      this.tokenManager.clear();\n    })\n    .catch(function(e) {\n      if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n        // Session does not exist or has already been closed\n        return null;\n      }\n      throw e;\n    });\n  }\n  \n  // Revokes the access token for the application session\n  async revokeAccessToken(accessToken?: AccessToken): Promise<unknown> {\n    if (!accessToken) {\n      accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n      this.tokenManager.remove(accessTokenKey);\n    }\n    // Access token may have been removed. In this case, we will silently succeed.\n    if (!accessToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(accessToken);\n  }\n\n  // Revokes the refresh token for the application session\n  async revokeRefreshToken(refreshToken?: RefreshToken): Promise<unknown> {\n    if (!refreshToken) {\n      refreshToken = (await this.tokenManager.getTokens()).refreshToken as RefreshToken;\n      const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n      this.tokenManager.remove(refreshTokenKey);\n    }\n    // Refresh token may have been removed. In this case, we will silently succeed.\n    if (!refreshToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(refreshToken);\n  }\n\n  getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n    let {\n      idToken,\n      postLogoutRedirectUri,\n      state,\n    } = options;\n    if (!idToken) {\n      idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n    if (!idToken) {\n      return '';\n    }\n    if (!postLogoutRedirectUri) {\n      postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n    }\n\n    const logoutUrl = getOAuthUrls(this).logoutUrl;\n    const idTokenHint = idToken.idToken; // a string\n    let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n    if (postLogoutRedirectUri) {\n      logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n    } \n    // State allows option parameters to be passed to logout redirect uri\n    if (state) {\n      logoutUri += '&state=' + encodeURIComponent(state);\n    }\n\n    return logoutUri;\n  }\n\n  // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n  async signOut(options?: SignoutOptions) {\n    options = Object.assign({}, options);\n  \n    // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n    var defaultUri = window.location.origin;\n    var currentUri = window.location.href;\n    var postLogoutRedirectUri = options.postLogoutRedirectUri\n      || this.options.postLogoutRedirectUri\n      || defaultUri;\n  \n    var accessToken = options.accessToken;\n    var refreshToken = options.refreshToken;\n    var revokeAccessToken = options.revokeAccessToken !== false;\n    var revokeRefreshToken = options.revokeRefreshToken !== false;\n  \n    if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n      refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n    }\n\n    if (revokeAccessToken && typeof accessToken === 'undefined') {\n      accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n    }\n  \n    if (!options.idToken) {\n      options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n\n    if (revokeRefreshToken && refreshToken) {\n      await this.revokeRefreshToken(refreshToken);\n    }\n\n    if (revokeAccessToken && accessToken) {\n      await this.revokeAccessToken(accessToken);\n    }\n\n    const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n    // No logoutUri? This can happen if the storage was cleared.\n    // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n    if (!logoutUri) {\n      // local tokens are cleared once session is closed\n      return this.closeSession() // can throw if the user cannot be signed out\n      .then(function() {\n        if (postLogoutRedirectUri === currentUri) {\n          window.location.reload(); // force a hard reload if URI is not changing\n        } else {\n          window.location.assign(postLogoutRedirectUri);\n        }\n      });\n    } else {\n      if (options.clearTokensBeforeRedirect) {\n        // Clear all local tokens\n        this.tokenManager.clear();\n      } else {\n        this.tokenManager.addPendingRemoveFlags();\n      }\n      // Flow ends with logout redirect\n      window.location.assign(logoutUri);\n    }\n  }\n\n  webfinger(opts): Promise<object> {\n    var url = '/.well-known/webfinger' + toQueryString(opts);\n    var options = {\n      headers: {\n        'Accept': 'application/jrd+json'\n      }\n    };\n    return get(this, url, options);\n  }\n\n  //\n  // Common Methods from downstream SDKs\n  //\n\n  // Returns true if both accessToken and idToken are not expired\n  // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n  async isAuthenticated(options: IsAuthenticatedOptions = {}): Promise<boolean> {\n    // TODO: remove dependency on tokenManager options in next major version - OKTA-473815\n    const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n    const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n    const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n    let { accessToken } = this.tokenManager.getTokensSync();\n    if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n      accessToken = undefined;\n      if (shouldRenew) {\n        try {\n          accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n        } catch {\n          // Renew errors will emit an \"error\" event \n        }\n      } else if (shouldRemove) {\n        this.tokenManager.remove('accessToken');\n      }\n    }\n\n    let { idToken } = this.tokenManager.getTokensSync();\n    if (idToken && this.tokenManager.hasExpired(idToken)) {\n      idToken = undefined;\n      if (shouldRenew) {\n        try {\n          idToken = await this.tokenManager.renew('idToken') as IDToken;\n        } catch {\n          // Renew errors will emit an \"error\" event \n        }\n      } else if (shouldRemove) {\n        this.tokenManager.remove('idToken');\n      }\n    }\n\n    return !!(accessToken && idToken);\n  }\n\n  async getUser(): Promise<UserClaims> {\n    const { idToken, accessToken } = this.tokenManager.getTokensSync();\n    return this.token.getUserInfo(accessToken, idToken);\n  }\n\n  getIdToken(): string | undefined {\n    const { idToken } = this.tokenManager.getTokensSync();\n    return idToken ? idToken.idToken : undefined;\n  }\n\n  getAccessToken(): string | undefined {\n    const { accessToken } = this.tokenManager.getTokensSync();\n    return accessToken ? accessToken.accessToken : undefined;\n  }\n\n  getRefreshToken(): string | undefined {\n    const { refreshToken } = this.tokenManager.getTokensSync();\n    return refreshToken ? refreshToken.refreshToken : undefined;\n  }\n\n  /**\n   * Store parsed tokens from redirect url\n   */\n  async storeTokensFromRedirect(): Promise<void> {\n    const { tokens } = await this.token.parseFromUrl();\n    this.tokenManager.setTokens(tokens);\n  }\n\n  setOriginalUri(originalUri: string, state?: string): void {\n    // always store in session storage\n    const sessionStorage = browserStorage.getSessionStorage();\n    sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n\n    // to support multi-tab flows, set a state in constructor or pass as param\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.setItem(state, originalUri);\n    }\n  }\n\n  getOriginalUri(state?: string): string | undefined {\n    // Prefer shared storage (if state is available)\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      const originalUri = sharedStorage.getItem(state);\n      if (originalUri) {\n        return originalUri;\n      }\n    }\n\n    // Try to load from session storage\n    const storage = browserStorage.getSessionStorage();\n    return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n  }\n\n  removeOriginalUri(state?: string): void {\n    // Remove from sessionStorage\n    const storage = browserStorage.getSessionStorage();\n    storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n\n    // Also remove from shared storage\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.removeItem && sharedStorage.removeItem(state);\n    }\n  }\n\n  isLoginRedirect(): boolean {\n    return isLoginRedirect(this);\n  }\n\n  async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n    let state = this.options.state;\n\n    // Store tokens and update AuthState by the emitted events\n    if (tokens) {\n      this.tokenManager.setTokens(tokens);\n      originalUri = originalUri || this.getOriginalUri(this.options.state);\n    } else if (this.isLoginRedirect()) {\n      try {\n        // For redirect flow, get state from the URL and use it to retrieve the originalUri\n        const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n        state = oAuthResponse.state;\n        originalUri = originalUri || this.getOriginalUri(state);\n        await this.storeTokensFromRedirect();\n      } catch(e) {\n        // auth state should be updated\n        await this.authStateManager.updateAuthState();\n        throw e;\n      }\n    } else {\n      return; // nothing to do\n    }\n    \n    // ensure auth state has been updated\n    await this.authStateManager.updateAuthState();\n\n    // clear originalUri from storage\n    this.removeOriginalUri(state);\n\n    // Redirect to originalUri\n    const { restoreOriginalUri } = this.options;\n    if (restoreOriginalUri) {\n      await restoreOriginalUri(this, originalUri);\n    } else if (originalUri) {\n      window.location.replace(originalUri);\n    }\n  }\n\n  isPKCE(): boolean {\n    return !!this.options.pkce;\n  }\n\n  hasResponseType(responseType: string): boolean {\n    let hasResponseType = false;\n    if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n      hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n    } else {\n      hasResponseType = this.options.responseType === responseType;\n    }\n    return hasResponseType;\n  }\n\n  isAuthorizationCodeFlow(): boolean {\n    return this.hasResponseType('code');\n  }\n\n  // { username, password, (relayState), (context) }\n  // signIn(opts: SignInWithCredentialsOptions): Promise<AuthTransaction> {\n  //   return postToTransaction(this, '/api/v1/authn', opts);\n  // }\n\n  getIssuerOrigin(): string {\n    // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.options.issuer!.split('/oauth2/')[0];\n  }\n\n  // { username, (relayState) }\n  forgotPassword(opts): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  }\n\n  // { username, (relayState) }\n  unlockAccount(opts: ForgotPasswordOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  }\n\n  // { recoveryToken }\n  verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  }\n\n  // Escape hatch method to make arbitrary OKTA API call\n  async invokeApiMethod(options: RequestOptions): Promise<unknown> {\n    if (!options.accessToken) {\n      const accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      options.accessToken = accessToken?.accessToken;\n    }\n    return httpRequest(this, options);\n  }\n}\n\n// Hoist feature detection functions to prototype & static type\nOktaAuth.features = OktaAuth.prototype.features = features;\n\n// Also hoist constants for CommonJS users\nObject.assign(OktaAuth, {\n  constants\n});\n\nexport default OktaAuth;"],"names":["CustomError","message","prototype","Error","AuthApiError","err","xhr","errorSummary","name","errorCode","errorLink","errorId","errorCauses","AuthPollStopError","AuthSdkError","msg","OAuthError","summary","error","error_description","isAuthApiError","obj","a","atob","atobModule","b","btoa","btoaModule","crypto","undefined","webcrypto","Crypto","stringToBase64Url","str","b64","base64ToBase64Url","replace","base64UrlToBase64","b64u","base64UrlToString","length","utf8","decodeURIComponent","escape","e","stringToBuffer","buffer","Uint8Array","i","charCodeAt","base64UrlDecode","base64UrlToBuffer","from","c","bufferToBase64Url","bin","s","byte","String","fromCharCode","getOidcHash","TextEncoder","encode","subtle","digest","then","arrayBuffer","intBuffer","firstHalf","hash","apply","getNativeConsole","window","console","getConsole","nativeConsole","log","warn","group","groupEnd","text","deprecate","deprecateWrap","fn","arguments","isoToUTCString","parts","match","isoTime","Date","UTC","isoDate","toUTCString","genRandomString","randomCharset","random","cl","Math","floor","delay","ms","resolve","setTimeout","bind","ctx","additionalArgs","Array","call","args","extend","obj1","objArray","forEach","prop","Object","hasOwnProperty","removeNils","cleaned","value","clone","JSON","parse","omit","newobj","props","p","find","collection","searchParams","item","found","getLink","linkName","altName","_links","link","isString","toString","isObject","isNumber","isFunction","isPromise","finally","isAbsoluteUrl","url","test","toAbsoluteUrl","baseUrl","removeTrailingSlash","toRelativeUrl","substring","toQueryString","key","push","encodeURIComponent","join","path","trimmed","verifyToken","idToken","format","algo","extractable","usages","use","importKey","cryptoKey","jwt","split","payload","b64Signature","signature","verify","STATE_TOKEN_KEY_NAME","DEFAULT_POLLING_DELAY","DEFAULT_MAX_CLOCK_SKEW","DEFAULT_CACHE_DURATION","REDIRECT_OAUTH_PARAMS_NAME","REDIRECT_STATE_COOKIE_NAME","REDIRECT_NONCE_COOKIE_NAME","TOKEN_STORAGE_NAME","CACHE_STORAGE_NAME","PKCE_STORAGE_NAME","TRANSACTION_STORAGE_NAME","SHARED_TRANSACTION_STORAGE_NAME","ORIGINAL_URI_STORAGE_NAME","IDX_RESPONSE_STORAGE_NAME","ACCESS_TOKEN_STORAGE_KEY","ID_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","REFERRER_PATH_STORAGE_KEY","MIN_VERIFIER_LENGTH","MAX_VERIFIER_LENGTH","DEFAULT_CODE_CHALLENGE_METHOD","IDX_API_VERSION","setRequestHeader","authClient","headerName","headerValue","options","headers","httpRequest","sdk","method","saveAuthnState","accessToken","withCredentials","storageUtil","storage","httpCache","storageManager","getHttpCache","cookies","cacheResponse","cacheContents","getStorage","cachedResponse","now","expiresAt","response","oktaUserAgentHeader","_oktaUserAgent","getHttpHeader","ajaxOptions","data","res","httpRequestClient","resp","responseText","stateToken","delete","set","updateStorage","catch","serverErr","status","transformErrorXHR","get","getIssuerOrigin","getOptions","post","postOptions","addStateToken","builtArgs","getStateToken","getPollFn","ref","rememberDevice","autoPush","transactionCallBack","pollLink","pollFn","opts","reject","href","isPolling","retryCount","recursivePoll","pollRes","factorResult","delayFn","AuthTransaction","delayLength","pow","interactionHandle","flattenEmbedded","cancel","link2fn","isArray","lk","hints","allow","factorType","provider","params","profile","updatePhone","postToTransaction","links2fns","fns","type","poll","objArr","o","ol","embedded","_embedded","transactionStatus","resumeTransaction","tx","exists","_get","introspectAuthn","transactionStep","transactionExists","dec2hex","dec","substr","getRandomString","ceil","getRandomValues","generateVerifier","prefix","verifier","computeChallenge","sessionExists","session","getSession","refresh","user","closeSession","refreshSession","setCookieAndRedirect","sessionToken","redirectUrl","location","assign","checkAccountSetupComplete","token","convertTokenParamsToOAuthParams","tokenParams","clientId","responseType","oauthParams","codeChallenge","codeChallengeMethod","display","idp","idpScope","loginHint","maxAge","nonce","prompt","redirectUri","responseMode","state","mayBeArray","scopes","scope","buildAuthorizeParams","oauthQueryParams","extraParams","validateOptions","authorizationCode","interactionCode","codeVerifier","getPostData","code","clientSecret","postToTokenEndpoint","urls","tokenUrl","postRefreshToken","refreshToken","client_id","grant_type","refresh_token","getWellKnown","issuer","authServerUri","getKey","kid","wellKnown","jwksUri","cachedKey","clearStorage","addListener","eventTarget","addEventListener","attachEvent","removeListener","removeEventListener","detachEvent","loadFrame","src","iframe","document","createElement","style","body","appendChild","loadPopup","title","popupTitle","appearance","open","addPostMessageListener","timeout","responseHandler","timeoutId","msgReceivedOrTimeout","origin","clearTimeout","generateState","generateNonce","getIssuer","getOAuthBaseUrl","getOAuthDomain","domain","getOAuthUrls","authorizeUrl","userinfoUrl","logoutUrl","revokeUrl","isWindowsPhone","isBrowser","isIE11OrLess","documentMode","getUserAgent","navigator","userAgent","isFingerprintSupported","agent","isPopupPostMessageSupported","isIE8or9","postMessage","isTokenVerifySupported","hasTextEncoder","isPKCESupported","isHTTPS","protocol","isLocalhost","hostname","getDefaultTokenParams","pkce","ignoreSignature","defaultRedirectUri","isInteractionRequiredError","oauthError","isAuthorizationCodeError","authApiError","errorResponse","responseJSON","hasTokensInHash","hasAuthorizationCode","hashOrSearch","hasInteractionCode","hasErrorInUrl","isRedirectUri","uri","authParams","isCodeFlow","getHashOrSearch","codeFlow","useQuery","search","isLoginRedirect","hasCode","isInteractionRequired","createOAuthMeta","oauthMeta","pkceMeta","assertPKCESupport","features","errorMessage","validateCodeChallengeMethod","wellKnownResponse","methods","preparePKCE","PKCE","prepareTokenParams","defaults","isSameRefreshToken","isRefreshTokenError","urlParamsToObject","plus2space","paramSplit","fragment","charAt","param","exec","validateClaims","claims","validationParams","aud","iss","iat","exp","ignoreLifetime","maxClockSkew","isObjectWithProperties","isOAuthTransactionMeta","isPKCETransactionMeta","isIdxTransactionMeta","isCustomAuthTransactionMeta","isAllStringValues","isTransactionMeta","IdxStatus","AuthenticatorKey","IdxFeature","isAuthenticator","id","isToken","isAccessToken","isIDToken","isRefreshToken","validateToken","decodeToken","decodedToken","header","revokeToken","token_type_hint","creds","exchangeCodeForTokens","getTokenOptions","handleResponseOptions","handleOAuthResponse","transactionManager","clear","configuredIssuer","validationOptions","sdkCrypto","valid","at_hash","validateResponse","interaction_code","tokenDict","expiresIn","expires_in","tokenType","token_type","access_token","id_token","accessJwt","decode","Number","idJwt","idTokenObj","tokens","getToken","popupWindow","sessionTokenOverrides","idpOverrides","requestUrl","endpoint","flowType","iframePromise","iframeEl","contains","parentElement","removeChild","oauthPromise","popupPromise","closePoller","setInterval","closed","clearInterval","close","getWithoutPrompt","renewTokensWithRefresh","refreshTokenObject","renewTokenParams","tokenResponse","tokenManager","updateRefreshToken","throwInvalidTokenError","getSingleToken","originalToken","renewToken","getTokensSync","renewTokens","getUserInfo","accessTokenObject","idTokenObject","getTokens","userInfo","sub","authenticateHeader","getResponseHeader","errorMatches","errorDescriptionMatches","errorDescription","getWithPopup","getWithRedirect","meta","save","oauth","_setLocation","removeHash","nativeHistory","parseFromUrl","_getHistory","nativeDoc","_getDocument","nativeLoc","_getLocation","replaceState","pathname","removeSearch","getResponseMode","defaultResponseMode","parseOAuthResponseFromUrl","paramStr","cleanOAuthResponseFromUrl","load","getEnrolledCredentials","authenticatorEnrollments","credentials","enrollement","credentialId","buildCredentialCreationOptions","activationData","publicKey","rp","displayName","challenge","pubKeyCredParams","attestation","authenticatorSelection","excludeCredentials","buildCredentialRequestOptions","challengeData","userVerification","allowCredentials","getAttestation","credential","clientData","clientDataJSON","attestationObject","getAssertion","authenticatorData","signatureData","getPKCEStorage","browserHasLocalStorage","getLocalStorage","testStorage","browserHasSessionStorage","getSessionStorage","testStorageType","storageType","supported","getStorageByType","storageProvider","getCookieStorage","getInMemoryStorage","findStorageType","types","curType","nextType","shift","localStorage","sessionStorage","secure","sameSite","sessionCookie","getItem","setItem","removeItem","useSeparateCookies","k","existingValues","storageKey","valueToStore","inMemoryStore","cookieOptions","expires","Cookies","remove","SdkClock","localOffset","DEFAULT_OPTIONS","autoRenew","autoRemove","syncStorage","clearPendingRemoveTokens","expireEarlySeconds","_storageEventDelay","EVENT_EXPIRED","EVENT_RENEWED","EVENT_ADDED","EVENT_REMOVED","EVENT_ERROR","defaultState","expireTimeouts","renewPromise","TokenManager","emitter","storageOptions","getTokenStorage","clock","create","on","off","setExpireEventTimeoutAll","clearExpireEventTimeoutAll","expireTime","getExpireTime","emit","freshToken","oldToken","newValue","oldValue","oldTokens","getTokensFromStorageValue","newTokens","newToken","emitAdded","emitRemoved","clearExpireEventTimeout","expireEventWait","max","expireEventTimeout","emitExpired","tokenStorage","setExpireEventTimeout","setStorage","getSync","accessTokenCb","idTokenCb","refreshTokenCb","handleTokenCallback","getTokenType","handleAdded","handleRenewed","emitRenewed","handleRemoved","existingTokens","getStorageKeyByType","existingToken","removedToken","renew","setTokens","tokenKey","emitError","pendingRemove","AutoRenewService","renewTimeQueue","onTokenExpiredHandler","firstTime","lastTime","shouldThrottleRenew","canStart","stop","started","SyncStorageService","storageListener","handleCrossTabsStorageChange","resetExpireEventTimeoutAll","emitEventsForCrossTabsStorageUpdate","syncTimeout","ServiceManager","defaultOptions","services","onLeaderDuplicate","onLeader","knownServices","svc","createService","startServices","elector","isLeader","hasLeader","some","srv","requiresLeadership","isLeaderRequired","startElector","stopElector","stopServices","isStarted","start","canUseLeaderElection","channel","broadcastChannelName","BroadcastChannel","createLeaderElection","onduplicate","awaitLeadership","die","service","PromiseQueue","quiet","queue","running","thisObject","run","queueItem","fingerprint","listener","promise","source","INITIAL_AUTH_STATE","DEFAULT_PENDING","updateAuthStatePromise","canceledTimes","EVENT_AUTH_STATE_CHANGE","MAX_PROMISE_CANCEL_TIMES","isSameAuthState","prevState","isAuthenticated","AuthStateManager","_sdk","_pending","_authState","_logOptions","_prevAuthState","_transformQueue","_setLogOptions","event","updateAuthState","transformAuthState","devMode","emitAuthStateChange","authState","finalPromise","origPromise","curPromise","getAuthState","cancelablePromise","PCancelable","_","onCancel","shouldReject","emitAndResolve","isCanceled","handler","SavedObject","storageName","storageString","logServerSideMemoryStorageWarning","StorageManager","storageManagerOptions","sectionName","overrideOptions","storageTypes","idx","getOptionsForSection","transactionStorage","getTransactionStorage","transaction","val","isRawIdxResponse","version","isIdxResponse","rawIdxState","MAX_ENTRY_LIFETIME","pruneSharedStorage","sharedStorage","getSharedTansactionStorage","entries","entry","age","dateCreated","saveTransactionToSharedStorage","loadTransactionFromSharedStorage","clearTransactionFromSharedStorage","TransactionManager","legacyWidgetSupport","saveNonceCookie","saveStateCookie","saveParamsCookie","enableSharedStorage","saveLastResponse","clearIdxResponse","clearSharedStorage","clearLegacyOAuthParams","clearLegacyPKCE","muteWarning","cookieStorage","loadLegacyOAuthParams","loadLegacyPKCE","getLegacyPKCEStorage","getLegacyOAuthParamsStorage","rawIdxResponse","requestDidSucceed","getIdxResponseStorage","storedValue","assertValidConfig","isUrlRegex","RegExp","appJsonContentTypeRegex","readData","toLowerCase","json","formatResult","pair","result","fetchRequest","contentType","fetch","crossFetch","fetchPromise","ok","NodeCache","ServerCookies","nodeCache","ttl","del","ServerStorage","STORAGE_MANAGER_OPTIONS","cache","getCookieSettings","getDefaultOptions","mergeOptions","buildOptions","postLogoutRedirectUri","useInteractionCodeFlow","restoreOriginalUri","flow","recoveryToken","activationToken","createTransactionMeta","hasSavedInteractionHandle","savedMeta","getSavedTransactionMeta","isTransactionMetaValid","getTransactionMeta","validExistingMeta","saveTransactionMeta","clearTransactionMeta","keys","isTransactionMetaValidForOptions","isTransactionMetaValidForFlow","shouldValidateFlow","mismatch","getResponse","interact","redirect_uri","code_challenge","code_challenge_method","activation_token","recovery_token","client_secret","interaction_handle","newMeta","isFieldMutable","field","mutable","divideSingleActionParamsByMutability","action","defaultParamsForAction","neededParamsForAction","immutableParamsForAction","divideActionParamsByMutability","actionList","neededParams","defaultParams","immutableParams","generateDirectFetch","actionDefinition","toPersist","target","accepts","makeIdxState","wwwAuthHeader","idxResponse","stepUp","generateIdxAction","generator","generateRemediationFunctions","remediationValue","remediation","SKIP_FIELDS","parseNonRemediations","actions","context","fieldIsObject","rel","_a","fieldValue","info","subField","expandRelatesTo","query","JSONPath","innerValue","convertRemediationAction","remediationActions","actionFn","parseIdxResponse","remediationData","remediations","neededToProceed","proceed","remediationChoice","paramsFromUser","remediationChoiceObject","findCode","successWithInteractionCode","parsersForVersion","v1","validateVersionConfig","cleanVersion","introspect","savedIdxResponse","loadIdxResponse","stateHandle","Accept","getAllValues","idxRemediation","r","getRequiredValues","required","cur","titleCase","toUpperCase","getAuthenticatorFromRemediation","formatAuthenticator","incoming","authenticator","compareAuthenticators","auth1","auth2","findMatchedOption","authenticators","option","relatesTo","Remediator","values","formatAuthenticators","hasAuthenticatorInList","existing","authenticatorsData","acc","needed","hasData","allValues","getData","_context","getName","inputs","getInputs","getAuthenticator","inputsFromRemediation","inputFromRemediation","input","visible","messages","alias","aliases","inputsFromRemediator","authenticatorFromRemediation","form","enrollmentId","Authenticator","VerificationCodeAuthenticator","verificationCode","otp","passcode","idxRemediationValue","OktaVerifyTotp","totp","OktaPassword","password","SecurityQuestionEnrollment","questionKey","answer","question","label","SecurityQuestionVerification","contextualData","enrolledQuestion","WebauthnEnrollment","WebauthnVerification","OKTA_PASSWORD","SECURITY_QUESTION","OKTA_VERIFY","WEBAUTHN","VerifyAuthenticator","nextStep","canVerify","mapCredentials","trimmedValues","valueKey","EnrollAuthenticator","EnrollPoll","startPolling","step","common","currentAuthenticator","SelectEnrollmentChannel","Boolean","getChannels","EnrollmentChannelData","email","phoneNumber","ChallengeAuthenticator","ChallengePoll","ResetAuthenticator","EnrollProfile","userProfileFromValues","userProfile","userProfileFromRemediation","canRemediate","curr","profileAttributes","attributeNames","attributeValues","attributeName","errorRemediation","errors","Identify","identifier","ReEnrollAuthenticator","newPassword","challengeType","RedirectIdp","SelectAuthenticator","matchedOption","selectedAuthenticator","selectedOption","SelectAuthenticatorAuthenticate","isRecoveryFlow","hasPasswordInOptions","SelectAuthenticatorEnroll","SelectAuthenticatorUnlockAccount","authenticatorMap","methodTypeOption","methodTypeValue","methodType","SelectEnrollProfile","AuthenticatorData","formatAuthenticatorData","getAuthenticatorData","mapAuthenticatorDataFromValues","getMethodTypes","AuthenticatorVerificationData","shouldProceedWithEmailAuthenticator","AuthenticatorEnrollmentData","Skip","skip","isTerminalResponse","canSkipFn","canResendFn","actionName","getMessagesFromIdxRemediationValue","messagesFromForm","optionValues","messagesFromOptions","getMessagesFromResponse","globalMessages","fieldMessages","seen","filtered","i18n","getEnabledFeatures","PASSWORD_RECOVERY","REGISTRATION","SOCIAL_IDP","ACCOUNT_UNLOCK","getAvailableSteps","remediatorMap","remediators","map","remediatorClass","remediationName","T","remediator","getNextStep","filterValuesForRemediation","valuesForRemediation","getRemediator","idxRemediations","remediatorCandidates","isRemeditionInFlow","canSkip","canResend","handleIdxError","terminal","getActionFromValues","resend","removeActionFromValues","removeActionFromOptions","remediate","actionFromValues","actionFromOptions","valuesWithoutExecutedAction","optionsWithoutExecutedAction","canceled","remediationAction","getValuesAfterProceed","AuthenticationFlow","PasswordRecoveryFlow","RegistrationFlow","AccountUnlockFlow","getFlowSpecification","oktaAuth","initializeValues","knownOptions","initializeData","PENDING","getFlow","setFlow","flowSpec","getDataFromIntrospect","interactResponse","getDataFromRemediate","autoRemediate","shouldRemediate","idxResponseFromRemediation","finalizeData","shouldClearTransaction","enabledFeatures","availableSteps","TERMINAL","CANCELED","SUCCESS","handleError","FAILURE","saveIdxResponse","authenticate","EmailVerifyCallbackError","isEmailVerifyCallbackError","isEmailVerifyCallback","urlPath","parseEmailVerifyCallback","handleEmailVerifyCallback","canProceed","availablePollingRemeditaions","startTransaction","register","recoverPassword","handleInteractionCodeRedirect","savedState","unlockAccount","OktaUserAgent","environments","env","maybeAddNodeEnvironment","process","versions","node","OktaAuth","resume","handleLogin","_tokenQueue","useQueue","getWithRedirectFn","getWithRedirectApi","parseFromUrlFn","parseFromUrlApi","history","revoke","syncMethods","boundStartTransaction","http","Emitter","authStateManager","serviceManager","signInWithCredentials","_postToTransaction","sendFingerprint","originalUri","additionalParams","setOriginalUri","accessTokenKey","refreshTokenKey","idTokenHint","logoutUri","defaultUri","currentUri","revokeAccessToken","revokeRefreshToken","getSignOutRedirectUrl","reload","clearTokensBeforeRedirect","addPendingRemoveFlags","shouldRenew","onExpiredToken","shouldRemove","hasExpired","browserStorage","getOriginalUriStorage","getOriginalUri","oAuthResponse","storeTokensFromRedirect","removeOriginalUri","hasResponseType","webauthn","constants"],"mappings":"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"}