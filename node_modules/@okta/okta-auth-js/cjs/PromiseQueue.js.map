{"version":3,"file":"PromiseQueue.js","names":["PromiseQueue","constructor","options","quiet","queue","running","push","method","thisObject","args","resolve","reject","length","warn","run","queueItem","shift","res","apply","isPromise","then","finally"],"sources":["../../lib/PromiseQueue.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise, warn } from './util';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\ninterface PromiseQueueOptions {\n  quiet?: boolean; // if false, concurrrency warnings will not be logged\n}\nclass PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n  options: PromiseQueueOptions;\n\n  constructor(options: PromiseQueueOptions = { quiet: false }) {\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: (...args: any) => any, thisObject: any, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        // There is at least one other pending call.\n        // The PromiseQueue will prevent these methods from running concurrently.\n        if (this.options.quiet !== false) {\n          warn(\n            'Async method is being called but another async method is already running. ' +\n            'The new method will be delayed until the previous method completes.'\n          );\n        }\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var queueItem = this.queue.shift()!;\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args as never) as unknown;\n    if (isPromise(res)) {\n      (res as Promise<unknown>).then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n\nexport default PromiseQueue;"],"mappings":";;;;;;;;AAgBA;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAeA,MAAMA,YAAN,CAAmB;EAKjBC,WAAW,CAACC,OAA4B,GAAG;IAAEC,KAAK,EAAE;EAAT,CAAhC,EAAkD;IAC3D,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKC,OAAL,GAAe,KAAf;IACA,KAAKH,OAAL,GAAeA,OAAf;EACD,CATgB,CAWjB;EACA;EACA;;;EACAI,IAAI,CAACC,MAAD,EAAgCC,UAAhC,EAAiD,GAAGC,IAApD,EAAiE;IACnE,OAAO,qBAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtC,IAAI,KAAKP,KAAL,CAAWQ,MAAX,GAAoB,CAAxB,EAA2B;QACzB;QACA;QACA,IAAI,KAAKV,OAAL,CAAaC,KAAb,KAAuB,KAA3B,EAAkC;UAChC,IAAAU,UAAA,EACE,+EACA,qEAFF;QAID;MACF;;MACD,KAAKT,KAAL,CAAWE,IAAX,CAAgB;QACdC,MADc;QAEdC,UAFc;QAGdC,IAHc;QAIdC,OAJc;QAKdC;MALc,CAAhB;MAOA,KAAKG,GAAL;IACD,CAnBM,CAAP;EAoBD;;EAEDA,GAAG,GAAG;IACJ,IAAI,KAAKT,OAAT,EAAkB;MAChB;IACD;;IACD,IAAI,KAAKD,KAAL,CAAWQ,MAAX,KAAsB,CAA1B,EAA6B;MAC3B;IACD;;IACD,KAAKP,OAAL,GAAe,IAAf,CAPI,CAQJ;;IACA,IAAIU,SAAS,GAAG,KAAKX,KAAL,CAAWY,KAAX,EAAhB;IACA,IAAIC,GAAG,GAAGF,SAAS,CAACR,MAAV,CAAiBW,KAAjB,CAAuBH,SAAS,CAACP,UAAjC,EAA6CO,SAAS,CAACN,IAAvD,CAAV;;IACA,IAAI,IAAAU,eAAA,EAAUF,GAAV,CAAJ,EAAoB;MACjBA,GAAD,CAA0BG,IAA1B,CAA+BL,SAAS,CAACL,OAAzC,EAAkDK,SAAS,CAACJ,MAA5D,EAAoEU,OAApE,CAA4E,MAAM;QAChF,KAAKhB,OAAL,GAAe,KAAf;QACA,KAAKS,GAAL;MACD,CAHD;IAID,CALD,MAKO;MACLC,SAAS,CAACL,OAAV,CAAkBO,GAAlB;MACA,KAAKZ,OAAL,GAAe,KAAf;MACA,KAAKS,GAAL;IACD;EACF;;AA1DgB;;eA6DJd,Y"}