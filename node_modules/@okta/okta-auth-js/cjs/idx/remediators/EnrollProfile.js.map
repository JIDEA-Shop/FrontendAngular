{"version":3,"sources":["../../../../lib/idx/remediators/EnrollProfile.ts"],"names":["EnrollProfile","Remediator","canRemediate","userProfileFromValues","getData","userProfile","userProfileFromRemediation","remediation","value","name","form","curr","required","mapUserProfile","profileAttributes","attributeNames","data","attributeValues","attributeName","length","getInputUserProfile","input","getErrorMessages","errorRemediation","errors","field","messages","push","message"],"mappings":";;;;;;;;;;;;;;;;;;AAeA;;AAfA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYO,MAAMA,aAAN,SAA4BC,sBAA5B,CAA4D;AAGjEC,EAAAA,YAAY,GAAG;AAAA;;AACb,UAAMC,qBAAqB,GAAG,KAAKC,OAAL,GAAeC,WAA7C;;AACA,QAAI,CAACF,qBAAL,EAA4B;AAC1B,aAAO,KAAP;AACD,KAJY,CAKb;;;AACA,UAAMG,0BAA0B,GAAG,mCAAKC,WAAL,CAAiBC,KAAjB,iBAA6B,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcA,IAAI,KAAK,aAApD,CAAnC;AACA,WAAO,iCAAAH,0BAA0B,CAACI,IAA3B,CAAiCF,KAAjC,kBAA8C,CAACN,YAAD,EAAeS,IAAf,KAAwB;AAC3E,UAAIA,IAAI,CAACC,QAAT,EAAmB;AACjBV,QAAAA,YAAY,GAAGA,YAAY,IAAI,CAAC,CAACC,qBAAqB,CAACQ,IAAI,CAACF,IAAN,CAAtD;AACD;;AACD,aAAOP,YAAP;AACD,KALM,EAKJ,IALI,CAAP;AAMD;;AAEDW,EAAAA,cAAc,CAAC;AAACH,IAAAA,IAAI,EAAE;AAAEF,MAAAA,KAAK,EAAEM;AAAT;AAAP,GAAD,EAAuC;AACnD,UAAMC,cAAc,GAAG,kBAAAD,iBAAiB,MAAjB,CAAAA,iBAAiB,EAAK,CAAC;AAACL,MAAAA;AAAD,KAAD,KAAYA,IAAjB,CAAxC;AACA,UAAMO,IAAI,GAAG,qBAAAD,cAAc,MAAd,CAAAA,cAAc,EAAQ,CAACE,eAAD,EAAkBC,aAAlB,KACjC,2BAAYA,aAAZ,IAA6B,EAC7B,GAAGD,eAD0B;AAE7B,OAACC,aAAD,GAAiB,2BAAYA,aAAZ;AAFY,KAA7B,GAGED,eAJuB,EAIL,EAJK,CAA3B;;AAKA,QAAI,mBAAYD,IAAZ,EAAkBG,MAAlB,KAA6B,CAAjC,EAAoC;AAClC;AACD;;AACD,WAAOH,IAAP;AACD;;AAEDI,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACzB,WAAO,CAAC,GAAGA,KAAK,CAACX,IAAN,CAAWF,KAAf,CAAP;AACD;;AAEDc,EAAAA,gBAAgB,CAACC,gBAAD,EAAmB;AAAA;;AACjC,WAAO,iCAAAA,gBAAgB,CAACf,KAAjB,CAAuB,CAAvB,EAA0BE,IAA1B,CAA+BF,KAA/B,kBAA4C,CAACgB,MAAD,EAASC,KAAT,KAAmB;AACpE,UAAIA,KAAK,CAACC,QAAV,EAAoB;AAClBF,QAAAA,MAAM,CAACG,IAAP,CAAYF,KAAK,CAACC,QAAN,CAAelB,KAAf,CAAqB,CAArB,EAAwBoB,OAApC;AACD;;AACD,aAAOJ,MAAP;AACD,KALM,EAKJ,EALI,CAAP;AAMD;;AA1CgE;;;8BAAtDxB,a,qBACc,gB","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediationValue } from '../types/idx-js';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n}\n\nexport class EnrollProfile extends Remediator<EnrollProfileValues> {\n  static remediationName = 'enroll-profile';\n\n  canRemediate() {\n    const userProfileFromValues = this.getData().userProfile;\n    if (!userProfileFromValues) {\n      return false;\n    }\n    // eslint-disable-next-line max-len\n    const userProfileFromRemediation = this.remediation.value!.find(({ name }) => name === 'userProfile') as IdxRemediationValue;\n    return userProfileFromRemediation.form!.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n    return data;\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}"],"file":"EnrollProfile.js"}