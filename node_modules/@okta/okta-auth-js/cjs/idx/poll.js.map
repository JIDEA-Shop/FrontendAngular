{"version":3,"file":"poll.js","names":["poll","authClient","options","transaction","proceed","startPolling","meta","getSavedTransactionMeta","availablePollingRemeditaions","remediations","remediation","length","warn","refresh","resolve","reject","setTimeout","nextStep","err"],"sources":["../../../lib/idx/poll.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed';\n\nimport { \n  IdxPollOptions,\n  IdxTransaction,\n  OktaAuthIdxInterface,\n} from '../types';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { warn } from '../util';\n\nexport async function poll(authClient: OktaAuthIdxInterface, options: IdxPollOptions = {}): Promise<IdxTransaction> {\n  let transaction = await proceed(authClient, {\n    startPolling: true\n  });\n\n  const meta = getSavedTransactionMeta(authClient);\n  let availablePollingRemeditaions = meta?.remediations?.find(remediation => remediation.includes('poll'));\n  if (!availablePollingRemeditaions?.length) {\n    warn('No polling remediations available at the current IDX flow stage');\n  }\n\n  if (Number.isInteger(options.refresh)) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(async function () {\n        try {\n          const refresh = transaction.nextStep?.poll?.refresh;\n          if (refresh) {\n            resolve(poll(authClient, {\n              refresh\n            }));\n          } else {\n            resolve(transaction);\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }, options.refresh);\n    });\n  }\n\n  return transaction;\n}\n"],"mappings":";;;;;;;;;;;;;;AAYA;;AAOA;;AACA;;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYO,eAAeA,IAAf,CAAoBC,UAApB,EAAsDC,OAAuB,GAAG,EAAhF,EAA6G;EAAA;;EAClH,IAAIC,WAAW,GAAG,MAAM,IAAAC,gBAAA,EAAQH,UAAR,EAAoB;IAC1CI,YAAY,EAAE;EAD4B,CAApB,CAAxB;EAIA,MAAMC,IAAI,GAAG,IAAAC,wCAAA,EAAwBN,UAAxB,CAAb;EACA,IAAIO,4BAA4B,GAAGF,IAAH,aAAGA,IAAH,6CAAGA,IAAI,CAAEG,YAAT,uDAAG,gEAAyBC,WAAW,IAAI,uBAAAA,WAAW,MAAX,CAAAA,WAAW,EAAU,MAAV,CAAnD,CAAnC;;EACA,IAAI,EAACF,4BAAD,aAACA,4BAAD,eAACA,4BAA4B,CAAEG,MAA/B,CAAJ,EAA2C;IACzC,IAAAC,UAAA,EAAK,iEAAL;EACD;;EAED,IAAI,wBAAiBV,OAAO,CAACW,OAAzB,CAAJ,EAAuC;IACrC,OAAO,qBAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;MAC5CC,UAAU,CAAC,kBAAkB;QAC3B,IAAI;UAAA;;UACF,MAAMH,OAAO,4BAAGV,WAAW,CAACc,QAAf,oFAAG,sBAAsBjB,IAAzB,2DAAG,uBAA4Ba,OAA5C;;UACA,IAAIA,OAAJ,EAAa;YACXC,OAAO,CAACd,IAAI,CAACC,UAAD,EAAa;cACvBY;YADuB,CAAb,CAAL,CAAP;UAGD,CAJD,MAIO;YACLC,OAAO,CAACX,WAAD,CAAP;UACD;QACF,CATD,CASE,OAAOe,GAAP,EAAY;UACZH,MAAM,CAACG,GAAD,CAAN;QACD;MACF,CAbS,EAaPhB,OAAO,CAACW,OAbD,CAAV;IAcD,CAfM,CAAP;EAgBD;;EAED,OAAOV,WAAP;AACD"}