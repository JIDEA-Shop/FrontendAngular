{"version":3,"file":"util.js","names":["isTerminalResponse","idxResponse","neededToProceed","interactionCode","length","canSkipFn","some","name","canResendFn","actions","actionName","getMessagesFromIdxRemediationValue","value","Array","isArray","messages","form","messagesFromForm","options","optionValues","forEach","option","messagesFromOptions","getMessagesFromResponse","rawIdxState","globalMessages","message","useGenericRemediator","remediation","fieldMessages","seen","filtered","key","i18n","getEnabledFeatures","res","push","IdxFeature","PASSWORD_RECOVERY","REGISTRATION","SOCIAL_IDP","ACCOUNT_UNLOCK","getAvailableSteps","authClient","remediatorMap","remediators","map","remediatorClass","remediationName","T","getRemediatorClass","remediator","getNextStep","context","stepObj","action","params","idx","proceed","part1","part2","split2","actionObj","href","method","rel","accepts","produces","rest","item","filterValuesForRemediation","values","remediations","r","warn","valuesForRemediation","entry","undefined","GenericRemediator","getRemediator","idxRemediations","step","remediatorCandidates","isRemeditionInFlow","canRemediate","nextStep","canSkip","canResend","handleIdxError","e","isIdxResponse","requestDidSucceed","terminal"],"sources":["../../../lib/idx/util.ts"],"sourcesContent":["import { warn, split2 } from '../util';\nimport * as remediators from './remediators';\nimport { RemediationValues, Remediator, RemediatorConstructor } from './remediators';\nimport { GenericRemediator } from './remediators/GenericRemediator';\nimport { IdxFeature, NextStep, RemediateOptions, RemediationResponse, RunOptions } from './types';\nimport { IdxMessage, IdxRemediation, IdxRemediationValue, IdxResponse, isIdxResponse } from './types/idx-js';\nimport { OktaAuthIdxInterface } from '../types';\n\nexport function isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nexport function canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nexport function canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nexport function getMessagesFromIdxRemediationValue(\n  value?: IdxRemediationValue[]\n): IdxMessage[] | undefined {\n  if (!value || !Array.isArray(value)) {\n    return;\n  }\n  return value.reduce((messages, value) => {\n    if (value.messages) {\n      messages = [...messages, ...value.messages.value] as never;\n    }\n    if (value.form) {\n      const messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n      messages = [...messages, ...messagesFromForm] as never;\n    } \n    if (value.options) {\n      let optionValues = [];\n      value.options.forEach(option => {\n        if (!option.value || typeof option.value === 'string') {\n          return;\n        }\n        optionValues = [...optionValues, option.value] as never;\n      });\n      const messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n      messages = [...messages, ...messagesFromOptions] as never;\n    }\n    return messages;\n  }, []);\n}\n\nexport function getMessagesFromResponse(idxResponse: IdxResponse, options: RunOptions): IdxMessage[] {\n  let messages: IdxMessage[] = [];\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages] as never;\n  }\n\n  // Handle field messages for current flow\n  // Preserve existing logic for general cases, remove in the next major version\n  // Follow ion response format for top level messages when useGenericRemediator is true\n  if (!options.useGenericRemediator) {\n    for (let remediation of neededToProceed) {\n      const fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n      if (fieldMessages) {\n        messages = [...messages, ...fieldMessages] as never;\n      }\n    }\n  }\n\n  // API may return identical error on same field, filter by i18n key\n  const seen = {};\n  messages = messages.reduce((filtered, message) => {\n    const key = message.i18n?.key;\n    if (key && seen[key]) {\n      return filtered;\n    }\n    seen[key] = message;\n    filtered = [...filtered, message] as never;\n    return filtered;\n  }, []);\n  return messages;\n}\n\n\nexport function getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'unlock-account')) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK as never);\n  }\n\n  return res;\n}\n\nexport function getAvailableSteps(\n  authClient: OktaAuthIdxInterface, \n  idxResponse: IdxResponse, \n  useGenericRemediator?: boolean\n): NextStep[] {\n  const res: NextStep[] = [];\n\n  const remediatorMap: Record<string, RemediatorConstructor> = Object.values(remediators)\n    .reduce((map, remediatorClass) => {\n      // Only add concrete subclasses to the map\n      if (remediatorClass.remediationName) {\n        map[remediatorClass.remediationName] = remediatorClass;\n      }\n      return map;\n    }, {});\n\n  for (let remediation of idxResponse.neededToProceed) {\n    const T = getRemediatorClass(remediation, { useGenericRemediator, remediators: remediatorMap });\n    if (T) {\n      const remediator: Remediator = new T(remediation);\n      res.push (remediator.getNextStep(authClient, idxResponse.context) as never);\n    }\n  }\n\n  for (const [name] of Object.entries((idxResponse.actions || {}))) {\n    let stepObj = {\n      name, \n      action: async (params?) => {\n        return authClient.idx.proceed({ \n          actions: [{ name, params }] \n        });\n      }\n    };\n    if (name.startsWith('currentAuthenticator')) {\n      const [part1, part2] = split2(name, '-');\n      const actionObj = idxResponse.rawIdxState[part1].value[part2];\n      /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const {\n        href, \n        method, \n        rel, \n        accepts, \n        produces, \n        ...rest\n      } = actionObj;\n      /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const value = actionObj.value?.filter(item => item.name !== 'stateHandle');\n      stepObj = { \n        ...rest,  \n        ...(value && { value }),\n        ...stepObj,\n      };\n    }\n    res.push(stepObj);\n  }\n\n  return res;\n}\n\nexport function filterValuesForRemediation(\n  idxResponse: IdxResponse,\n  remediationName: string,\n  values: RemediationValues\n): RemediationValues {\n  const remediations = idxResponse.neededToProceed || [];\n  const remediation = remediations.find(r => r.name === remediationName);\n  if (!remediation) {\n    // step was specified, but remediation was not found. This is unexpected!\n    warn(`filterValuesForRemediation: \"${remediationName}\" did not match any remediations`);\n    return values;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const valuesForRemediation = remediation.value!.reduce((res, entry) => {\n    const { name, value } = entry;\n    if (name === 'stateHandle') {\n      res[name] = value; // use the stateHandle value in the remediation\n    } else {\n      res[name] = values[name]; // use the value provided by the caller\n    }\n    return res;\n  }, {});\n  return valuesForRemediation;\n}\n\nfunction getRemediatorClass(remediation: IdxRemediation, options: RemediateOptions) {\n  const { useGenericRemediator, remediators } = options;\n  \n  if (!remediation) {\n    return undefined;\n  }\n\n  if (useGenericRemediator) {\n    return GenericRemediator;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediators![remediation.name];\n}\n\n// Return first match idxRemediation in allowed remediators\n// eslint-disable-next-line complexity\nexport function getRemediator(\n  idxRemediations: IdxRemediation[],\n  values: RemediationValues,\n  options: RemediateOptions,\n): Remediator | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const remediators = options.remediators!;\n  const useGenericRemediator = options.useGenericRemediator;\n\n  let remediator: Remediator;\n  // remediation name specified by caller - fast-track remediator lookup \n  if (options.step) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediation = idxRemediations.find(({ name }) => name === options.step)!;\n    if (remediation) {\n      const T = getRemediatorClass(remediation, options);\n      return T ? new T(remediation, values, options) : undefined;\n    } else {\n      // step was specified, but remediation was not found. This is unexpected!\n      warn(`step \"${options.step}\" did not match any remediations`);\n      return;\n    }\n  }\n\n  const remediatorCandidates: Remediator[] = [];\n  if (useGenericRemediator) {\n    // always pick the first remediation for when use GenericRemediator\n    remediatorCandidates.push(new GenericRemediator(idxRemediations[0], values, options));\n  } else {\n    for (let remediation of idxRemediations) {\n      const isRemeditionInFlow = Object.keys(remediators as object).includes(remediation.name);\n      if (!isRemeditionInFlow) {\n        continue;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const T = getRemediatorClass(remediation, options)!;\n      remediator = new T(remediation, values, options);\n      if (remediator.canRemediate()) {\n        // found the remediator\n        return remediator;\n      }\n      // remediator cannot handle the current values\n      // maybe return for next step\n      remediatorCandidates.push(remediator);  \n    }\n  }\n  \n  return remediatorCandidates[0];\n}\n\n\nexport function getNextStep(\n  authClient: OktaAuthIdxInterface, remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep(authClient, idxResponse.context);\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nexport function handleIdxError(authClient: OktaAuthIdxInterface, e, options = {}): RemediationResponse {\n  // Handle idx messages\n  let idxResponse = isIdxResponse(e) ? e : null;\n  if (!idxResponse) {\n    // Thrown error terminates the interaction with idx\n    throw e;\n  }\n  idxResponse = {\n    ...idxResponse,\n    requestDidSucceed: false\n  };\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse, options);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  } else {\n    const remediator = getRemediator(idxResponse.neededToProceed, {}, options);\n    const nextStep = remediator && getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      messages,\n      ...(nextStep && { nextStep }),\n    };\n  }\n  \n}\n"],"mappings":"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"}