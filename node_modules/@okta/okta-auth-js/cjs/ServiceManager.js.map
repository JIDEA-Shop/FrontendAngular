{"version":3,"file":"ServiceManager.js","names":["AUTO_RENEW","SYNC_STORAGE","LEADER_ELECTION","ServiceManager","constructor","sdk","options","onLeader","bind","autoRenew","autoRemove","syncStorage","tokenManager","getOptions","electionChannelName","broadcastChannelName","defaultOptions","clientId","syncChannelName","removeNils","started","services","knownServices","forEach","name","svc","createService","set","startServices","isLeader","getService","isLeaderRequired","some","srv","canStart","requiresLeadership","start","stop","stopServices","get","canStartService","isStarted","service","LeaderElectionService","AutoRenewService","SyncStorageService","Error"],"sources":["../../lib/ServiceManager.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport {\n  ServiceManagerInterface,\n  ServiceInterface,\n  ServiceManagerOptions\n} from './types';\nimport { OktaAuth } from '.';\nimport { AutoRenewService, SyncStorageService, LeaderElectionService } from './services';\nimport { removeNils } from './util';\n\nconst AUTO_RENEW = 'autoRenew';\nconst SYNC_STORAGE = 'syncStorage';\nconst LEADER_ELECTION = 'leaderElection';\n\nexport class ServiceManager implements ServiceManagerInterface {\n  private sdk: OktaAuth;\n  private options: ServiceManagerOptions;\n  private services: Map<string, ServiceInterface>;\n  private started: boolean;\n\n  private static knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION];\n\n  private static defaultOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true\n  };\n\n  constructor(sdk: OktaAuth, options: ServiceManagerOptions = {}) {\n    this.sdk = sdk;\n    this.onLeader = this.onLeader.bind(this);\n\n    // TODO: backwards compatibility, remove in next major version - OKTA-473815\n    const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n    options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n    this.options = Object.assign({}, \n      ServiceManager.defaultOptions,\n      { autoRenew, autoRemove, syncStorage }, \n      {\n        electionChannelName: `${sdk.options.clientId}-election`,\n        syncChannelName: `${sdk.options.clientId}-sync`,\n      },\n      removeNils(options)\n    );\n\n    this.started = false;\n    this.services = new Map();\n\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  private async onLeader() {\n    if (this.started) {\n      // Start services that requires leadership\n      await this.startServices();\n    }\n  }\n\n  isLeader() {\n    return (this.getService(LEADER_ELECTION) as LeaderElectionService)?.isLeader();\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.canStart() && srv.requiresLeadership());\n  }\n\n  async start() {\n    if (this.started) {\n      return;     // noop if services have already started\n    }\n    await this.startServices();\n    this.started = true;\n  }\n  \n  async stop() {\n    await this.stopServices();\n    this.started = false;\n  }\n\n  getService(name: string): ServiceInterface | undefined {\n    return this.services.get(name);\n  }\n\n  private async startServices() {\n    for (const [name, srv] of this.services.entries()) {\n      if (this.canStartService(name, srv)) {\n        await srv.start();\n      }\n    }\n  }\n\n  private async stopServices() {\n    for (const srv of this.services.values()) {\n      await srv.stop();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private canStartService(name: string, srv: ServiceInterface): boolean {\n    let canStart = srv.canStart() && !srv.isStarted();\n    // only start election if a leader is required\n    if (name === LEADER_ELECTION) {\n      canStart &&= this.isLeaderRequired();\n    } else if (srv.requiresLeadership()) {\n      canStart &&= this.isLeader();\n    }\n    return canStart;\n  }\n\n  private createService(name: string): ServiceInterface {\n    const tokenManager = this.sdk.tokenManager;\n\n    let service: ServiceInterface;\n    switch (name) {\n      case LEADER_ELECTION:\n        service = new LeaderElectionService({...this.options, onLeader: this.onLeader});\n        break;\n      case AUTO_RENEW:\n        service = new AutoRenewService(tokenManager, {...this.options});\n        break;\n      case SYNC_STORAGE:\n        service = new SyncStorageService(tokenManager, {...this.options});\n        break;\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n    return service;\n  }\n\n}\n"],"mappings":"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"}