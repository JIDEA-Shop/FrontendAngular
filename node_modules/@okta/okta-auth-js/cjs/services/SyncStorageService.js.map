{"version":3,"file":"SyncStorageService.js","names":["SyncStorageService","constructor","tokenManager","options","onTokenAddedHandler","bind","onTokenRemovedHandler","onTokenRenewedHandler","onSetStorageHandler","onSyncMessageHandler","requiresLeadership","isStarted","started","canStart","syncStorage","isBrowser","hasSharedStorage","start","stop","syncChannelName","channel","BroadcastChannel","on","EVENT_ADDED","EVENT_REMOVED","EVENT_RENEWED","EVENT_SET_STORAGE","addEventListener","off","removeEventListener","close","undefined","key","token","enablePostMessage","postMessage","type","oldToken","storage","msg","getStorage","setStorage","emitAdded","setExpireEventTimeout","clearExpireEventTimeout","emitRemoved","emitRenewed"],"sources":["../../../lib/services/SyncStorageService.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { TokenManager } from '../TokenManager';\nimport { BroadcastChannel } from 'broadcast-channel';\nimport { isBrowser } from '../features';\nimport {\n  ServiceManagerOptions, ServiceInterface, Token, Tokens, \n  EVENT_ADDED, EVENT_REMOVED, EVENT_RENEWED, EVENT_SET_STORAGE\n} from '../types';\n\nexport type SyncMessage = {\n  type: string;\n  key?: string;\n  token?: Token;\n  oldToken?: Token;\n  storage?: Tokens;\n};\nexport class SyncStorageService implements ServiceInterface {\n  private tokenManager: TokenManager;\n  private options: ServiceManagerOptions;\n  private channel?: BroadcastChannel<SyncMessage>;\n  private started = false;\n  private enablePostMessage = true;\n\n  constructor(tokenManager: TokenManager, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.onTokenAddedHandler = this.onTokenAddedHandler.bind(this);\n    this.onTokenRemovedHandler = this.onTokenRemovedHandler.bind(this);\n    this.onTokenRenewedHandler = this.onTokenRenewedHandler.bind(this);\n    this.onSetStorageHandler = this.onSetStorageHandler.bind(this);\n    this.onSyncMessageHandler = this.onSyncMessageHandler.bind(this);\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    // TODO: canStart logic should depend on canUse logic from broadcast-channel \n    // instead of the storage that TokenManager uses\n    // JIRA: https://oktainc.atlassian.net/browse/OKTA-529631\n    return !!this.options.syncStorage && isBrowser() && this.tokenManager.hasSharedStorage();\n  }\n\n  async start() {\n    if (this.canStart()) {\n      await this.stop();\n      const { syncChannelName } = this.options;\n      this.channel = new BroadcastChannel(syncChannelName as string);\n      this.tokenManager.on(EVENT_ADDED, this.onTokenAddedHandler);\n      this.tokenManager.on(EVENT_REMOVED, this.onTokenRemovedHandler);\n      this.tokenManager.on(EVENT_RENEWED, this.onTokenRenewedHandler);\n      this.tokenManager.on(EVENT_SET_STORAGE, this.onSetStorageHandler);\n      this.channel.addEventListener('message', this.onSyncMessageHandler);\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_ADDED, this.onTokenAddedHandler);\n      this.tokenManager.off(EVENT_REMOVED, this.onTokenRemovedHandler);\n      this.tokenManager.off(EVENT_RENEWED, this.onTokenRenewedHandler);\n      this.tokenManager.off(EVENT_SET_STORAGE, this.onSetStorageHandler);\n      this.channel?.removeEventListener('message', this.onSyncMessageHandler);\n      await this.channel?.close();\n      this.channel = undefined;\n      this.started = false;\n    }\n  }\n\n  private onTokenAddedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_ADDED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRemovedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_REMOVED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRenewedHandler(key: string, token: Token, oldToken?: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_RENEWED,\n      key,\n      token,\n      oldToken\n    });\n  }\n\n  private onSetStorageHandler(storage: Tokens) {\n    this.channel?.postMessage({\n      type: EVENT_SET_STORAGE,\n      storage\n    });\n  }\n\n  /* eslint-disable complexity */\n  private onSyncMessageHandler(msg: SyncMessage) {\n    // Notes:\n    // 1. Using `enablePostMessage` flag here to prevent sync message loop.\n    //    If this flag is on, tokenManager event handlers do not post sync message.\n    // 2. IE11 has known issue with synchronization of LocalStorage cross tabs.\n    //    One workaround is to set empty event handler for `window.onstorage`.\n    //    But it's not 100% working, sometimes you still get old value from LocalStorage.\n    //    Better approch is to explicitly udpate LocalStorage with `setStorage`.\n\n    this.enablePostMessage = false;\n    switch (msg.type) {\n      case EVENT_SET_STORAGE:\n        this.tokenManager.getStorage().setStorage(msg.storage);\n        break;\n      case EVENT_ADDED:\n        this.tokenManager.emitAdded(msg.key, msg.token);\n        this.tokenManager.setExpireEventTimeout(msg.key, msg.token);\n        break;\n      case EVENT_REMOVED:\n        this.tokenManager.clearExpireEventTimeout(msg.key);\n        this.tokenManager.emitRemoved(msg.key, msg.token);\n        break;\n      case EVENT_RENEWED:\n        this.tokenManager.emitRenewed(msg.key, msg.token, msg.oldToken);\n        break;\n      default:\n        break;\n    }\n    this.enablePostMessage = true;\n  }\n} "],"mappings":"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"}