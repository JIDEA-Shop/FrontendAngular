{"version":3,"file":"TransactionManager.js","names":["TransactionManager","constructor","options","storageManager","legacyWidgetSupport","saveNonceCookie","saveStateCookie","saveParamsCookie","enableSharedStorage","saveLastResponse","clear","transactionStorage","getTransactionStorage","meta","getStorage","clearStorage","clearSharedStorage","state","clearTransactionFromSharedStorage","clearIdxResponse","oauth","clearLegacyOAuthParams","pkce","clearLegacyPKCE","save","storage","obj","isTransactionMeta","muteWarning","warn","setStorage","saveTransactionToSharedStorage","cookieStorage","storageType","responseType","nonce","scopes","clientId","urls","ignoreSignature","oauthParams","setItem","REDIRECT_OAUTH_PARAMS_NAME","REDIRECT_NONCE_COOKIE_NAME","REDIRECT_STATE_COOKIE_NAME","exists","load","pruneSharedStorage","loadTransactionFromSharedStorage","loadLegacyOAuthParams","pkceMeta","loadLegacyPKCE","storageUtil","testStorageType","getLegacyPKCEStorage","codeVerifier","AuthSdkError","undefined","getLegacyOAuthParamsStorage","isOAuthTransactionMeta","saveIdxResponse","data","getIdxResponseStorage","loadIdxResponse","storedValue","isRawIdxResponse","rawIdxResponse","stateHandle","interactionHandle"],"sources":["../../lib/TransactionManager.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from './errors';\nimport { REDIRECT_NONCE_COOKIE_NAME, REDIRECT_OAUTH_PARAMS_NAME, REDIRECT_STATE_COOKIE_NAME } from './constants';\nimport { StorageManager } from './StorageManager';\nimport {\n  StorageProvider,\n  TransactionMeta,\n  isTransactionMeta,\n  isOAuthTransactionMeta,\n  PKCETransactionMeta,\n  OAuthTransactionMeta,\n  TransactionMetaOptions,\n  TransactionManagerOptions,\n  CookieStorage,\n  SavedIdxResponse,\n  IntrospectOptions\n} from './types';\nimport { isRawIdxResponse } from './idx/types/idx-js';\nimport { warn } from './util';\nimport {\n  clearTransactionFromSharedStorage,\n  loadTransactionFromSharedStorage,\n  pruneSharedStorage,\n  saveTransactionToSharedStorage\n} from './util/sharedStorage';\n\nexport interface ClearTransactionMetaOptions extends TransactionMetaOptions {\n  clearSharedStorage?: boolean; // true by default\n  clearIdxResponse?: boolean; // true by default\n}\nexport default class TransactionManager {\n  options: TransactionManagerOptions;\n  storageManager: StorageManager;\n  legacyWidgetSupport: boolean;\n  saveNonceCookie: boolean;\n  saveStateCookie: boolean;\n  saveParamsCookie: boolean;\n  enableSharedStorage: boolean;\n  saveLastResponse: boolean;\n\n  constructor(options: TransactionManagerOptions) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.storageManager = options.storageManager!;\n    this.legacyWidgetSupport = options.legacyWidgetSupport === false ? false : true;\n    this.saveNonceCookie = options.saveNonceCookie === false ? false : true;\n    this.saveStateCookie = options.saveStateCookie === false ? false : true;\n    this.saveParamsCookie = options.saveParamsCookie === false ? false : true;\n    this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n    this.saveLastResponse = options.saveLastResponse === false ? false : true;\n    this.options = options;\n  }\n\n  // eslint-disable-next-line complexity\n  clear(options: ClearTransactionMetaOptions = {}) {\n    const transactionStorage: StorageProvider = this.storageManager.getTransactionStorage();\n    const meta = transactionStorage.getStorage();\n\n    // Clear primary storage (by default, sessionStorage on browser)\n    transactionStorage.clearStorage();\n\n    // Usually we want to also clear shared storage unless another tab may need it to continue/complete a flow\n    if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n      const state = options.state || meta?.state;\n      if (state) {\n        clearTransactionFromSharedStorage(this.storageManager, state);\n      }\n    }\n\n    if (options.clearIdxResponse !== false) {\n      this.clearIdxResponse();\n    }\n    \n    if (!this.legacyWidgetSupport) {\n      return;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      this.clearLegacyOAuthParams();\n    }\n\n    if (options.pkce) {\n      this.clearLegacyPKCE();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  save(meta: TransactionMeta, options: TransactionMetaOptions = {}) {\n    // There must be only one transaction executing at a time.\n    // Before saving, check to see if a transaction is already stored.\n    // An existing transaction indicates a concurrency/race/overlap condition\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    const obj = storage.getStorage();\n    // oie process may need to update transaction in the middle of process for tracking purpose\n    // false alarm might be caused \n    // TODO: revisit for a better solution, https://oktainc.atlassian.net/browse/OKTA-430919\n    if (isTransactionMeta(obj) && !options.muteWarning) {\n      // eslint-disable-next-line max-len\n      warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n    }\n\n    storage.setStorage(meta);\n\n    // Shared storage allows continuation of transaction in another tab\n    if (this.enableSharedStorage && meta.state) {\n      saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n    }\n\n    if (!options.oauth) {\n      return;\n    }\n  \n    // Legacy cookie storage\n    if (this.saveNonceCookie || this.saveStateCookie || this.saveParamsCookie) {\n      const cookieStorage: CookieStorage = this.storageManager.getStorage({ storageType: 'cookie' }) as CookieStorage;\n\n      if (this.saveParamsCookie) {\n        const { \n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        } = meta;\n        const oauthParams = {\n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        };\n        cookieStorage.setItem(REDIRECT_OAUTH_PARAMS_NAME, JSON.stringify(oauthParams), null);\n      }\n\n      if (this.saveNonceCookie && meta.nonce) {\n        // Set nonce cookie for servers to validate nonce in id_token\n        cookieStorage.setItem(REDIRECT_NONCE_COOKIE_NAME, meta.nonce, null);\n      }\n\n      if (this.saveStateCookie && meta.state) {\n        // Set state cookie for servers to validate state\n        cookieStorage.setItem(REDIRECT_STATE_COOKIE_NAME, meta.state, null);\n      }\n    }\n  }\n\n  exists(options: TransactionMetaOptions = {}): boolean {\n    try {\n      const meta = this.load(options);\n      return !!meta;\n    } catch {\n      return false;\n    }\n  }\n\n  // load transaction meta from storage\n  // eslint-disable-next-line complexity,max-statements\n  load(options: TransactionMetaOptions = {}): TransactionMeta | null {\n\n    let meta: TransactionMeta;\n\n    // If state was passed, try loading transaction data from shared storage\n    if (this.enableSharedStorage && options.state) {\n      pruneSharedStorage(this.storageManager); // prune before load\n      meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n      if (isTransactionMeta(meta)) {\n        return meta;\n      }\n    }\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    meta = storage.getStorage();\n    if (isTransactionMeta(meta)) {\n      // if we have meta in the new location, there is no need to go further\n      return meta;\n    }\n\n    if (!this.legacyWidgetSupport) {\n      return null;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      try {\n        const oauthParams = this.loadLegacyOAuthParams();\n        Object.assign(meta, oauthParams);\n      } finally {\n        this.clearLegacyOAuthParams();\n      }\n    }\n\n    if (options.pkce) {\n      try {\n        const pkceMeta: PKCETransactionMeta = this.loadLegacyPKCE();\n        Object.assign(meta, pkceMeta);\n      } finally {\n        this.clearLegacyPKCE();\n      }\n    }\n\n    if (isTransactionMeta(meta)) {\n      return meta;\n    }\n    return null;\n  }\n\n  // This is for compatibility with older versions of the signin widget. OKTA-304806\n  clearLegacyPKCE(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyPKCE(): PKCETransactionMeta {\n    let storage: StorageProvider;\n    let obj;\n    \n    // Try reading from localStorage first.\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n\n    // If meta is not valid, read from sessionStorage. This is expected for more recent versions of the widget.\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n    \n    // If meta is not valid, throw an exception to avoid misleading server-side error\n    // The most likely cause of this error is trying to handle a callback twice\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n  }\n\n  clearLegacyOAuthParams(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyOAuthParams(): OAuthTransactionMeta {\n    let storage: StorageProvider;\n    let oauthParams;\n  \n    // load first from session storage\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      oauthParams = storage.getStorage();\n    }\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n    // try to load from cookie\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      oauthParams = storage.getStorage();\n    }\n\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n\n    // Something is there but we don't recognize it\n    // throw new AuthSdkError('Unable to parse the ' + REDIRECT_OAUTH_PARAMS_NAME + ' value from storage');\n  }\n\n  saveIdxResponse(data: SavedIdxResponse): void {\n    if (!this.saveLastResponse) {\n      return;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return;\n    }\n    storage.setStorage(data);\n  }\n\n  // eslint-disable-next-line complexity\n  loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null {\n    if (!this.saveLastResponse) {\n      return null;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return null;\n    }\n    const storedValue = storage.getStorage();\n    if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n      return null;\n    }\n\n    if (options) {\n      const { stateHandle, interactionHandle } = options;\n      if (stateHandle && storedValue.stateHandle !== stateHandle) {\n        return null;\n      }\n      if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n        return null;\n      }\n    }\n\n    return storedValue;\n  }\n\n  clearIdxResponse(): void {\n    if (!this.saveLastResponse) {\n      return;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    storage?.clearStorage();\n  }\n}"],"mappings":"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"}